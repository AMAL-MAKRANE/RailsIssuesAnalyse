id,title,body,created_at,updated_at,labels;;;;;
"2229968422,Improve ActionCable redis config example [skip ci],""While using `{}` inside yaml files is valid and will be correctly parsed, it looks strange and not idiomatic."",2024-04-07T21:32:04Z,2024-04-07T21:32:08Z,""[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2229766221,Skip ActiveStorage previewer tests if required tools are unavailable,""These tests require certain tools to be available, if they aren't these tests will fail. Skip instead."",2024-04-07T13:14:48Z,2024-04-07T13:14:53Z,""[{'id': 664533972, 'node_id': 'MDU6TGFiZWw2NjQ1MzM5NzI=', 'url': 'https://api.github.com/repos/rails/rails/labels/activestorage', 'name': 'activestorage', 'color': 'bfd4f2', 'default': False, 'description': None}]""";;;;;
"2229284323,Remove usage of `OpenStruct`,""Follow up to https://github.com/rails/rails/pull/51491#issuecomment-2037429653.";;;;;
;;;;;
"There was one more error regarding the missing `require """"ostruct""""` after that PR merge (https://buildkite.com/rails/rails/builds/106158#018eaee1-7e2b-4e8a-9876-8d3c358d5576), so maybe we can just remove its usage instead?";;;;;
;;;;;
"cc @byroot "",2024-04-06T14:58:05Z,2024-04-06T18:57:07Z,""[{'id': 107188, 'node_id': 'MDU6TGFiZWwxMDcxODg=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionmailer', 'name': 'actionmailer', 'color': '8B00FC', 'default': False, 'description': None}, {'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}, {'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}, {'id': 3666649, 'node_id': 'MDU6TGFiZWwzNjY2NjQ5', 'url': 'https://api.github.com/repos/rails/rails/labels/actionview', 'name': 'actionview', 'color': 'd7e102', 'default': False, 'description': None}, {'id': 123812746, 'node_id': 'MDU6TGFiZWwxMjM4MTI3NDY=', 'url': 'https://api.github.com/repos/rails/rails/labels/activejob', 'name': 'activejob', 'color': '5319e7', 'default': False, 'description': None}]""";;;;;
"2229169236,Don't buffer things that shouldn't be buffered.,""Assigning `ActionDispatch::Response` to `self.response` causes the response body to be buffered (and potentially evaluated multiple times).";;;;;
;;;;;
```ruby;;;;;
class StreamingController < ApplicationController;;;;;
  def simple;;;;;
    body = Enumerator.new do |enumerator|;;;;;
"      enumerator << """"."""" * 1024";;;;;
      ;;;;;
      100.times do |i|;;;;;
"        enumerator << """"This is line #{i}\n""""";;;;;
        sleep 0.1;;;;;
      end;;;;;
    end;;;;;
;;;;;
    # Works, puma, falcon, Rails 7.1;;;;;
"    # self.response = Rack::Response[200, {""""content-type"""" => """"text/plain""""}, body]";;;;;
;;;;;
    # Doesn't work because the response is buffered:;;;;;
"    self.response = ActionDispatch::Response.new(200, {""""content-type"""" => """"text/plain""""}, body)";;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
In both Puma and Falcon, the response is buffered without this change.;;;;;
;;;;;
"cc @willcosgrove "",2024-04-06T09:53:30Z,2024-04-06T10:08:35Z,""[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}]""";;;;;
"2229046933,[Fix #40109] Incorrect joins for polymorphic `has_many through:` with association scope,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Fixes https://github.com/rails/rails/issues/40109;;;;;
;;;;;
### Detail;;;;;
;;;;;
Updates `ActiveRecord::Reflection::PolymorphicReflection#join_scopes` to not apply the previous reflection's join scopes if it's a through reflection.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-06T03:10:42Z,2024-04-06T07:14:24Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2228498012,add navbar highlighting to guides [ci skip],""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
@jathayde @AmandaPerino This Pull Request has been created to add the highlighting to the navigation bar. ;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request adds on scroll event to control highlighting and css rules for the for highlight. ;;;;;
;;;;;
Right now there are comments in the css labeling the parts that draw the highlight and the square because I wasn't sure it would be obvious what the pseudo-elements were for, but I can remove them if you want. ;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-05T17:27:03Z,2024-04-07T15:34:07Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2228287663,UnrecognizedCommandError can be corrected and retried,""### Motivation / Background";;;;;
;;;;;
"This is a follow up to https://github.com/rails/rails/pull/50941. """"Did you mean?"""" style errors were introduced in rails/rails@2530160 for unrecognized commands. With this change, we give the user the option to retry with the corrected command name - instead of needing to retype and rerun the command.";;;;;
;;;;;
### Detail;;;;;
;;;;;
We iterate through all the possible commands returned by `DidYouMean::SpellChecker` and give the user the option to rerun the suggested correction.;;;;;
;;;;;
```;;;;;
 ➜  myapp git:(main) bin/rails vershen;;;;;
"Unrecognized command """"vershen""""";;;;;
;;;;;
Did you mean?  version [Yn] y;;;;;
Rails 7.2.0.alpha;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-05T15:19:49Z,2024-04-05T22:31:25Z,[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2228096494,Improve accessibility,""### Motivation / Background";;;;;
;;;;;
As requested by @AmandaPerino, this PR aims to improve the accessibility of the guides. It continues on the work in #51341 #51372 #51385 and #51444. It also addresses whatever wasn't addressed from https://github.com/rails/rails/pull/51341#issuecomment-2007717282.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Each commit in the PR has a descriptive title and often a message why the change was made, which I recommend we keep when merging instead of squashing it. Screenshots are listed below. A few of the commits that introduce fixes or features are listed here:;;;;;
;;;;;
* [Add label and accessible content](https://github.com/rails/rails/commit/4f2b25ba54d82bc897fb33f681214f5bf05cb0bd) ;;;;;
  ;;;;;
  Having a select element without a label outside a form isn't directly problematic, but the text Version is the label of the select and should act as such.;;;;;
;;;;;
  Because the select element is set up to browse to a different page which loses the current focus position, users must be instructed about this context change. It would be much better to display this content to everyone, but having this for screenreaders only is better than not having it at all.;;;;;
;;;;;
* [Fix accessible text for voice commands](https://github.com/rails/rails/commit/1863e5590cecac6ecfd0c4c031f1c4c967d0d768) ;;;;;
  ;;;;;
  Using the title attribute means some screenreaders will not be able to show the expanded accessible text at all, but using aria-label loses the hover text currently available.;;;;;
;;;;;
  If the title attribute is still used, the accessible label should start with the same content as the visible label. This is necessary for most voice operated tooling which only match starting text.;;;;;
;;;;;
"  Having """"Return"""" as the start of the accessible label and """"Guides"""" as the start of the visible label means in most cases users that rely on voice commands will not be able to browse here.";;;;;
;;;;;
* [Add landmarks to all guide pages](https://github.com/rails/rails/commit/9669f4be012f34488d52e16d0b6e40a11399e414) ;;;;;
  ;;;;;
  Landmarks such as header, section, footer, article, and the main content landmark help navigating when using assistive tooling.;;;;;
;;;;;
  Since each guide is a self-contained article, a header section with the guide introduction and navigation, a footer section which is not part of the content but a call to action, and the rest can be clearly separated, landmarks here are appropriate.;;;;;
;;;;;
* [Make back-to-top work without JavaScript](https://github.com/rails/rails/commit/b33278c01384a7612d0adf2270456718181b5acb) ;;;;;
;;;;;
  By doing feature detection on animation timeline CSS, the graceful degradation can take care of the visibility of the back-to-top button. In case no JavaScript is available, it should always be shown.;;;;;
;;;;;
* [Enable back-to-top without JavaScript](https://github.com/rails/rails/commit/430f27c959f0df30b6baeea3d688d8fa5448f842) ;;;;;
;;;;;
  And add an accessible label to the button. It would be better to just show the text back to top underneath the arrow, but this change is again better than not having it at all.;;;;;
;;;;;
* [Consistent scrolling behaviour respecting pref](https://github.com/rails/rails/commit/f2ae0318736a286a13d896cad8527bd2d1443c50) ;;;;;
;;;;;
  Use the preference to detect if a user wants reduced motion and if not enable smooth scrolling. This takes care of the back-to-top smooth scrolling, and also adds it to anchor links. If this is unwanted, the change can be reverted and a matchmedia check should be done in JavaScript instead before smooth scrolling;;;;;
;;;;;
* [Add skip links to quickly navigate past navs](https://github.com/rails/rails/commit/653b292ac26b2df59ebeb44fc9415ebc8130243b) ;;;;;
  ;;;;;
  Skip links are a common practice to allow keyboard and other users to skip past large blocks of content that are present on every page, which in this case are the secondary navigation at the top,;;;;;
the version selector, and the chapter navigation.;;;;;
;;;;;
  The skip links only show when focused.;;;;;
;;;;;
* [Wrap tables to make them responsive](https://github.com/rails/rails/commit/e2cfe8fdfccfcb47aec2f358b0badab79c817981);;;;;
;;;;;
* [Make back-to-top link to skip link](https://github.com/rails/rails/commit/ad966a42de9e166ab33026b28fc8dda64f5fbdd1) ;;;;;
;;;;;
  This allow screen readers to announce something, because linking to an empty fragment or the body element doesn't announce anything useful.;;;;;
;;;;;
* [Add branded selectable color](https://github.com/rails/rails/commit/2557614d872629462e354b2bd1536736aa2077be) ;;;;;
;;;;;
  Fixes selecting text in dark mode and brands it for both modes.;;;;;
;;;;;
* [Make more info and guides index accessible](https://github.com/rails/rails/commit/f9eaeb18d8c5712ae0f2edf351ff9829c996bf78) ;;;;;
;;;;;
  * Adds aria-controls, which binds the control to the content.;;;;;
  * Adds aria-expanded, which signals the current expansion state.;;;;;
  * Adds focus handling, which focuses the first link or the button;;;;;
    depending on the expansion state.;;;;;
  * Adds keyboard closing for the more info button.;;;;;
  * Adds outside click tracking to close the expanded content.;;;;;
  * Fixes the more info button to not be focusable.;;;;;
;;;;;
* [Fix dark mode for guide selector](https://github.com/rails/rails/commit/9c4cfd00492a2bd55db9ed5b5a9a616a962c153a);;;;;
;;;;;
* [Add accessible label for guide navigator](https://github.com/rails/rails/commit/93f9819c62890301f398e752b6083c9d2c9f6c40);;;;;
;;;;;
### Additional information;;;;;
;;;;;
Please note that this PR doesn't necessarily make the guides completely accessible and we should continue to improve on this, but this gets us (a big) part of the way there, together with the changes that were already made prior.;;;;;
;;;;;
| Before | After |;;;;;
| ------ | ----- |;;;;;
"| You could not focus the selector pressing """"Version"""" | ![a11y-focusable-label-version](https://github.com/rails/rails/assets/1964376/58f5d1a7-a6ef-47e2-86ac-6e1e0288a18c) |";;;;;
| The element (version selector) was broken if JavaScript was disabled | ![a11y-no-js-desktop](https://github.com/rails/rails/assets/1964376/0a93871b-c55a-4f9b-a524-86f6024f39b7) |;;;;;
| The element (version selector) was broken if JavaScript was disabled | ![a11y-no-js-mobile](https://github.com/rails/rails/assets/1964376/5075e1ac-c888-496e-8fa4-4f9066d6aa43) |;;;;;
| ![a11y-before-table-wrap](https://github.com/rails/rails/assets/1964376/29e41733-60ce-4933-9d4f-36a9fad972e8) | ![a11y-after-table-wrap](https://github.com/rails/rails/assets/1964376/303818b1-d3af-45e3-9ea7-08121c91f04c) |;;;;;
| You could not skip past the secondary top navigation | ![a11y-main-skip-link](https://github.com/rails/rails/assets/1964376/8d2c1af0-7575-4089-8e89-e7cfb42c8975) |;;;;;
| You could not skip past the chapter navigation | ![a11y-chapter-skip-link](https://github.com/rails/rails/assets/1964376/87cccb26-f7ae-4ae9-a382-145d6cbd963e) |;;;;;
| ![a11y-selectable-text-before](https://github.com/rails/rails/assets/1964376/e9e9b56f-08de-45d8-955f-c7884b33a387) | ![a11y-selectable-text](https://github.com/rails/rails/assets/1964376/c938bbde-54ee-480b-b295-6a91bdd8c7e7) |;;;;;
| There was no label indicating what the select does | ![a11y-guide-selector](https://github.com/rails/rails/assets/1964376/cfaf0501-516b-4ad3-bc30-d77701f01164) |;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [X] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-05T13:53:30Z,2024-04-07T15:35:24Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2226955930,Handle path_params gracefully when a user sends `?path_params=string`,""In some cases it's possible for `path_params` to be passed into `url_for` by an end-user of a rails app. Kaminari currently triggers this.";;;;;
;;;;;
"It's also currently inconvenient to write a test to ensure this doesn't happen. Passing `path_params: """"string""""` in a functional test crashes the test runner. (see [this example in a rails bug report template](https://github.com/rails/rails/compare/main...martinemde:rails:bug-report-path-params) that crashes.)";;;;;
;;;;;
A string value will cause a 500 error in rails internals. A hash `?path_params[inject]=string` can be used to inject a path_param into the url generation. However, I don't believe there is any vulnerability since path_params are lower priority than actual params and get ignored when there are no matches. Also, given that the very similar #39616 did not raise alarm bells, I'm not considering this a vulnerability. Still, it is probably good to scrub this key. A vulnerability once existed for a similar problem: https://github.com/advisories/GHSA-r5jw-62xg-j433;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
I was trying to fix a 500 caused by a security scan of rubygems.org. An unknown researcher sent a huge list of params to many pages, snipped here:;;;;;
;;;;;
![image](https://github.com/rails/rails/assets/989/84f481a9-dfc5-40dd-93e9-1ccacd445489);;;;;
;;;;;
This caused at least two 500 errors on rubygems.org, a minor annoyance but enough to potentially page someone on-call.;;;;;
;;;;;
I tracked the actual issue down to kaminari for which I opened https://github.com/kaminari/kaminari/pull/1123.;;;;;
;;;;;
While I think that this should be fixed in kaminari, I also think rails should fix this because it is somewhat difficult to write a test to ensure that this key is handled well. (see bug report template linked at top) ;;;;;
;;;;;
This PR also saves one hash allocation and one merge for every URL generate that doesn't have a `path_params:` key (most of them?), but the `option = option.dup` might negate most of the benefit (it could be reconfigured to save that dup, most likely).;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes `ActionDispatch::Journey::Formatter#generate` to only extract and merge path_params when it is a hash.;;;;;
;;;;;
This PR does not address in any way filtering `path_params`. I believe kaminari should do this. However, this addresses the crash when path_params is not a Hash and makes most url generations slightly more efficient. ;;;;;
;;;;;
### Additional information;;;;;
;;;;;
This is very similar to another fix by my colleague @simi submitted to rails, #39616, which I think also deserves attention for the same reason, if it is still applicable to current rails code.;;;;;
;;;;;
I'm also patching this on rubygems.org in the meantime so we don't get needless 500s.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [X] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-05T04:01:48Z,2024-04-05T16:48:09Z,[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}]""";;;;;
"2226911350,Use ActionController::TestCase in bug_report_template/action_controller.rb,""### Motivation / Background";;;;;
;;;;;
This Pull Request has been created because I was trying to submit a bug report and had to spend time getting the bug report template to work more like a functional test in rails.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes `guides/bug_report_template/action_controller.rb` to draw a route and use `ActionController::TestCase` to make testing easier.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-05T03:32:15Z,2024-04-05T03:32:49Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2226602219,Should Active Model's `ImmutableString` type observe the `limit` parameter?,""TL";DR: should `attribute :foobar, :string, limit: 30` chop the value to 30 characters?;;;;
;;;;;
`ActiveModel::Type::String` inherits;;;;;
`ActiveModel::Type::ImmutableString` inherits;;;;;
 `ActiveModel::Type::Value`  which accepts three `limit, scale, precision` options [but lets the base type decide what to do with them](https://api.rubyonrails.org/classes/ActiveModel/Type/Value.html#method-c-new).;;;;;
;;;;;
I was wondering whether it would make sense for the string types to interpret `limit` as a max length and chop on `cast` or `serialize`. I've got some custom initializer code at the moment which does:;;;;;
;;;;;
```rb;;;;;
class ActiveModel::Type::String;;;;;
  def cast(value);;;;;
    if @limit;;;;;
      super(value.to_s.first(@limit));;;;;
    else;;;;;
      super;;;;;
    end;;;;;
  end;;;;;
end;;;;;
 ```;;;;;
;;;;;
Which reuses the `ImmutableString#cast` logic and chops the value, not great but works well, well enough to ask the question here.;;;;;
;;;;;
What do people think? Happy to submit a PR if we can agree it's nice to have.;;;;;
;;;;;
"NOTE: `ActiveModel::Type::Integer` interprets `limit` as [the number of bytes to store the integer with](https://api.rubyonrails.org/classes/ActiveModel/Type/Integer.html), which makes the option a bit confusing. However, a `t.string :column_name, limit: 42` will effectively [limit the length of that string column in Active Record](https://api.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_column)."",2024-04-04T22:07:58Z,2024-04-06T06:57:37Z,""[{'id': 107190, 'node_id': 'MDU6TGFiZWwxMDcxOTA=', 'url': 'https://api.github.com/repos/rails/rails/labels/activemodel', 'name': 'activemodel', 'color': '00E5FF', 'default': False, 'description': None}]""";;;;;
"2224752118,Update Filter Attributes to perform exact matches instead of Fuzzy matches,""### Motivation / Background";;;;;
;;;;;
This Pull Request has been created because of a bug mentioned in #51254 wherein encrypting one attribute in a model filters out other similar matching attributes in inspect.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This PR makes the following changes:;;;;;
- Updates `filter_attributes` to exact regex matches instead of fuzzy matching;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-04T07:52:45Z,2024-04-06T12:55:46Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}, {'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2224488321,Fix textdecorator specificity on hovering in index [ci skip],""In the guides index section, the text-decorator and color are not showing properly on hovering. And the issue is causing because of the higher specificity. ";;;;;
![Screenshot 2024-04-04 at 10 26 58 AM](https://github.com/rails/rails/assets/22231095/2c36b760-594c-43c9-9991-f6318e279d4c);;;;;
;;;;;
![Screenshot 2024-04-04 at 10 17 39 AM](https://github.com/rails/rails/assets/22231095/03381990-fa57-4ce4-8d20-288477265470);;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request fixes the hovering style issue.;;;;;
![Screenshot 2024-04-04 at 9 06 11 AM](https://github.com/rails/rails/assets/22231095/7b34dec4-9f69-416a-b46b-172408e811df);;;;;
;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
;;;;;
cc/ @jathayde ;;;;;
",2024-04-04T04:50:13Z,2024-04-07T15:36:37Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2224165865,Add a Date decoder to the pg adapter ,""Fix #51448";;;;;
;;;;;
Add a Date decoder to the pg adapter to type cast dates at the connection level;;;;;
;;;;;
This would type cast columns of type `date` to ruby `Date` when running a raw query through `ActiveRecord::Base.connection.select_all`.;;;;;
;;;;;
Before:;;;;;
;;;;;
```ruby;;;;;
"ActiveRecord::Base.connection.select_value(""""select '2024-01-01'::date"""").class ";;;;;
#=> String;;;;;
```;;;;;
;;;;;
After:;;;;;
```ruby;;;;;
"ActiveRecord::Base.connection.select_value(""""select '2024-01-01'::date"""").class ";;;;;
#=>  Date ;;;;;
```;;;;;
;;;;;
;;;;;
While I don't think we'd want to to set a type cast expectation at this level (not all adapters have dates), this would brings the PG adapter to parity (for dates) with the Mysql2 adapter. ;;;;;
;;;;;
We already convert timestamp, it would makes sense to also convert dates. ;;;;;
;;;;;
I wasn't sure if I should add a test. I am thinking that a test sets an expectation about type casting at the adapter level. ;;;;;
This changes a public API, albeit a pretty low level one, but it seems like we don't test the other types either. I removed timestamps + float/numeric and all tests still pass. ;;;;;
;;;;;
I added a message in the changelog entry to make sure it doesn't burn anyone. ;;;;;
;;;;;
Unsure if we should merge this. Impact radius is large, but after digging into it and running the tests, it looks pretty benign.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-04T00:27:33Z,2024-04-04T00:29:16Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2224128597,Trix toolbar doesn't render correctly with Propshaft,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
;;;;;
```bash;;;;;
# In bash, get a new rails app setup using propshaft;;;;;
bin/rails new . -a propshaft;;;;;
bin/rails generate scaffold post title:string body:text;;;;;
;;;;;
# Install Action Text:;;;;;
bin/rails action_text:install;;;;;
bundle install;;;;;
bin/rails db:migrate;;;;;
;;;;;
#  post body is rich text;;;;;
cat << EOF > app/models/post.rb;;;;;
class Post < ApplicationRecord;;;;;
  has_rich_text :body;;;;;
end;;;;;
EOF;;;;;
;;;;;
# ensure it's a rich_text_area in the form;;;;;
sed -i 's/<%= form.text_area :body %>/<%= form.rich_text_area :body %>/' app/views/posts/_form.html.erb;;;;;
;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
http://localhost:3000/posts/new should render the text area with Trix toolbar.;;;;;
;;;;;
Here is what renders if I follow all the same steps above, but instead of `bin/rails new . -a propshaft`, just using `bin/rails new .`:;;;;;
;;;;;
![image](https://github.com/rails/rails/assets/1312348/e53bc1e9-a793-410d-a7cd-a779e10faa31);;;;;
;;;;;
;;;;;
;;;;;
### Actual behavior;;;;;
The toolbar is just HTML buttons.;;;;;
;;;;;
![image](https://github.com/rails/rails/assets/1312348/521a03ca-e8fe-4cd2-9bfa-adbc24f716e1);;;;;
;;;;;
I cannot figure out how to get it working in Propshaft.;;;;;
;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.3.0;;;;;
",2024-04-03T23:45:27Z,2024-04-04T15:31:10Z,[]
2224104767,Use devcontainer features for optional dependencies,### Motivation / Background";;;;;
;;;;;
We have created our own features for optional Rails dependencies needed for active storage, postgres and mysql. Features provide a bit better ergonomics for adding or removing these from the devcontainer, and previously we were always installing these dependencies via the devcontainer's dockerfile, whether the app was using them or not.;;;;;
;;;;;
### Detail;;;;;
;;;;;
With this change, when we generate the app, we just add the features we need to the `devcontainer.json`. And also, we swap features in and out as need when doing `db:system:change`.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-03T23:15:11Z,2024-04-03T23:31:28Z,[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2223710666,Don't preload Selenium browser when remote,""### Motivation / Background";;;;;
Fixes #50827 ;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request stops the preloading of the Selenium browser when the browser is remote.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] NA - Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] NA - CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-03T19:09:14Z,2024-04-03T19:20:04Z,[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}]""";;;;;
"2223231248,`validates_associated` does not work with `accepts_nested_attributes_for` for `has_many` associations,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
I have a model like this:;;;;;
```ruby;;;;;
class OrderLine < ApplicationRecord;;;;;
  has_many :order_line_resources;;;;;
  accepts_nested_attributes_for :order_line_resources;;;;;
  validates_associated :order_line_resources;;;;;
end;;;;;
```;;;;;
Which is associated to this model:;;;;;
```ruby;;;;;
class OrderLineResource < ApplicationRecord;;;;;
  belongs_to :order_line;;;;;
  validates :order_line_id, uniqueness: { scope: :resource_id };;;;;
end;;;;;
```;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
However, if I write something like this:;;;;;
```ruby;;;;;
order_line.update!(order_line_resources_attributes: [{ resource_id: 1 }, { resource_id: 1 }]);;;;;
```;;;;;
"I receive an error triggered by my unique index on database level: `ActiveRecord::RecordNotUnique: PG::UniqueViolation: ERROR:  duplicate key value violates unique constraint """"idx_order_line_resources_order_line_id_resource_id""""` but not the validation error I was expecting.";;;;;
;;;;;
### Expected behavior;;;;;
<!-- Tell us what should happen -->;;;;;
I would like to get a validation error from ActiveRecord directly (`ActiveRecord::RecordInvalid`) and not by my pg database.;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
The error is triggered on database level, so my app raises `ActiveRecord::RecordNotUnique: PG::UniqueViolation`;;;;;
;;;;;
### System configuration;;;;;
**Rails version**:;;;;;
7.1.3.2;;;;;
;;;;;
**Ruby version**:;;;;;
3.3.0;;;;;
;;;;;
I hope everything is clear! 🙂 ;;;;;
"Thanks a lot for your help and keep up the good work, Rails team, you're doing an amazing job! ✨ "",2024-04-03T15:24:52Z,2024-04-04T08:40:58Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 126910270, 'node_id': 'MDU6TGFiZWwxMjY5MTAyNzA=', 'url': 'https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps', 'name': 'With reproduction steps', 'color': '009800', 'default': False, 'description': None}]""";;;;;
"2223118248,""Fix """"no anonymous block parameter"""" in ruby 3.1"",""### Motivation / Background";;;;;
;;;;;
On;;;;;
ruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [x86_64-linux-gnu] (e.g. Ubuntu 23.10), simple rails commands fail with;;;;;
`no anonymous block parameter`:;;;;;
;;;;;
```;;;;;
vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:38:in `require': vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:190: no anonymous block parameter (SyntaxError);;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:38:in `<class:AbstractAdapter>';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:31:in `<module:ConnectionAdapters>';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:15:in `<module:ActiveRecord>';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:14:in `<top (required)>';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb:3:in `require';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb:3:in `<top (required)>';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters.rb:100:in `require';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters.rb:100:in `resolve';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/database_configurations/database_config.rb:18:in `adapter_class';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/database_configurations/database_config.rb:26:in `validate!';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract/connection_handler.rb:268:in `resolve_pool_config';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract/connection_handler.rb:116:in `establish_connection';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_handling.rb:53:in `establish_connection';;;;;
        from repro.rb:20:in `<main>';;;;;
;;;;;
```;;;;;
;;;;;
One file repro:;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
require 'bundler';;;;;
Bundler.configure;;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
;;;;;
```;;;;;
;;;;;
This Pull Request has been created to fix this issue.;;;;;
;;;;;
### Detail;;;;;
;;;;;
"I do not know why this triggers """"no anonymous block parameter"""", as the parameter is clearly there.";;;;;
It was introduced when a named parameter was added, without the named parameter the error does not occur.;;;;;
However, converting to a named block parameter fixes this issue.;;;;;
",2024-04-03T14:36:24Z,2024-04-06T19:34:45Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2221347874,ActiveSupport::OrderedOptions#respond_to?(:call) true - breaking check for callable objects,""`ActiveSupport::OrderedOptions` returns `true` for `.respond_to?(:call)`, which breaks various duck-type approach to detect callable objects. Example is pretty popular [carrierwave-aws gem](https://github.com/carrierwaveuploader/carrierwave-aws/?tab=readme-ov-file#usage) which checks if one of the options is callable by checking `respond_to?(:call)`. ";;;;;
There is no reason to return true for any possible key. OpenStruct also returns 'nil` for non-existing keys, but `respond_to?` only returns `true` for existing keys.;;;;;
On the other hand someone did it on purpose, otherwise why implement `respond_to_missing?` as hard-coded `true`, so I'm not sure if there was no higher design here.;;;;;
### Steps to reproduce;;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
```;;;;;
ActiveSupport::OrderedOptions.new.respond_to?(:call) # => true;;;;;
ActiveSupport::InheritableOptions.new.respond_to?(:call) # => true;;;;;
```;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails""""";;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"  # gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
end;;;;;
;;;;;
"require """"active_support""""";;;;;
"require """"active_support/core_ext/object/blank""""";;;;;
"require """"minitest/autorun""""";;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_ordered_options_respond_to;;;;;
    assert ActiveSupport::OrderedOptions.new.update(aaa: 1).respond_to?(:aaa);;;;;
    refute ActiveSupport::OrderedOptions.new.respond_to?(:call);;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
<!-- Tell us what should happen -->;;;;;
ActiveSupport::OrderedOptions.new.respond_to?(:call) # => should return false;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
ActiveSupport::OrderedOptions.new.respond_to?(:call) # => returns true;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.0.8.1;;;;;
**Ruby version**: 3.0.4;;;;;
",2024-04-02T19:59:36Z,2024-04-07T12:45:38Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}]""";;;;;
"2219772792,counter_cache doesn't work with composite PKs (revisited),""In the past I opened issue [#50968](https://github.com/rails/rails/issues/50968) about `counter_cache` not working with composite PKs. The corresponding PR fixed the error, but I still have a case in my codebase where I still get a different error.";;;;;
;;;;;
### Steps to reproduce;;;;;
;;;;;
Unfortunately I was not able to reproduce this with a script, so the script below does NOT reproduce the error. In any case, I am attaching it is because this is my mapping. The difference between my codebase and the script below is that I am running against Postgres, however I don't see how that could play a role.;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :test_background_check_requests, force: true do |t|;;;;;
    t.integer :candidate_id;;;;;
    t.integer :account_id;;;;;
    t.string :name;;;;;
  end;;;;;
;;;;;
  create_table :test_candidates, force: true, primary_key: %i[candidate_id account_id] do |t|;;;;;
    t.integer :candidate_id;;;;;
    t.integer :account_id;;;;;
    t.integer :test_background_check_requests_count;;;;;
    t.string :name;;;;;
  end;;;;;
end;;;;;
;;;;;
class TestCandidate < ActiveRecord::Base;;;;;
  self.primary_key = %i[candidate_id account_id];;;;;
  has_many :test_background_check_requests, query_constraints: [:candidate_id, :account_id], inverse_of: :test_candidate;;;;;
end;;;;;
;;;;;
class TestBackgroundCheckRequest < ActiveRecord::Base;;;;;
  belongs_to :test_candidate, counter_cache: true, query_constraints: [:candidate_id, :account_id];;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_association_stuff;;;;;
"    test_candidate = TestCandidate.create!(candidate_id: 1, account_id: 1, name: """"Foo Barson"""")";;;;;
"    test_candidate.test_background_check_requests.create!(candidate_id: 1, account_id: 1, name: """"Background check request 1"""")";;;;;
;;;;;
    assert_equal 1, TestBackgroundCheckRequest.count;;;;;
    assert_equal 1, test_candidate.reload.test_background_check_requests_count;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
I was expecting the creation to take place correctly, and the counter to increase.;;;;;
;;;;;
### Actual behavior;;;;;
I am getting the following exception:;;;;;
;;;;;
```;;;;;
"Minitest::UnexpectedError: ArgumentError: Expected corresponding value for [""""id"""", """"account_id""""] to be an Array";;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:82:in `block (2 levels) in expand_from_hash';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:81:in `map';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:81:in `block in expand_from_hash';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:79:in `each';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:79:in `flat_map';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:79:in `expand_from_hash';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:25:in `build_from_hash';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/query_methods.rb:1526:in `build_where_clause';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/query_methods.rb:943:in `where!';;;;;
    activerecord (7.1.3.2) lib/active_record/counter_cache.rb:115:in `update_counters';;;;;
    activerecord (7.1.3.2) lib/active_record/locking/optimistic.rb:182:in `update_counters';;;;;
    activerecord (7.1.3.2) lib/active_record/persistence.rb:974:in `increment!';;;;;
    activerecord (7.1.3.2) lib/active_record/locking/optimistic.rb:64:in `increment!';;;;;
    activerecord (7.1.3.2) lib/active_record/callbacks.rb:436:in `increment!';;;;;
    activerecord (7.1.3.2) lib/active_record/associations/has_many_association.rb:100:in `update_counter';;;;;
    activerecord (7.1.3.2) lib/active_record/associations/has_many_association.rb:122:in `delete_or_nullify_all_records';;;;;
    activerecord (7.1.3.2) lib/active_record/associations/collection_association.rb:161:in `delete_all';;;;;
    activerecord (7.1.3.2) lib/active_record/associations/collection_proxy.rb:475:in `delete_all';;;;;
    test/services/candidates/copier_base_test.rb:602:in `block in <class:CopierBaseTest>';;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: ;;;;;
7.1.3.2 (branch `7-1-stable`);;;;;
;;;;;
**Ruby version**: ;;;;;
3.2.2;;;;;
",2024-04-02T07:31:16Z,2024-04-03T22:56:59Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 1071962662, 'node_id': 'MDU6TGFiZWwxMDcxOTYyNjYy', 'url': 'https://api.github.com/repos/rails/rails/labels/more-information-needed', 'name': 'more-information-needed', 'color': 'bfdadc', 'default': False, 'description': 'When reporter needs to provide more information'}]""";;;;;
"2219541327,[Fix #51463] Raise an error when invalid `:on` or `:except` options are given to `#resource` or `#resources`,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Fixes https://github.com/rails/rails/issues/51463.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Raises an `ArgumentError` when a `ActionDispatch::Routing::Mapper::Resources::Resource` is initalized with `:on` or `:except` options that aren't default (index, create, new, show, update, and destroy) actions .;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
See my comment below as to why this seems like more changes than it needs to be.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-02T04:30:58Z,2024-04-04T09:38:53Z,[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}]""";;;;;
"2219534455,`#resource` and `#resources` fail quietly and succeed quietly when invalid arguments are passed to `:only` and `:except` options respectively,""This came up when pairing with a dev who is newish to Rails. They assumed that passing a custom action argument to `:only` when using `#resources` would auto-magically define a route for it with some defaults. Reading the examples in the documentation for these methods, it's not clear (especially to beginners) what all the accepted arguments for these options are, [there are only examples using default actions](https://www.rubydoc.info/docs/rails/ActionDispatch%2FRouting%2FMapper%2FResources:resources).";;;;;
;;;;;
I think it would be beneficial if an error was raised if invalid arguments are passed in.;;;;;
;;;;;
### Steps to reproduce;;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
end;;;;;
;;;;;
"require """"action_controller/railtie""""";;;;;
;;;;;
class TestApp < Rails::Application;;;;;
  config.root = __dir__;;;;;
"  config.hosts << """"example.org""""";;;;;
"  config.secret_key_base = """"secret_key_base""""";;;;;
;;;;;
  config.logger = Logger.new($stdout);;;;;
  Rails.logger  = config.logger;;;;;
end;;;;;
;;;;;
"require """"minitest/autorun""""";;;;;
"require """"rack/test""""";;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  include Rack::Test::Methods;;;;;
;;;;;
  def test_invalid_resources_only_option;;;;;
    assert_raises(ArgumentError) do # ❌ fails quietly, no routes generated;;;;;
      app.routes.draw do;;;;;
        resources :posts, only: :foo;;;;;
      end;;;;;
;;;;;
      # => routes: [];;;;;
"      Rails.logger.info(""""routes: #{app.routes.routes.map { |r| r.defaults[:action] }}"""")";;;;;
    end;;;;;
  end;;;;;
;;;;;
  def test_invalid_resources_except_option;;;;;
    assert_raises(ArgumentError) do # ❌ succeeds quietly, all default routes generated;;;;;
      app.routes.draw do;;;;;
        resources :posts, except: :foo;;;;;
      end;;;;;
;;;;;
"      # => routes: [""""index"""", """"create"""", """"new"""", """"edit"""", """"show"""", """"update"""", """"update"""", """"destroy""""]";;;;;
"      Rails.logger.info(""""routes: #{app.routes.routes.map { |r| r.defaults[:action] }}"""")";;;;;
    end;;;;;
  end;;;;;
;;;;;
  private;;;;;
    def app;;;;;
      Rails.application;;;;;
    end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
<!-- Tell us what should happen -->;;;;;
;;;;;
Passing invalid options to `:only` or `:except` should raise an error with an informative message.;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
;;;;;
Passing invalid options to `:only` fails quietly and no routes are generated.;;;;;
Passing invalid arguments to `:except` succeeds quietly and all default routes are generated (index, create, new, show, update, and destroy).;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: Edge;;;;;
;;;;;
"**Ruby version**: 3.3.0"",2024-04-02T04:24:01Z,2024-04-02T11:17:11Z,[]";;;;;
"2219354900,Fix inline habtm fixtures for tables with composite primary keys,Fixes https://github.com/rails/rails/issues/51461.,2024-04-02T00:43:32Z,2024-04-02T00:43:37Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2218168973,Composite PKs break fixture loading for many-to-many associations,""### Steps to reproduce";;;;;
;;;;;
Copy the following fixture files in a directory:;;;;;
;;;;;
**posts.yml**;;;;;
```yaml;;;;;
one:;;;;;
"    title: """"My first post""""";;;;;
    account_id: 1;;;;;
    labels: one, two;;;;;
```;;;;;
**labels.yml**;;;;;
```yaml;;;;;
one:;;;;;
"    text: """"Label 1""""";;;;;
two:;;;;;
"    text: """"Label 2""""";;;;;
```;;;;;
;;;;;
and use them here:;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails""""";;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"  # gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
;;;;;
  create_table :posts, force: true, primary_key: %i[id account_id] do |t|;;;;;
    t.integer :id;;;;;
    t.integer :account_id;;;;;
    t.string :title;;;;;
  end;;;;;
;;;;;
  create_table :posts_labels, force: true do |t|;;;;;
    t.integer :post_id;;;;;
    t.integer :account_id;;;;;
    t.references :label, foreign_key: true;;;;;
  end;;;;;
;;;;;
  create_table :labels, force: true do |t|;;;;;
    t.string :text;;;;;
  end;;;;;
end;;;;;
;;;;;
class Post < ActiveRecord::Base;;;;;
  self.primary_key = %i[id account_id];;;;;
  has_many :posts_labels;;;;;
  has_many :labels, through: :posts_labels;;;;;
end;;;;;
;;;;;
class PostsLabel < ActiveRecord::Base;;;;;
  belongs_to :post, query_constraints: [:post_id, :account_id];;;;;
  belongs_to :label;;;;;
end;;;;;
;;;;;
class Label < ActiveRecord::Base;;;;;
  has_many :posts_labels;;;;;
  has_many :posts, through: :posts_labels;;;;;
end;;;;;
;;;;;
# Load the fixtures into the database (update the directory);;;;;
"ActiveRecord::FixtureSet.create_fixtures(""""/fixtures-directory/"""", %w[posts labels])";;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_association_stuff;;;;;
    assert_equal 1, Post.count;;;;;
    assert_equal 2, Label.count;;;;;
    assert_equal 2, Post.first.labels.count # Fails here;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
According to the documentation of [ActiveRecord::FixtureSet](https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html), the fixture for the intermediate many-to-many table [can be skipped](https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html#:~:text=Let%E2%80%99s%20make%20the%20HABTM%20fixture%20go%20away.).;;;;;
;;;;;
### Actual behavior;;;;;
The fixtures are not loaded correctly. These are the sql statements for the fixtures (notice the `null`):;;;;;
;;;;;
```sql;;;;;
"DELETE FROM """"posts""""";;;;;
"DELETE FROM """"posts_labels""""";;;;;
"DELETE FROM """"labels""""";;;;;
"INSERT INTO """"posts"""" (""""id"""", """"account_id"""", """"title"""") VALUES (980190962, 1, 'My first post')";;;;;
"INSERT INTO """"posts_labels"""" (""""post_id"""", """"label_id"""") VALUES (NULL, 980190962)";;;;;
"INSERT INTO """"posts_labels"""" (""""post_id"""", """"label_id"""") VALUES (NULL, 298486374)";;;;;
"INSERT INTO """"labels"""" (""""id"""", """"text"""") VALUES (980190962, 'Label 1')";;;;;
"INSERT INTO """"labels"""" (""""id"""", """"text"""") VALUES (298486374, 'Label 2')";;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: `7.1.3.2`;;;;;
;;;;;
**Ruby version**: `3.2.2`;;;;;
",2024-04-01T12:30:45Z,2024-04-02T06:41:43Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 126910270, 'node_id': 'MDU6TGFiZWwxMjY5MTAyNzA=', 'url': 'https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps', 'name': 'With reproduction steps', 'color': '009800', 'default': False, 'description': None}]""";;;;;
"2217292282,New print styles and generator to add to build,""";;;;;
"<img width=""""958"""" alt=""""Screenshot 2024-03-31 at 8 43 35 PM"""" src=""""https://github.com/rails/rails/assets/2223/995815e6-1d34-4550-b49c-c7a78e213cc1"""">";;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
This updates print CSS to be more inline with the overall style. The sidebar is inlined (same as mobile), and content is 100%. Previous code in the launch from boilerplate has been struck or integrated better.;;;;;
;;;;;
* Links show in text after the original link text;;;;;
* Border line around code and copy button are removed;;;;;
* Print is now generated from SCSS to CSS via the generator that builds the other CSS files ;;;;;
;;;;;
### Additional information;;;;;
;;;;;
Some browsers will override backgrounds on print;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-01T00:58:28Z,2024-04-01T14:57:32Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2217108029,Add `touch` option to `#update_columns` and `#update_column` methods,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
I've created this Pull Request because not all ActiveRecord persistence methods affect timestamps or have a touch option. This can be problematic, especially when there is some ETL processing that relies on the `updated_at` timestamps instead of copying the whole table. For instance, if someone uses `#update_columns` for performance reasons, it may result in lost updates. This is particularly an issue for `#update_column`. If a user wants to keep timestamps current, they have to explicitly call the `#touch` method after using `#update_column`.;;;;;
;;;;;
Examples:;;;;;
```ruby;;;;;
# we don't want to perform any callbacks or validations here so use #update_columns;;;;;
current_user.update_columns(;;;;;
  last_ip: request.remote_ip,;;;;;
  updated_at: Time.current # but we still want to keep track of the last changes, so have to provide a timestamp explicitly;;;;;
);;;;;
```;;;;;
;;;;;
```ruby;;;;;
current_user.update_column(:last_ip, request.remote_ip);;;;;
current_user.touch;;;;;
```;;;;;
;;;;;
Rails discussion: https://discuss.rubyonrails.org/t/proposal-add-touch-option-for-update-columns-update-column/85388;;;;;
;;;;;
### Detail;;;;;
;;;;;
This PR adds a `touch` option to the `#update_columns` and `#update_column` methods.;;;;;
The option allows to update `updated_at`/`updated_on` attributes with ;;;;;
;;;;;
```ruby;;;;;
    person.update_columns(name: 'John Doe', touch: true);;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-31T17:50:27Z,2024-04-03T09:44:15Z,[{'id': 107190, 'node_id': 'MDU6TGFiZWwxMDcxOTA=', 'url': 'https://api.github.com/repos/rails/rails/labels/activemodel', 'name': 'activemodel', 'color': '00E5FF', 'default': False, 'description': None}, {'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2216178575,Action Cable Guide - add Transmit method,""### Motivation / Background";;;;;
;;;;;
I was exploring making use of Action Cables for a project I was working on, and didn't find any mention of the `transmit` method of channels, which allows you to transmit data to the specific subscriber that initiated the interaction.;;;;;
;;;;;
As someone relatively new to Rails and entirely new to Action Cables I spun my wheels for a bit trying to figure out how interactions like this should be handled, and I was surprised to see the method wasn't even mentioned in the guide on Action Cables.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Documentation PR;;;;;
;;;;;
This Pull Request updates the Action Cable guide to add information on the existence of the `transmit` method, allowing channels to send data to a specific subscriber.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-30T03:23:34Z,2024-03-31T05:19:57Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2215236766,Postgresql date type is not properly typecasted when using direct SQL queries like select_all,""When using direct SQL query, the date is not properly typecasted on Postgresql:";;;;;
```;;;;;
"> ActiveRecord::Base.connection.select_all(""""  SELECT '2024-01-01'::date """")";;;;;
   (0.5ms)    SELECT '2024-01-01'::date;;;;;
  ↳ config/initializers/local.rb:52:in `sa';;;;;
=> #<ActiveRecord::Result:0x0000000115516010;;;;;
 @column_types=;;;;;
  {0=>#<ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Date:0x0000000116a5acf0 @limit=nil, @precision=nil, @scale=nil, @timezone=nil>,;;;;;
"   """"date""""=>#<ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Date:0x0000000116a5acf0 @limit=nil, @precision=nil, @scale=nil, @timezone=nil>},";;;;;
" @columns=[""""date""""],";;;;;
 @hash_rows=nil,;;;;;
" @rows=[[""""2024-01-01""""]]>";;;;;
```;;;;;
;;;;;
### Notes;;;;;
;;;;;
* The column type seems to be recognized correctly, but typecast is not applied;;;;;
* SQLite seems to generate even worth result like `2024` as integer.;;;;;
* Timestamp doesn't have this problem;;;;;
;;;;;
### Reproduce;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
require 'bundler/inline';;;;;
;;;;;
gemfile(true) do;;;;;
  source 'https://rubygems.org';;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
  gem 'rails';;;;;
;;;;;
  gem 'pg';;;;;
  # gem 'sqlite3';;;;;
end;;;;;
;;;;;
require 'active_record';;;;;
require 'minitest/autorun';;;;;
require 'logger';;;;;
;;;;;
# `CREATE DATABASE rails_51428_test;`;;;;
ActiveRecord::Base.establish_connection(adapter: 'postgresql', database: 'rails_test');;;;;
# ActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:');;;;;
ActiveRecord::Base.logger = Logger.new($stdout);;;;;
;;;;;
;;;;;
class DateTest < Minitest::Test;;;;;
  def test_stuff;;;;;
    value = ActiveRecord::Base.connection.select_value(;;;;;
"      """"select cast('2024-01-01' as date)""""";;;;;
    );;;;;
    assert_equal Date.new(2024, 01, 01), value;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
```;;;;;
Expected: Mon, 01 Jan 2024;;;;;
"  Actual: """"2024-01-01""""";;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3;;;;;
;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-29T12:13:51Z,2024-04-05T17:17:41Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 70310659, 'node_id': 'MDU6TGFiZWw3MDMxMDY1OQ==', 'url': 'https://api.github.com/repos/rails/rails/labels/PostgreSQL', 'name': 'PostgreSQL', 'color': 'fbca04', 'default': False, 'description': None}]""";;;;;
"2214734569,Fix an error for `apply_rubocop_autocorrect_after_generate!` with `--pretend`,""## Motivation / Background";;;;;
;;;;;
An issue was identified where an error occurs when executing `apply_rubocop_autocorrect_after_generate!` with `--pretend` option, according to feedback from https://github.com/rubocop/rubocop-rails/pull/1263.;;;;;
;;;;;
## Details;;;;;
;;;;;
This PR fixes the following error when executing `apply_rubocop_autocorrect_after_generate!` with `--pretend` option:;;;;;
;;;;;
```console;;;;;
$ bin/rails g migration create_users -p;;;;;
```;;;;;
;;;;;
### Before;;;;;
;;;;;
An `Errno::ENOENT` error occurs:;;;;;
;;;;;
```console;;;;;
invoke  active_record;;;;;
create    db/migrate/20240329060627_create_users.rb;;;;;
/Users/koic/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/bundler/gems/rails-8e46af8c9396/railties/lib/rails/configuration.rb:138:in;;;;;
`system': No such file or directory - bin/rubocop (Errno::ENOENT);;;;;
```;;;;;
;;;;;
### After;;;;;
;;;;;
No errors.;;;;;
;;;;;
## Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-29T06:17:20Z,2024-03-30T10:23:42Z,[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2214519753,Remove node_modules from the final image,,2024-03-29T02:55:34Z,2024-04-01T03:46:51Z,""[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2214042050,Emit deprecation warning about inverse_of inference only for valid reflections,""### Motivation / Background";;;;;
;;;;;
This is a small follow-up to https://github.com/rails/rails/pull/50883. ;;;;;
;;;;;
As we went through all deprecation warnings while we run Rails edge with;;;;;
```ruby;;;;;
config.active_record.automatically_invert_plural_associations = false;;;;;
```;;;;;
we realised that we had warnings for an inferred reflection that would be wrong to infer. Digging deeper into whether this meant that enabling `automatically_invert_plural_associations` would actually mean we'd have completely wrong values in the collection of the inferred association, we realised that no, the reflection was correctly not inferred. However, the warning was emitted regardless. ;;;;;
;;;;;
This happens because the deprecation warning is emitted without checking whether the found `reflection` is valid. The warning says that the inverse association could have been automatically inferred but wasn't because `automatically_invert_plural_associations` is disabled. However, this is not true, because later on, when we check whether the reflection is valid, we see it's not, and end up returning `nil`.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This pull request just adds the `valid_inverse_reflection?(reflection)` condition to determine whether the deprecation warning needs to happen. That already checks that `reflection` is truthy. ;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-28T20:11:38Z,2024-03-29T06:35:20Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2213953232,Make it possible to opt-out of sending Link header in `preload_link_tag`,""This commit adds a `preload_links_header` option to `preload_link_tag` to disable sending of the Link header in the HTTP response.";;;;;
;;;;;
Currently `ActionView::Helpers::AssetTagHelper.preload_links_header` only controls whether `javascript_include_tag` and `stylesheet_link_tag` send the Link header, but there is no way to control the behavior of `preload_link_tag`. We could just check that variable, but existing applications might be relying on `preload_link_tag` to add the header. Users also might want control over this on a per call basis.;;;;;
;;;;;
Closes #51436;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-28T19:18:46Z,2024-03-28T21:03:36Z,[{'id': 3666649, 'node_id': 'MDU6TGFiZWwzNjY2NjQ5', 'url': 'https://api.github.com/repos/rails/rails/labels/actionview', 'name': 'actionview', 'color': 'd7e102', 'default': False, 'description': None}]""";;;;;
"2213933174,Bump mysql2 to fix build error with mysql-client 8.3,""### Motivation / Background";;;;;
;;;;;
This fixes bundle install when using the latest version of mysql-client, 8.3;;;;;
;;;;;
### Detail;;;;;
;;;;;
<details>;;;;;
<summary>Sample installation log</summary>;;;;;
;;;;;
```;;;;;
bundle install;;;;;
Fetching gem metadata from https://rubygems.org/.........;;;;;
Installing mysql2 0.5.5 with native extensions;;;;;
Gem::Ext::BuildError: ERROR: Failed to build gem native extension.;;;;;
;;;;;
    current directory: /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/mysql2-0.5.5/ext/mysql2;;;;;
/Users/josh/.rbenv/versions/3.3.0/bin/ruby extconf.rb;;;;;
checking for rb_absint_size()... yes;;;;;
checking for rb_absint_singlebit_p()... yes;;;;;
checking for rb_gc_mark_movable()... yes;;;;;
checking for rb_wait_for_single_fd()... yes;;;;;
checking for rb_enc_interned_str() in ruby.h... yes;;;;;
-----;;;;;
Using --with-openssl-dir=/opt/homebrew/opt/openssl@3;;;;;
-----;;;;;
-----;;;;;
Using mysql_config at /opt/homebrew/bin/mysql_config;;;;;
-----;;;;;
checking for mysql.h... yes;;;;;
checking for errmsg.h... yes;;;;;
checking for SSL_MODE_DISABLED in mysql.h... yes;;;;;
checking for SSL_MODE_PREFERRED in mysql.h... yes;;;;;
checking for SSL_MODE_REQUIRED in mysql.h... yes;;;;;
checking for SSL_MODE_VERIFY_CA in mysql.h... yes;;;;;
checking for SSL_MODE_VERIFY_IDENTITY in mysql.h... yes;;;;;
checking for MYSQL.net.vio in mysql.h... yes;;;;;
checking for MYSQL.net.pvio in mysql.h... no;;;;;
checking for MYSQL_DEFAULT_AUTH in mysql.h... yes;;;;;
checking for MYSQL_ENABLE_CLEARTEXT_PLUGIN in mysql.h... yes;;;;;
checking for SERVER_QUERY_NO_GOOD_INDEX_USED in mysql.h... yes;;;;;
checking for SERVER_QUERY_NO_INDEX_USED in mysql.h... yes;;;;;
checking for SERVER_QUERY_WAS_SLOW in mysql.h... yes;;;;;
checking for MYSQL_OPTION_MULTI_STATEMENTS_ON in mysql.h... yes;;;;;
checking for MYSQL_OPTION_MULTI_STATEMENTS_OFF in mysql.h... yes;;;;;
checking for my_bool in mysql.h... no;;;;;
-----;;;;;
Don't know how to set rpath on your system, if MySQL libraries are not in path mysql2 may not load;;;;;
-----;;;;;
-----;;;;;
Setting libpath to /opt/homebrew/Cellar/mysql/8.3.0/lib;;;;;
-----;;;;;
creating Makefile;;;;;
;;;;;
current directory: /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/mysql2-0.5.5/ext/mysql2;;;;;
make DESTDIR\= sitearchdir\=./.gem.20240328-28015-xyw7df sitelibdir\=./.gem.20240328-28015-xyw7df clean;;;;;
;;;;;
current directory: /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/mysql2-0.5.5/ext/mysql2;;;;;
make DESTDIR\= sitearchdir\=./.gem.20240328-28015-xyw7df sitelibdir\=./.gem.20240328-28015-xyw7df;;;;;
compiling client.c;;;;;
In file included from client.c:15:;;;;;
./mysql_enc_name_to_ruby.h:43:1: warning: a function definition without a prototype is deprecated in all versions of C and is;;;;;
not supported in C2x [-Wdeprecated-non-prototype];;;;;
mysql2_mysql_enc_name_to_rb_hash (str, len);;;;;
^;;;;;
./mysql_enc_name_to_ruby.h:86:1: warning: a function definition without a prototype is deprecated in all versions of C and is;;;;;
not supported in C2x [-Wdeprecated-non-prototype];;;;;
mysql2_mysql_enc_name_to_rb (str, len);;;;;
^;;;;;
client.c:1438:3: error: call to undeclared function 'mysql_ssl_set'; ISO C99 and later do not support implicit function;;;;
declarations [-Wimplicit-function-declaration];;;;;
  mysql_ssl_set(wrapper->client,;;;;;
  ^;;;;;
client.c:1438:3: note: did you mean 'mysql_close'?;;;;;
/opt/homebrew/Cellar/mysql/8.3.0/include/mysql/mysql.h:797:14: note: 'mysql_close' declared here;;;;;
void STDCALL mysql_close(MYSQL *sock);;;;;
             ^;;;;;
2 warnings and 1 error generated.;;;;;
make: *** [client.o] Error 1;;;;;
;;;;;
make failed, exit code 2;;;;;
;;;;;
Gem files will remain installed in /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/mysql2-0.5.5 for inspection.;;;;;
Results logged to;;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/extensions/arm64-darwin-23/3.3.0/mysql2-0.5.5/gem_make.out;;;;;
;;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:125:in `run';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:51:in `block in make';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:43:in `each';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:43:in `make';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/ext_conf_builder.rb:42:in `build';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:193:in `build_extension';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:227:in `block in build_extensions';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:224:in `each';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:224:in `build_extensions';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/installer.rb:852:in `build_extensions';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/rubygems_gem_installer.rb:76:in;;;;;
`build_extensions';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/rubygems_gem_installer.rb:28:in;;;;;
`install';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/source/rubygems.rb:205:in `install';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/installer/gem_installer.rb:54:in;;;;;
`install';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/installer/gem_installer.rb:16:in;;;;;
`install_from_spec';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/installer/parallel_installer.rb:132:in;;;;;
`do_install';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/installer/parallel_installer.rb:123:in;;;;;
`block in worker_pool';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/worker.rb:62:in `apply_func';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/worker.rb:57:in `block in;;;;;
process_queue';;;;;
  <internal:kernel>:187:in `loop';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/worker.rb:54:in `process_queue';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/worker.rb:90:in `block (2 levels) in;;;;;
create_threads';;;;;
;;;;;
An error occurred while installing mysql2 (0.5.5), and Bundler cannot continue.;;;;;
;;;;;
In Gemfile:;;;;;
  mysql2;;;;;
```;;;;;
;;;;;
</details>;;;;;
;;;;;
### Additional information;;;;;
;;;;;
- [GitHub Issue in mysql2](https://github.com/brianmario/mysql2/issues/1346);;;;;
- [0.5.6 release notes listing the fix](https://github.com/brianmario/mysql2/releases/tag/0.5.6);;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] n/a - Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] n/a - CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-28T19:05:52Z,2024-03-28T19:55:23Z,[]
2213880505,Disable send_preload_links_header outright,### Steps to reproduce";;;;;
;;;;;
Suppose you have a partial like this:;;;;;
;;;;;
```haml;;;;;
= cache([ActionController::Base.asset_host], expires_in: 1.minute) do;;;;;
    = preload_link_tag(path_to_stylesheet('application');;;;;
```;;;;;
;;;;;
If the partial is not cached, then `preload_link_tag` will call `send_preload_links_header`, which modifies the `Link` HTTP header.;;;;;
;;;;;
However, if the partial is cached, then the `Link` HTTP header is not sent.;;;;;
;;;;;
This is a surprising side effect of caching `preload_link_tag`. I was surprised that `send_preload_links_header` is even called in the first place.;;;;;
;;;;;
https://github.com/rails/rails/pull/48405 lowered the max header size from 8K to 1000 bytes, but I think Rails should go farther than that: provide an option to disable this sending altogether, perhaps as an argument to `preload_link_tag`. For example:;;;;;
;;;;;
```diff;;;;;
diff --git a/actionview/lib/action_view/helpers/asset_tag_helper.rb b/actionview/lib/action_view/helpers/asset_tag_helper.rb;;;;;
index 11528eb33d..0dd3ff517a 100644;;;;;
#NOM?;;;;;
#NOM?;;;;;
@@ -325,6 +325,7 @@ def preload_link_tag(source, options = {});;;;;
"         crossorigin = """"anonymous"""" if crossorigin == true || (crossorigin.blank? && as_type == """"font"""")";;;;;
         integrity = options[:integrity];;;;;
         nopush = options.delete(:nopush) || false;;;;;
+        send_link_header = options.key?(:preload_links_header) ? options.delete(:preload_links_header) : true;;;;;
"         rel = mime_type == """"module"""" ? """"modulepreload"""" : """"preload""""";;;;;
 ;;;;;
         link_tag = tag.link(**{;;;;;
@@ -341,7 +342,7 @@ def preload_link_tag(source, options = {});;;;;
"         preload_link += """"";" integrity=#{integrity}"""" if integrity";;;;
"         preload_link += """"";" nopush"""" if nopush";;;;
 ;;;;;
-        send_preload_links_header([preload_link]);;;;;
+        send_preload_links_header([preload_link]) if send_link_header;;;;;
 ;;;;;
         link_tag;;;;;
       end;;;;;
diff --git a/actionview/test/template/asset_tag_helper_test.rb b/actionview/test/template/asset_tag_helper_test.rb;;;;;
index f0c8a10f57..cd6cdd8925 100644;;;;;
#NOM?;;;;;
#NOM?;;;;;
@@ -628,6 +628,13 @@ def test_should_set_preload_early_hints_with_rel_modulepreload;;;;;
     end;;;;;
   end;;;;;
 ;;;;;
#NOM?;;;;;
#NOM?;;;;;
"+      preload_link_tag(""""http://example.com/all.js"""", type: """"module"""", preload_links_header: false)";;;;;
"+      assert_nil @response.headers[""""Link""""]";;;;;
#NOM?;;;;;
#NOM?;;;;;
+;;;;;
   def test_should_set_preload_links_with_integrity_hashes;;;;;
     with_preload_links_header do;;;;;
"       stylesheet_link_tag(""""http://example.com/style.css"""", integrity: """"sha256-AbpHGcgLb+kRsJGnwFEktk7uzpZOCcBY74+YBdrKVGs"""")";;;;;
```;;;;;
;;;;;
",2024-03-28T18:33:40Z,2024-03-28T21:07:42Z,[{'id': 3666649, 'node_id': 'MDU6TGFiZWwzNjY2NjQ5', 'url': 'https://api.github.com/repos/rails/rails/labels/actionview', 'name': 'actionview', 'color': 'd7e102', 'default': False, 'description': None}, {'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}]""";;;;;
"2213548177,[RF-DOCS] Action View Overview Guide [ci-skip],""## Motivation / Background";;;;;
;;;;;
This Pull Request is for updating and improving the Action View Overview guide. ;;;;;
;;;;;
Note: This guide was intertwined with a different guide (Layouts and Rendering) with duplicate content and overlapping concepts. A follow-on PR will focus on the other guide and then we will do a pass over both guides together.;;;;;
;;;;;
## Details;;;;;
;;;;;
#NOM?;;;;;
#NOM?;;;;;
#NOM?;;;;;
#NOM?;;;;;
;;;;;
## Testing;;;;;
;;;;;
- [x] Run `guides:generate`;;;;;
- [x] Run `guides:lint` ;;;;;
"- [x] Run rubocop on code samples"",2024-03-28T15:41:52Z,2024-04-06T01:04:57Z,""[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2213456024,[Bug][ActiveRecord] #count(:all) on grouped query should clear ORDER BY if it clears SELECT,""### Steps to reproduce";;;;;
;;;;;
"Build a query that uses `.count(:all)` and `.group(...)` with a custom `.select(""""... AS alias"""")` and a `.order(:alias)`";;;;;
;;;;;
It seems ActiveRecord when calling `.count(:all)` will remove from the SELECT the `alias` column and everything else but the primary key, however it keeps the `ORDER BY alias`. To execute `COUNT(...)`, the `ORDER BY` is kind of irrelevant, it should probably be removed.;;;;;
;;;;;
ActiveRecord seems to already clear ORDER BY for some specific scenario as seen here: https://github.com/rails/rails/blob/main/activerecord/lib/active_record/relation/calculations.rb#L240 however in my scenario, the `has_include(...)` returns false and goes straight to `perform_calculation(operation, column_name)`;;;;;
;;;;;
Here https://github.com/rails/rails/blob/main/activerecord/lib/active_record/relation/calculations.rb#L536 select values are redefined, maybe we should simply add;;;;;
;;;;;
```;;;;;
relation.order_values = [];;;;;
```;;;;;
;;;;;
;;;;;
**Test code**;;;;;
;;;;;
Note: It ain't specific to Postgres. Error is present with SQLite too.;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
# Toggle this to test with SQLite;;;;;
use_postgres = false;;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", """"7.1.3.2""""";;;;;
;;;;;
"  gem """"database_cleaner""""";;;;;
;;;;;
  if use_postgres;;;;;
"    gem """"pg""""";;;;;
  else ;;;;;
"    gem """"sqlite3""""";;;;;
  end;;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
"require """"database_cleaner""""";;;;;
;;;;;
if use_postgres;;;;;
"  ActiveRecord::Base.establish_connection(adapter: """"postgresql"""", host: """"localhost"""", database: """"dev"""", username: """"dev"""",";;;;;
"  password: """"dev"""", port: 5437)";;;;;
else;;;;;
"  ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
end;;;;;
;;;;;
ActiveRecord::Base.logger = Logger.new($stdout);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :conversations, force: true do |t| # rubocop:disable Style/SymbolProc;;;;;
    t.timestamps;;;;;
  end;;;;;
;;;;;
  create_table :messages, force: true do |t|;;;;;
    t.references :conversation;;;;;
    t.timestamps;;;;;
  end;;;;;
end;;;;;
;;;;;
class Conversation < ActiveRecord::Base # rubocop:disable Rails/ApplicationRecord;;;;;
  has_many :messages, dependent: :destroy;;;;;
end;;;;;
;;;;;
class Message < ActiveRecord::Base # rubocop:disable Rails/ApplicationRecord;;;;;
  belongs_to :conversation;;;;;
end;;;;;
;;;;;
DatabaseCleaner.strategy = :truncation;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  class SuccessException < StandardError; end;;;;
;;;;;
  def setup;;;;;
    DatabaseCleaner.start;;;;;
    Conversation.create!.tap do |conversation|;;;;;
      Message.create!(conversation: conversation);;;;;
      Message.create!(conversation: conversation);;;;;
      Message.create!(conversation: conversation);;;;;
    end;;;;;
  end;;;;;
  ;;;;;
  def teardown;;;;;
    DatabaseCleaner.clean;;;;;
  end;;;;;
;;;;;
  def assert_not_raise(&block);;;;;
    assert_raises(SuccessException) do;;;;;
      block.call;;;;;
      raise SuccessException;;;;;
    end;;;;;
  end;;;;;
;;;;;
  def sql_now;;;;;
"    if ActiveRecord::Base.connection_db_config.adapter == """"sqlite3""""";;;;;
"      """"DATE('NOW')""""";;;;;
    else;;;;;
"      """"NOW()""""";;;;;
    end;;;;;
  end;;;;;
;;;;;
  def base_query;;;;;
    Conversation;;;;;
            .select(;;;;;
"              """"conversations.*"""",";;;;;
"              """"COUNT(messages.id) AS messages_count"""",";;;;;
"              """"#{sql_now} AS last_activity_at""""";;;;;
            );;;;;
            .left_joins(:messages);;;;;
            .group(:id);;;;;
  end;;;;;
;;;;;
  def test_it_should_work_with_aliased_order_by;;;;;
"    query = base_query.order(""""last_activity_at DESC"""")";;;;;
;;;;;
    assert_not_raise { query.count(:all) };;;;;
  end;;;;;
;;;;;
  def test_it_demonstrates_that_non_aliased_order_by_work;;;;;
"    query = base_query.order(Arel.sql(""""#{sql_now} DESC""""))";;;;;
;;;;;
;;;;;
    assert_not_raise { query.count(:all) };;;;;
  end;;;;;
;;;;;
  def test_without_order_by_it_always_work;;;;;
"    query = base_query # .order(""""last_activity_at DESC"""")";;;;;
;;;;;
    assert_not_raise { query.count(:all) };;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
This query should work;;;;;
;;;;;
```ruby;;;;;
    Conversation;;;;;
            .select(;;;;;
"              """"conversations.*"""",";;;;;
"              """"COUNT(messages.id) AS messages_count"""",";;;;;
"              """"NOW() AS last_activity_at""""";;;;;
            );;;;;
            .left_joins(:messages);;;;;
            .order(:last_activity_at);;;;;
            .group(:id);;;;;
```;;;;;
;;;;;
Expected query;;;;;
;;;;;
```;;;;;
SELECT ;;;;;
"  COUNT(*) AS """"count_all"""", ";;;;;
"  """"conversations"""".""""id"""" AS """"conversations_id"""" ";;;;;
"FROM """"conversations"""" ";;;;;
"LEFT OUTER JOIN """"messages"""" ON """"messages"""".""""conversation_id"""" = """"conversations"""".""""id"""" ";;;;;
"GROUP BY """"conversations"""".""""id""""";;;;;
;;;;;
#NOM?;;;;;
#NOM?;;;;;
```;;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
```;;;;;
"ActiveRecord::StatementInvalid <""""PG::UndefinedColumn: ERROR:  column \""""last_activity_at\"""" does not exist";;;;;
;;;;;
SELECT ;;;;;
"  COUNT(*) AS """"count_all"""", ";;;;;
"  """"conversations"""".""""id"""" AS """"conversations_id"""" ";;;;;
"FROM """"conversations"""" ";;;;;
"LEFT OUTER JOIN """"messages"""" ON """"messages"""".""""conversation_id"""" = """"conversations"""".""""id"""" ";;;;;
"GROUP BY """"conversations"""".""""id""""";;;;;
ORDER BY last_activity_at DESC;;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.0.0;;;;;
",2024-03-28T14:59:27Z,2024-04-02T15:15:35Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2210141203,[RF-DOCS] Action View Helpers Documentation [ci-skip],""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
This Pull Request has been created to provide clarity to the Action View Helpers guide.;;;;;
;;;;;
### Detail;;;;;
;;;;;
;;;;;
Here are some notes on what has changed:;;;;;
;;;;;
Some notes:;;;;;
;;;;;
- AssetTagHelper talks about a bunch of *_tag helpers, but also some of them mention *_url and *_path helpers. (which live in AssetUrlHelper). Those are helpful to know, but less frequently used I think. It's also incomplete (some mention it, others don't, *_tag helpers have their *_url/*_path counterparts, or use the basic `asset_path/url`.) I don't think it's worth expanding with all these variants, I'd rather remove the individual ones, and if we want to mention, we can maybe bundle them together within the same subsection instead, or just as examples of the related *_tag sections.;;;;;
- The cache helper could use some more info. I don't think it's worth linking to the Fragments API, but rather to the [fragments caching piece of the caching guide](https://edgeguides.rubyonrails.org/caching_with_rails.html#fragment-caching), where it goes into more details. The example could also be expanded to show something that at least gets a record as an example too.;;;;;
- `content_for` could perhaps benefit from showing `content_for?` in the example, somehow.;;;;;
- We do not want to show any form helpers here, just link to the specific guide, but we can maybe make that paragraph clearer.;;;;;
- `escape_javascript` could use an example (not the one that's on the API as it seems very jquery-related... maybe some other example of embedding some Ruby in JS or something);;;;;
- mention of `rails-html-sanitizer` could be linked.;;;;;
"- """"NB: The output may still contain unescaped '<', '>', '&' characters and confuse browsers."""" should be a note?";;;;;
- UrlHelper could have a few extra items like `current_page?` and `mail_to`, which can be commonly used. (no need to show each and every method, just the most common ones);;;;;
- CsrfHelper seems unnecessary to explain here. (we don't add CspHelper for instance... not sure we need to get into those, can probably skip them.);;;;;
- We could have a section on `TextHelper` mentioning things like `simple_format`, `truncate`, `excerpt`, maybe some other(s). (again, not everything, just the most commonly used ones);;;;;
- We could have a section on `TagHelper` mentioning `content_tag` and `tag`.;;;;;
;;;;;
- Updated the 'what you will know section';;;;;
#NOM?;;;;;
#NOM?;;;;;
#NOM?;;;;;
#NOM?;;;;;
- Added more clarity to `capture` and `content_for`;;;;;
#NOM?;;;;;
#NOM?;;;;;
#NOM?;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-27T08:14:18Z,2024-04-04T09:42:14Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2209113208,Fix PostgreSQL `include` indexes with keyword column names,Fixes #51428.,2024-03-26T19:13:53Z,2024-03-27T16:01:54Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2208982733,Problem with field named timestamp and index with include,""### Steps to reproduce";;;;;
;;;;;
"When you have a field named """"timestamp"""" and want to add an index including this field, the schema is generated with escape characters, making it impossible to run the load schema";;;;;
;;;;;
```ruby;;;;;
class ChangeIndexStatusToEvent < ActiveRecord::Migration[7.1];;;;;
  def change;;;;;
    add_index :events, [:status, :name, :app_id], name: 'index_events_on_status_name_app_id', include: [:id, :timestamp];;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
This schema is generated when running the migrate above:;;;;;
;;;;;
```ruby;;;;;
"t.index [""""status"""", """"name"""", """"app_id"""", """"timestamp""""], name: """"index_events_on_status_name_app_id"""", include: [""""id"""", """"\""""timestamp\""""""""]";;;;;
```;;;;;
;;;;;
Test case:;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
require 'bundler/inline';;;;;
;;;;;
gemfile(true) do;;;;;
  source 'https://rubygems.org';;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
  gem 'rails';;;;;
;;;;;
  gem 'pg';;;;;
end;;;;;
;;;;;
require 'active_record';;;;;
require 'minitest/autorun';;;;;
require 'logger';;;;;
;;;;;
# `CREATE DATABASE rails_51428_test;`;;;;
ActiveRecord::Base.establish_connection(adapter: 'postgresql', database: 'rails_51428_test');;;;;
ActiveRecord::Base.logger = Logger.new($stdout);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :events, force: true do |t|;;;;;
    t.decimal :amount, precision: 10, scale: 0, default: 0, null: false;;;;;
    t.datetime :timestamp;;;;;
  end;;;;;
;;;;;
  add_index :events, [:amount], name: 'index_events_on_timestamp', include: [:timestamp];;;;;
end;;;;;
;;;;;
ActiveRecord::SchemaDumper.dump;;;;;
;;;;;
class Event < ActiveRecord::Base; end;;;;
;;;;;
class EventTest < Minitest::Test;;;;;
  def test_stuff;;;;;
    assert_equal 0, Event.count;;;;;
    Event.create!(amount: 1);;;;;
    assert_equal 1, Event.count;;;;;
;;;;;
    # Note: this fails silently. I later discovered that neither this nor;;;;;
    # `ActiveRecord::Tasks::DatabaseTasks.load_schema_current(:ruby, ENV['SCHEMA'])`;;;;;
    # fail. See comments below.;;;;;
    puts `rails db:schema:load`;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
"I am not sure if the word """"timestamp"""" is reserved for the system, but I started having this problem after upgrading the rails version from 7.0.3 to 7.1.0";;;;;
;;;;;
;;;;;
### Expected behavior;;;;;
"Don't escape the characters at include in index or add this explanation to take care to use field named """"timestamp"""" in Rails Guide.";;;;;
;;;;;
### Actual behavior;;;;;
"Using field named """"timestamp"""" and adding index with this field in include, results in the schema with escaped characters, making it impossible to run the load schema.";;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.0;;;;;
;;;;;
**Ruby version**: 3.3.0;;;;;
",2024-03-26T18:15:15Z,2024-03-27T20:46:42Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 70310659, 'node_id': 'MDU6TGFiZWw3MDMxMDY1OQ==', 'url': 'https://api.github.com/repos/rails/rails/labels/PostgreSQL', 'name': 'PostgreSQL', 'color': 'fbca04', 'default': False, 'description': None}, {'id': 126910270, 'node_id': 'MDU6TGFiZWwxMjY5MTAyNzA=', 'url': 'https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps', 'name': 'With reproduction steps', 'color': '009800', 'default': False, 'description': None}]""";;;;;
"2208080356,Request session id unavailable when streaming HTML,""The default Content Security Policy nonce generator returns the `request.session.id`, but this isn’t available when streaming an HTML response.";;;;;
;;;;;
### Steps to reproduce;;;;;
1. Enable the default Content Security Policy by uncommenting the code generated in `config/initializers/content_security_policy.rb`;;;;;
2. Stream an HTML response form a controller;;;;;
;;;;;
**Content Security Policy Config:**;;;;;
```ruby;;;;;
Rails.application.configure do;;;;;
  config.content_security_policy do |policy|;;;;;
    policy.default_src :self, :https;;;;;
    policy.font_src    :self, :https, :data;;;;;
    policy.img_src     :self, :https, :data;;;;;
    policy.object_src  :none;;;;;
    policy.script_src  :self, :https;;;;;
    policy.style_src   :self, :https;;;;;
  end;;;;;
;;;;;
  config.content_security_policy_nonce_generator = ->(request) { request.session.id };;;;;
  config.content_security_policy_nonce_directives = %w(script-src style-src);;;;;
end;;;;;
```;;;;;
;;;;;
**Example controller:**;;;;;
;;;;;
```ruby;;;;;
class DashboardController < ApplicationController;;;;;
  def index;;;;;
"    headers[""""X-Accel-Buffering""""] = """"no""""";;;;;
"    headers[""""Cache-Control""""] = """"no-transform""""";;;;;
"    headers[""""Last-Modified""""] = Time.now.httpdate";;;;;
"    headers[""""Content-Type""""] = """"text/html";" charset=utf-8""""";;;;
;;;;;
    self.response_body = Enumerator.new do |buffer|;;;;;
"      buffer << """"<html><head><title>Dashboard</title></head><body>""""";;;;;
"      buffer << """"<h1>Dashboard</h1>""""";;;;;
"      buffer << """"<p>Welcome to the dashboard</p>""""";;;;;
"      buffer << """"</body></html>""""";;;;;
    end;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behaviour;;;;;
The Content Security Policy headers should include a nonce based on the session id.;;;;;
;;;;;
```;;;;;
Content-Security-Policy: default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src 'none'; script-src 'self' https: 'nonce-2c3f06bf498ed7295cc4612bdc7ad90e'; style-src 'self' https: 'nonce-2c3f06bf498ed7295cc4612bdc7ad90e'
```;;;;;
;;;;;
### Actual behaviour;;;;;
The Content Security Policy headers do not include a nonce.;;;;;
;;;;;
```;;;;;
Content-Security-Policy: default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src 'none'; script-src 'self' https:; style-src 'self' https:
```;;;;;
;;;;;
### Workaround;;;;;
As a workaround, you can set a session attribute and remove it before setting the `response_body`.;;;;;
;;;;;
```ruby;;;;;
session[:foo] = 1;;;;;
session.delete(:foo);;;;;
```;;;;;
;;;;;
This seems to get the session into a state where it has an `id`.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
"**Ruby version**: 3.3.0"",2024-03-26T12:13:22Z,2024-03-26T12:14:52Z,[]";;;;;
"2206546795,Add Active Model `Collection` attribute type,""### Summary";;;;;
;;;;;
One case that is not yet covered by the current standard types is for attributes that represent a collection of multiple values. For example, one might need to represent a subset of strings as a list in a single attribute; or even an entire group of associated models that are all embedded in a named collection. ;;;;
;;;;;
;;;;;
This PR aims to implement a new Collection type.;;;;;
It subclasses the base Value class and overrides the necessary methods so casting and serialization work for an array of objects that are themselves valid for one of the types in the Registry. This ensures that each element of the collection can be cast and serialized individually by delegating the operation to the appropriate type instance.;;;;;
;;;;;
Collection serializes itself as a JSON array on the database. For casting, it attempts to convert values to a Ruby array.;;;;;
;;;;;
Methods:;;;;;
;;;;;
- `type`: returns the :collection symbol.;;;;;
- `serializable?`: checks if the given value is an array containing only elements in which are all serializable for the collection type. It will instantiate the type passed during its own initialization and call serializable? for each element.;;;;;
- `serialize`: returns a JSON string of an array with all elements serialized by the collection type.;;;;;
- `deserialize`: expects a JSON array string and converts it into a Ruby array with each element deserialized by the collection type.;;;;;
- `cast`: converts the given array into a normalized collection of cast values. It will map the given array to a new one in which each element is cast into a new value by the collection type.;;;;;
- `changed_in_place?`: Accepts raw serialized value, deserializes it and checks if any of the elements of the collections were mutated according to the collection type method of the same name.;;;;;
- `assert_valid_value`: checks if all elements of the given array are accepted by the collection type method of the same name.;;;;;
;;;;;
;;;;;
;;;;;
### Other Information;;;;;
;;;;;
This change also introduces additional `Value#valid_value?` method that is supposed to separate the assertion, which raises an exception from a boolean check that can be reused in other places. This way new types won't have to override the whole `assert_valid_value` method if they want to keep the default error message.;;;;;
;;;;;
Let me know if this change should be implemented in a separate PR. I decided to keep it in this PR for better readability of the change but definitely willing to extract it and have a discussion is a different PR. Thanks!;;;;;
;;;;;
### Documentation;;;;;
;;;;;
Currently only the class itself is covered with documentation. But we have plans to cover public methods as well.;;;;;
Either in this PR, in a separate one or perhaps as part of the https://github.com/rails/rails/pull/44306;;;;;
;;;;;
"Original PR #44324"",2024-03-25T19:38:19Z,2024-04-03T17:01:06Z,""[{'id': 107190, 'node_id': 'MDU6TGFiZWwxMDcxOTA=', 'url': 'https://api.github.com/repos/rails/rails/labels/activemodel', 'name': 'activemodel', 'color': '00E5FF', 'default': False, 'description': None}]""";;;;;
"2206478011,Add `Model` type to Active Model attributes,""### Summary";;;;;
;;;;;
The new Model type handles all operations on conversion around model representations, from POROs to hashes and database string/JSON columns.;;;;;
;;;;;
Attributes that are specified as the Model type are required to also specify a class name, which will be used to cast the given values into model instances. On the database serialization side, the model is represented as a JSON, with its `AttributeSet` being serialized by the types of each respective attribute.;;;;;
;;;;;
;;;;;
;;;;;
### Docs:;;;;;
;;;;;
`type`: returns the :model symbol.;;;;;
;;;;;
`serializable?`: checks if the given value is an instance of the model class that this type was initialized with, returning false otherwise.;;;;;
;;;;;
`serialize`: returns a string with the JSON representation of the given model attributes. It achieves that by calling values_for_database in the model’s AttributeSet, and converts the hash received into a JSON string.;;;;;
;;;;;
`deserialize`: this method expects a JSON string, supposed to be a serialized set of attributes of a model instance. It proceeds to convert the JSON into a Ruby hash, and then instantiates a new model of the appropriate class name with the Ruby hash as its attributes. The mass assignment will allow each attribute to be deserialized accordingly and stored in the instance’s attribute set.;;;;;
;;;;;
`cast`: receives a value that is either a hash of attributes or a model instance. It then instantiates a new model based on the class name with the given attributes. This means that if a model is passed, a new instance with the same attribute values will be returned, but not the exact same object.;;;;;
;;;;;
`changed_in_place?`: Accepts a raw serialized attribute set, deserializes it and compares it with the given model instance. If the deserialized model’s attribute set is equal to the given model’s attribute set, returns true, or false otherwise.;;;;;
;;;;;
`assert_valid_value`: this method checks if the given value can be cast to the model class. It takes either a model or a hash of attributes. If the model is not the same class as the type’s class name, or if the given hash contains keys that do not belong to the class's attribute set, it raises an error.;;;;;
;;;;;
### Other Information;;;;;
;;;;;
`attributes_for_database` was copied from ;;;;;
https://github.com/rails/rails/blob/caced273937cf61c9ed2056877e0c3cd6a6b6577/activerecord/lib/active_record/attribute_methods/before_type_cast.rb#L70;;;;;
with an intention to only exist in Active Model, but kept in both places for simplicity of this PR;;;;;
;;;;;
"Original PR #44380"",2024-03-25T19:02:28Z,2024-03-25T21:39:48Z,""[{'id': 107190, 'node_id': 'MDU6TGFiZWwxMDcxOTA=', 'url': 'https://api.github.com/repos/rails/rails/labels/activemodel', 'name': 'activemodel', 'color': '00E5FF', 'default': False, 'description': None}]""";;;;;
"2204627024,Fix `destroy_async` job for owners with composite primary keys,""Currently, `DestroyAssociationAsyncJob` does not work when we have an owner with a composite primary key. ";;;;;
"This PR fixes that."",2024-03-24T23:55:18Z,2024-03-24T23:56:54Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2203991751,ActiveSupport::Cache.expand_cache_key sometimes returns falsely same key in parallel tests,""### Steps to reproduce";;;;;
Thats the hard part here! I still didnt figure out how to reproduce it safely. ;;;;;
What i can tell is that this does not happen when i execute a single testcase. It also doesnt happen when i set parallel workers to `1`.;;;;;
;;;;;
When parallel workers is set to `processors` and all tests are executed via `rails test`, the following test is breaking repeatedly:;;;;;
```ruby;;;;;
"      it """"returns updated records omitting cache and returning new etag"""" do";;;;;
"        get """"/apis/v1/me/tickets""""";;;;;
        assert_valid_json_response;;;;;
;;;;;
"        assert_changes ->{ last_response.headers[""""etag""""] } do";;;;;
          travel 1.second;;;;;
          tickets(:multi).touch;;;;;
;;;;;
"          get """"/apis/v1/me/tickets""""";;;;;
          assert_valid_json_response;;;;;
        end;;;;;
      end;;;;;
```;;;;;
The etag header is calculated basically via this line of code which i also found out to return the same **wrong key**. The `updated_at` on the record `tickets(:multi)` changes, but the underlying query fetching the `max(tickets.updated_at)` seem to return an older timestamp? At least the timestamp in the key remains the same.;;;;;
```;;;;;
ActiveSupport::Cache.expand_cache_key current_user.tickets.visible;;;;;
```;;;;;
The visible scope: ;;;;;
```;;;;;
"scope :visible, -> { joins(:admittances).where(tickets: {hidden: false}).merge(Admittance.visible).group(""""tickets.id"""")}";;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
The etag header should change in the same way whether i execute a single test or all together without flakiness. ;;;;;
;;;;;
### Actual behavior;;;;;
The etag header **remains equal** which is wrong. But this happens only when executing all tests parallelized which is kinda flaky.;;;;;
;;;;;
### Notes;;;;;
I found out that changing the scope implementation from `group` to `distinct` fixes it:;;;;;
```;;;;;
"scope :visible, -> { joins(:admittances).where(tickets: {hidden: false}).merge(Admittance.visible).select(""""distinct on (#{table_name}.id) #{table_name}.*"""")}";;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.2;;;;;
;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-23T18:20:10Z,2024-03-27T09:26:49Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}]""";;;;;
"2203763430,Ignore destroyed records in CollectionAssociation#empty?,""Fix: https://github.com/rails/rails/issues/51388";;;;;
;;;;;
This commit isn't in a mergeable state, it's just to better understand the issue at hand. There is likely similar issues in other methods and it would need some tests.;;;;;
;;;;;
",2024-03-23T08:08:02Z,2024-03-23T08:08:09Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2203250382,Expose @association as a reader in ActiveRecord_Associations_CollectionProxy,""This makes it possible to reflect on associations. For example, Blog.first.posts.association.owner would show that the blog is the owner of the association.";;;;;
;;;;;
## Why?;;;;;
;;;;;
I have a link helper in my Rails app that reflects on associations, like this: `show(@blog.posts)`. Currently I can't reflect on that association unless I access a private instance variable:;;;;;
;;;;;
```ruby;;;;;
"@blog.posts.instance_variable_get(""""@association"""").target";;;;;
```;;;;;
;;;;;
This commit exposes the `@association` object in a public API so I can reflect on associations.;;;;;
",2024-03-22T20:22:30Z,2024-03-26T21:13:58Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2202930057,`ActiveRecord::Suppressor` not working on associations that are loaded via `inverse_of` on unsaved records,""### Steps to reproduce";;;;;
This issue comes from [this comment](https://github.com/rails/rails/pull/50284#issuecomment-2004506200), and started happening after #50284. @rafaelfranca confirmed this behaviour (outlined by @andrewyoo) is intended:;;;;;
;;;;;
```ruby;;;;;
Loading development environment (Rails 7.2.0.alpha);;;;;
umami(dev)> u = User.new;;;;;
=> ;;;;;
#<User:0x000000012c399b30;;;;;
...;;;;;
umami(dev)> s = Shift.new user: u;;;;;
=> #<Shift:0x0000000129e31d98 id: nil, user_id: nil>;;;;;
umami(dev)> s.user;;;;;
=> ;;;;;
#<User:0x000000012c399b30>;;;;;
umami(dev)> u.shifts;;;;;
=> [#<Shift:0x0000000129e31d98 id: nil, user_id: nil>];;;;;
```;;;;;
;;;;;
However, this has the side effect of breaking `ActiveRecord::Suppressor` if you happen to modify the association owner outside the suppression block. Here's a minimal reproduction script:;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
"require """"debug""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
ActiveRecord::Base.has_many_inversing = true;;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :events, force: true do |t|;;;;;
    t.string :action, limit: 255;;;;;
    t.references :recording;;;;;
;;;;;
    t.timestamps;;;;;
  end;;;;;
;;;;;
  create_table :recordings, force: true do |t|;;;;;
    t.string :content;;;;;
;;;;;
    t.timestamps;;;;;
  end;;;;;
end;;;;;
;;;;;
class Recording < ActiveRecord::Base;;;;;
  has_many :events, dependent: :destroy;;;;;
;;;;;
  after_create :track_created;;;;;
;;;;;
  def track_event(action);;;;;
    Event.create! recording: self, action: action;;;;;
  end;;;;;
;;;;;
  def copy;;;;;
    transaction do;;;;;
      recording = Event.suppress { Recording.create!(content: content) };;;;;
      recording.update!(updated_at: updated_at);;;;;
      recording.track_event(:copied_copy);;;;;
      track_event(:copied_original);;;;;
    end;;;;;
  end;;;;;
;;;;;
  private;;;;;
    def track_created;;;;;
      track_event :created;;;;;
    end;;;;;
end;;;;;
;;;;;
class Event < ActiveRecord::Base;;;;;
  belongs_to :recording, required: false;;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_suppress_events_on_copies;;;;;
"    recording = Recording.create!(content: """"original"""")";;;;;
    assert_equal 1, Event.count;;;;;
;;;;;
    recording.copy;;;;;
;;;;;
    assert_equal 3, Event.count;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
Unless it's decided that this is now the expected behaviour for suppression as well, and needs to be documented, I'd expect the above test to pass. ;;;;;
;;;;;
I think, ideally, we'd fix `ActiveRecord::Suppressor` to deal with this case: a record that was set but not saved while the model was suppressed shouldn't be saved afterwards indirectly via the association owner. ;;;;;
;;;;;
### Actual behavior;;;;;
The test fails with ;;;;;
```;;;;;
Failure:;;;;;
BugTest#test_suppress_events_on_copies [test.rb:75]:;;;;;
Expected: 3;;;;;
  Actual: 4;;;;;
```;;;;;
because we added a `created` event to the copy when we save the original recording outside the `Event.suppress` block. ;;;;;
;;;;;
### System configuration;;;;;
**Rails version**:  Rails version: `main` (7c68c52);;;;;
**Ruby version**: 3.3.0 (though it should happen with any version).;;;;;
",2024-03-22T17:00:08Z,2024-03-25T12:53:02Z,[]
2202177190,Inconsistency between `any?`/`empty?` and `size` for collection associations loaded via `inverse_of`,### Steps to reproduce";;;;;
This behaviour seems to have been uncovered by #50284, but it wasn't introduced by that change. Now, if you have two associations like these: ;;;;;
;;;;;
```ruby;;;;;
class Blob < ActiveRecord::Base;;;;;
  has_many :attachments;;;;;
end;;;;;
 ;;;;;
class Attachment < ActiveRecord::Base;;;;;
  belongs_to :blob, required: false;;;;;
end;;;;;
```;;;;;
with `ActiveRecord::Base.has_many_inversing = true`, the following: ;;;;;
```ruby;;;;;
attachment.blob;;;;;
```;;;;;
would load `attachment` within `attachment.blob.attachments` inside the collection's `@target` without setting it as `loaded!`. The result is what I find a bit inconsistent behaviour if you delete `attachment` but I'm not quite sure what the right behaviour should be. ;;;;;
;;;;;
Here's a reproduction script where the inconsistency can be seen in action:;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
"  gem """"stringio"""", """"3.0.9""""";;;;;
"  gem """"debug""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
 ;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
ActiveRecord::Base.has_many_inversing = true;;;;;
 ;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :attachments, force: true do |t|;;;;;
    t.string :name, limit: 255;;;;;
    t.integer :blob_id;;;;;
;;;;;
    t.timestamps;;;;;
  end;;;;;
 ;;;;;
  create_table :blobs, force: true do |t|;;;;;
    t.timestamps;;;;;
  end;;;;;
end;;;;;
 ;;;;;
class Blob < ActiveRecord::Base;;;;;
  has_many :attachments;;;;;
;;;;;
  def has_attachments?;;;;;
    attachments.any?;;;;;
  end;;;;;
end;;;;;
 ;;;;;
class Attachment < ActiveRecord::Base;;;;;
  belongs_to :blob, required: false;;;;;
;;;;;
  after_destroy :destroy_exclusive_blobs;;;;;
;;;;;
  private;;;;;
    def destroy_exclusive_blobs;;;;;
      blob.destroy if blob && !blob.has_attachments?;;;;;
    end;;;;;
end;;;;;
 ;;;;;
class BugTest < Minitest::Test;;;;;
  def test_destroy_exclusive_blobs;;;;;
    blob = Blob.create!;;;;;
    attachment = Attachment.create!(blob: blob);;;;;
;;;;;
    assert_equal 1, Blob.count;;;;;
;;;;;
    attachment.destroy;;;;;
;;;;;
    assert_equal 0, Blob.count;;;;;
   end;;;;;
 end;;;;;
```;;;;;
;;;;;
The test fails after #50284 as `any?` returns `true`. That comes from `empty?` https://github.com/rails/rails/blob/68b20b6513fe56ca80e4966628c231b4d6113bea/activerecord/lib/active_record/associations/collection_association.rb#L230-L236;;;;;
;;;;;
`loaded?` is false, yet `target` includes an `Attachment` record, so `target.empty?` is false. Note that `target.emtpy?` there was added initially to consider newly created records that hadn't been persisted yet (https://github.com/rails/rails/pull/8912). ;;;;;
;;;;;
If replacing `attachments.any?` with `attachments.size > 0`, like this: ;;;;;
```ruby;;;;;
class Blob < ActiveRecord::Base;;;;;
  has_many :attachments;;;;;
;;;;;
  def has_attachments?;;;;;
    attachments.size > 0;;;;;
  end;;;;;
end;;;;;
```;;;;;
the test passes. ;;;;;
;;;;;
### Expected behavior;;;;;
I'd expect both ways, `attachments.size > 0` and `attachments.any?` to behave in the same way, but I'm not completely sure given the code for `CollectionAssociation#empty?` and `CollectionAssociation#size`. If they're supposed to behave inconsistently in this case, perhaps this should be documented. ;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: `main` (7c68c5210cbc245d778daa7958cab73bc74f4669);;;;;
;;;;;
"**Ruby version**: 3.3.0 (though it should happen with any version). "",2024-03-22T10:25:40Z,2024-03-25T15:49:29Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}]""";;;;;
"2201499276,Inconsistent behaviour with previous encryption schemes at global / attribute level,""### Steps to reproduce";;;;;
;;;;;
ref: https://guides.rubyonrails.org/active_record_encryption.html#support-for-previous-encryption-schemes;;;;;
;;;;;
Consider these three tests, to be added to [encryption_schemes_test.rb](https://github.com/rails/rails/blob/main/activerecord/test/cases/encryption/encryption_schemes_test.rb):;;;;;
;;;;;
```ruby;;;;;
"  test """"deterministic property is retained when using previous schemes at the attribute level"""" do";;;;;
"    ActiveRecord::Encryption.config.deterministic_key = """"12345""""";;;;;
;;;;;
    encrypted_author_class = Class.new(Author) do;;;;;
"      self.table_name = """"authors""""";;;;;
;;;;;
      encrypts :name, deterministic: true, previous: { encryptor: PassthruEncryptor.new };;;;;
    end;;;;;
;;;;;
    assert_includes encrypted_author_class.deterministic_encrypted_attributes, :name;;;;;
;;;;;
"    author = encrypted_author_class.create!(name: """"Stephen King"""")";;;;;
"    assert_equal author, encrypted_author_class.find_by_name(""""Stephen King"""")";;;;;
  end;;;;;
;;;;;
"  test """"deterministic property is retained when using previous schemes at the global level"""" do";;;;;
"    ActiveRecord::Encryption.config.deterministic_key = """"12345""""";;;;;
    ActiveRecord::Encryption.config.previous = [{ encryptor: PassthruEncryptor.new }];;;;;
;;;;;
    encrypted_author_class = Class.new(Author) do;;;;;
"      self.table_name = """"authors""""";;;;;
;;;;;
      encrypts :name, deterministic: true;;;;;
    end;;;;;
;;;;;
    assert_includes encrypted_author_class.deterministic_encrypted_attributes, :name;;;;;
;;;;;
"    author = encrypted_author_class.create!(name: """"Stephen King"""")";;;;;
"    assert_equal author, encrypted_author_class.find_by_name(""""Stephen King"""")";;;;;
  end;;;;;
;;;;;
"  test """"deterministic property can be explicitly provided when using previous schemes at the attribute level"""" do";;;;;
"    ActiveRecord::Encryption.config.deterministic_key = """"12345""""";;;;;
;;;;;
    encrypted_author_class = Class.new(Author) do;;;;;
"      self.table_name = """"authors""""";;;;;
;;;;;
      encrypts :name, deterministic: true, previous: { encryptor: PassthruEncryptor.new, deterministic: true };;;;;
    end;;;;;
;;;;;
    assert_includes encrypted_author_class.deterministic_encrypted_attributes, :name;;;;;
;;;;;
"    author = encrypted_author_class.create!(name: """"Stephen King"""")";;;;;
"    assert_equal author, encrypted_author_class.find_by_name(""""Stephen King"""")";;;;;
  end;;;;;
```;;;;;
;;;;;
The second and third tests pass. The first fails:;;;;;
;;;;;
```;;;;;
Failure:;;;;;
ActiveRecord::Encryption::EncryptionSchemesTest#test_deterministic_property_is_retained_when_using_previous_schemes_at_the_attribute_level [test/cases/encryption/encryption_schemes_test.rb:195]:;;;;;
Expected: #<#<Class:0x00000001055dbcd0> id: 1>;;;;;
  Actual: nil;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
I think either the first and second test should both pass, or they should both fail. I think the third test is passing correctly.;;;;;
;;;;;
I can make a PR but would like some guidance on which behaviour is expected. I think the root cause is that global previous schemes get merged [here](https://github.com/rails/rails/blob/68b20b6513fe56ca80e4966628c231b4d6113bea/activerecord/lib/active_record/encryption/encryptable_record.rb#L73-L74) but attribute-level previous schemes do not.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: `main`;;;;;
;;;;;
**Ruby version**: any;;;;;
",2024-03-22T01:26:00Z,2024-03-22T01:26:20Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 5511275119, 'node_id': 'LA_kwDNIULPAAAAAUh_Ym8', 'url': 'https://api.github.com/repos/rails/rails/labels/encryption', 'name': 'encryption', 'color': '8D3EA8', 'default': False, 'description': ''}]""";;;;;
"2200888087,Add :variants option to render-related documentation [ci skip],""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
This Pull Request has been created because; I couldn't find the `:variants` option in the API documentation. I noticed it was covered in the guidelines, but it didn't go over that render can intake a singular version of `:variant` and partial rendering should only intake a plural version of the option.;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request adds ;;;;;
- `:variants` documentation to `ActionView::PartialRenderer`;;;;;
- `:variants` and `:variant` to `ActionController::Rendering`;;;;;
 ;;;;;
### Additional information;;;;;
;;;;;
It's not clear to me what areas should also include the as an available option, any insights would be helpful! 🙂 ;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-21T18:30:04Z,2024-03-28T13:54:45Z,[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}, {'id': 3666649, 'node_id': 'MDU6TGFiZWwzNjY2NjQ5', 'url': 'https://api.github.com/repos/rails/rails/labels/actionview', 'name': 'actionview', 'color': 'd7e102', 'default': False, 'description': None}]""";;;;;
"2200784853,form_helper documentation using article instead of post [ci skip],""### Motivation / Background";;;;;
;;;;;
This Pull Request has been created because it will make the form_with documentation clearer.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Documentation previously uses post which is confusing as the methods/verb is also post.;;;;;
;;;;;
Before;;;;;
"`<form action=""""/posts"""" method=""""post"""">`";;;;;
;;;;;
After;;;;;
"`<form action=""""/articles"""" method=""""post"""">`";;;;;
;;;;;
### Method;;;;;
;;;;;
Worked through a new Rails app with scaffold of article and checking the output of the HTML. Other HTML changes make it more authentic:;;;;;
- /> => at the end of the input;;;;;
#NOM?;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [X] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-21T17:31:25Z,2024-04-02T09:59:35Z,[{'id': 3666649, 'node_id': 'MDU6TGFiZWwzNjY2NjQ5', 'url': 'https://api.github.com/repos/rails/rails/labels/actionview', 'name': 'actionview', 'color': 'd7e102', 'default': False, 'description': None}]""";;;;;
"2200750652,fix hex bit strings with leading zeroes in postgresql,""### Motivation / Background";;;;;
;;;;;
Currently when casting a hex string argument for a PostgreSQL `bit` or `bit_varying` column, leading zeroes are discarded. This is unexpected, and differs from the behavior of binary strings.;;;;;
;;;;;
### Detail;;;;;
;;;;;
"This Pull Request ensures leading zeroes are preserved, e.g. assigning a bit string column """"0x5F"""" results in the bit string """"01011111"""" instead of """"1011111"""" being sent to Postgres.";;;;;
;;;;;
### Additional information;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-21T17:14:40Z,2024-03-27T20:30:53Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2200234507,Add ability to modify read timeout in runtime,"" ### Motivation / Background";;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Many different factors can impact the database query execution time from an application's point of view, such as network latency, query execution plan, table data shape, and others. ;;;;;
;;;;;
"Currently, the application can provide a """"hardcoded"""" `read_timeout` value in the database.yml, which helps to cap the maximum time it will take to execute one query.";;;;;
;;;;;
However, it is not uncommon for a web request to have multiple query executions, and multiple slow queries can impact its response time. To mitigate the long response times, our application has a maximum allowed request time budget, which can be exhausted by multiple types of these issues. We would like to control the application wait time dynamically and gradually reduce that as the web request progresses. It will allow us to prevent a query from exhausting the request time budget.;;;;;
;;;;;
### Detail;;;;;
;;;;;
I added the ability to customize the database `read_timeout` property dynamically. It will receive the `read_timeout` as a value or a callable object, and a block. Any connection execution within that block will have the read_timeout replaced by the provided value. For example:;;;;;
;;;;;
```ruby;;;;;
ActiveRecord::Base.with_custom_conn_properties(read_timeout: 1) do;;;;;
  ...;;;;;
  Model.where(...).to_a # The read_timeout will be set to 1s;;;;;
  ...;;;;;
end;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-21T13:41:05Z,2024-03-21T20:39:12Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2199929620,Add `ActiveRecord::Relation#readonly?`,""Indicates whether a relation was marked readonly.";;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
There's currently no documented API to check if a relation is readonly. Workarounds include loading the records and checking those for `readonly?` or using accessing the undocumented `readonly_value`.;;;;;
;;;;;
A Relation could be marked readonly and used as an indication to what should be rendered. This change makes that use case simpler.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Adds `ActiveRecord::Relation#readonly?` which behaves the same as `ActiveRecord::Base#readonly?` for the contained records.;;;;;
;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
"* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included."",2024-03-21T11:30:28Z,2024-03-24T09:48:55Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2198596882,Update oracle connection name to match adapter in tests,""";;;;;
<!--;;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
This Pull Request has been created to enable running the activerecord test suite with the oracle-enhanced adapter post activerecord 7.1.0;;;;;
;;;;;
### Detail;;;;;
;;;;;
https://github.com/rails/rails/pull/48015 (specifically 7572a13af6444abf51720051c6a93d72a7aead0e) adds a check to ensure the connection name matches the adapter name for the test run. For oracle databases, the testing files call the connection `oracle`, but the adapter we use is `oracle_enhanced`, resulting in an error when the tests are run:;;;;;
;;;;;
```;;;;;
bundle exec rake test:oracle TEST=test/cases/base_test.rb;;;;;
"/usr/local/bin/ruby -w -I""""lib:test"""" /usr/local/lib/ruby/gems/3.2.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb """"test/cases/base_test.rb""""";;;;;
Using oracle;;;;;
/app/activerecord/test/support/connection.rb:38:in `connect': The connection name did not match the adapter name. Connection name is 'oracle' and the adapter name is 'oracle_enhanced'. (ArgumentError);;;;;
;;;;;
"      raise ArgumentError, """"The connection name did not match the adapter name. Connection name is '#{connection_name}' and the adapter name is '#{arunit_adapter}'.""""";;;;;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;;;;;
"	from /app/activerecord/test/cases/test_case.rb:248:in `<class:TestCase>'";;;;;
"	from /app/activerecord/test/cases/test_case.rb:20:in `<module:ActiveRecord>'";;;;;
"	from /app/activerecord/test/cases/test_case.rb:16:in `<top (required)>'";;;;;
"	from /app/activerecord/test/cases/helper.rb:8:in `require'";;;;;
"	from /app/activerecord/test/cases/helper.rb:8:in `<top (required)>'";;;;;
"	from /app/activerecord/test/cases/base_test.rb:3:in `require'";;;;;
"	from /app/activerecord/test/cases/base_test.rb:3:in `<top (required)>'";;;;;
"	from /usr/local/lib/ruby/gems/3.2.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb:21:in `require'";;;;;
"	from /usr/local/lib/ruby/gems/3.2.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb:21:in `block in <main>'";;;;;
"	from /usr/local/lib/ruby/gems/3.2.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb:6:in `select'";;;;;
"	from /usr/local/lib/ruby/gems/3.2.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb:6:in `<main>'";;;;;
rake aborted!;;;;;
```;;;;;
;;;;;
This change updates the connection name to be `oracle_enhanced` so it matches the adapter. With these changes I can run;;;;;
```;;;;;
bundle exec rake test:oracle_enhanced TEST=test/cases/base_test.rb;;;;;
```;;;;;
without getting the connection name error.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
I did not rename `activerecord/test/schema/oracle_specific_schema.rb` because the config.example.yml has emulate_oracle_adapter set to true so `oracle_specific_schema` is still the name the LoadSchemaHelper looks for.;;;;;
;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-20T21:25:33Z,2024-03-21T21:45:41Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2198129239,Prevent autosave association with has_one defined on child class,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Adjusts the logic in inverse_polymorphic_association_changed? to determine if a has_one association's polymorphic association should autosave the associated record for a type change.;;;;;
;;;;;
Previously this would see the type as changed every time if the has_one is defined on a child class, since the polymorphic relationship saves the parent class as the *_type value. The new check resolves the correct class name to avoid these extra saves.;;;;;
;;;;;
Fixes #51280;;;;;
;;;;;
### Detail;;;;;
;;;;;
Also confirmed that the new test fails without the code change:;;;;;
;;;;;
```;;;;;
Failure:;;;;;
TestAutosaveAssociationOnAHasOneAssociation#test_should_not_saved_for_unchanged_sti_type_on_polymorphic_association [test/cases/autosave_association_test.rb:1652]:;;;;;
Expected: 2;;;;;
  Actual: 3;;;;;
;;;;;
;;;;;
bin/rails test test/cases/autosave_association_test.rb:1620;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-20T17:31:55Z,2024-03-20T17:33:03Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2196727075,[ci skip] Document `ActiveSupport::Subscriber` in guides,""### Motivation / Background";;;;;
;;;;;
`ActiveSupport::Subscriber` provides a nice way to handle `ActiveSupport::Notifications::Event`. However, there is a lack of guide.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Document how to subscribe event of given namespace using `ActiveSupport::Subscriber`.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [X] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-20T06:04:17Z,2024-03-20T06:05:10Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2196576028,""Replace Order with Book in """"Creating Namespaced Models"""" section of docs for consistency"",""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
This Pull Request has been created because the documentation is improved by consistently using the same model names throughout.;;;;;
https://github.com/rails/rails/pull/51226#discussion_r1527578109;;;;;
;;;;;
### Detail;;;;;
;;;;;
"This Pull Request changes the Active Record Basics Guide """"Creating Namespaced Models"""" section to use Book instead of Order in the examples, consistent with the rest of the document.";;;;;
;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-20T03:00:04Z,2024-03-21T18:34:36Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2196082119,Add ability to prevent access to a database,""### Motivation / Background";;;;;
;;;;;
From discussion: https://discuss.rubyonrails.org/t/proposal-prevent-activerecord-access/85322;;;;;
;;;;;
> I have some methods that I know are being called in loops and these methods will become N+1 DB query situations if a database query is generated in any way. What I’m hoping for is some sort of runtime policy that says “no ActiveRecord access is allowed in here, you must load everything you need first”;;;;;
> ;;;;;
> Here’s another way to put it. If I have some business logic that combines data loading with some kind of pure calculation, it would be nice to have the power, when it is useful, to strongly separate these concerns and be sure the separation remains.;;;;;
> ;;;;;
> This power could be useful for any situation where a hot code path must remain free of queries. Perhaps it could be used to implement a policy to prevent database access during the render phase of an HTTP request.;;;;;
;;;;;
N+1 queries can be a real performance concern. It isn't always immediately obvious what the impacts could be of adding a new query. I wish engineers would be constantly watching the query log as they work. But things can get out of hand quickly, and even if you are watching the wall of queries being logged, N+1s can sometimes disappear into the noise.;;;;;
;;;;;
Also, there are times when I want a pure in-memory algorithm. An API like this would allow me to both express and enforce the intention to not be hitting the database in a branch of code.;;;;;
;;;;;
Just today, I was working with some code that broke a test that asserts for a given controller action, exactly 118 queries are dispatched. This is a terrible test to have, but we have it because we have had real problems with query explosions emerging unexpectedly. I believe strict loading could help, but it would not have prevented all of the problems that led to write and maintain this test.;;;;;
;;;;;
This is indeed a heavy hammer to use. But I don't see an alternative that can achieve the same level of assurance, and the implementation was pretty easy thanks to the prior art of `while_preventing_writes`.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request adds `while_preventing_access` to the public API of ActiveRecord::Base much like was done for `while_preventing_writes` in https://github.com/rails/rails/pull/34505;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-19T21:46:17Z,2024-03-23T06:25:57Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2194293557,`PessimisticLockingTest#test_no_locks_no_wait` gets `ERROR:  cached plan must not change result type`,""Managed to reproduce CI error.";;;;;
https://buildkite.com/rails/rails/builds/105748#018e558b-b895-43cc-aa80-71180e80d01b/1235-1330;;;;;
;;;;;
### Steps to reproduce;;;;;
```ruby;;;;;
git clone https://github.com/rails/rails;;;;;
cd rails/activerecord;;;;;
bundle install;;;;;
bundle exec rake db:postgresql:rebuild;;;;;
"ARCONN=postgresql bin/test test/cases/associations/nested_through_associations_test.rb test/cases/connection_management_test.rb test/cases/migration_test.rb test/cases/locking_test.rb -n """"/^(?:NestedThroughAssociationsTest#(?:test_has_many_through_with_foreign_key_option_on_through_reflection)|ActiveRecord::ConnectionAdapters::ConnectionManagementTest#(?:test_cancel_asynchronous_queries_if_an_exception_is_raised)|MigrationTest#(?:test_instance_based_migration_up)|PessimisticLockingTest#(?:test_no_locks_no_wait))$/"""" --seed 38135";;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
It should pass.;;;;;
;;;;;
### Actual behavior;;;;;
`PessimisticLockingTest#test_no_locks_no_wait` gets `ERROR:  cached plan must not change result type`.;;;;;
;;;;;
```ruby;;;;;
"$ ARCONN=postgresql bin/test test/cases/associations/nested_through_associations_test.rb test/cases/connection_management_test.rb test/cases/migration_test.rb test/cases/locking_test.rb -n """"/^(?:NestedThroughAssociationsTest#(?:test_has_many_through_with_foreign_key_option_on_through_reflection)|ActiveRecord::ConnectionAdapters::ConnectionManagementTest#(?:test_cancel_asynchronous_queries_if_an_exception_is_raised)|MigrationTest#(?:test_instance_based_migration_up)|PessimisticLockingTest#(?:test_no_locks_no_wait))$/"""" --seed 38135";;;;;
Using postgresql;;;;;
"Run options: -n """"/^(?:NestedThroughAssociationsTest#(?:test_has_many_through_with_foreign_key_option_on_through_reflection)|ActiveRecord::ConnectionAdapters::ConnectionManagementTest#(?:test_cancel_asynchronous_queries_if_an_exception_is_raised)|MigrationTest#(?:test_instance_based_migration_up)|PessimisticLockingTest#(?:test_no_locks_no_wait))$/"""" --seed 38135";;;;;
;;;;;
# Running:;;;;;
;;;;;
...#<Thread:0x000078a1a0d27b38 /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:809 run> terminated with exception (report_on_exception is true):;;;;;
/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:915:in `rescue in exec_cache': ERROR:  cached plan must not change result type (ActiveRecord::PreparedStatementCacheExpired);;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:893:in `exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:865:in `execute_and_clear'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb:66:in `internal_exec_query'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:630:in `select'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:222:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:62:in `_query_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:51:in `find_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/statement_cache.rb:150:in `execute'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:434:in `cached_find_by'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:255:in `find'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:788:in `block in test_no_locks_no_wait'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:223:in `block in transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_handling.rb:270:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:222:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:812:in `block in duel'";;;;;
/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:903:in `exec_prepared': PG::FeatureNotSupported: ERROR:  cached plan must not change result type (ActiveRecord::StatementInvalid);;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:903:in `block (2 levels) in exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:1112:in `log'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:902:in `block in exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:997:in `block in with_raw_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:969:in `with_raw_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:898:in `exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:865:in `execute_and_clear'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb:66:in `internal_exec_query'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:630:in `select'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:222:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:62:in `_query_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:51:in `find_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/statement_cache.rb:150:in `execute'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:434:in `cached_find_by'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:255:in `find'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:788:in `block in test_no_locks_no_wait'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:223:in `block in transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_handling.rb:270:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:222:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:812:in `block in duel'";;;;;
/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:903:in `exec_prepared': ERROR:  cached plan must not change result type (PG::FeatureNotSupported);;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:903:in `block (2 levels) in exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:1112:in `log'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:902:in `block in exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:997:in `block in with_raw_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:969:in `with_raw_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:898:in `exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:865:in `execute_and_clear'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb:66:in `internal_exec_query'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:630:in `select'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:222:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:62:in `_query_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:51:in `find_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/statement_cache.rb:150:in `execute'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:434:in `cached_find_by'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:255:in `find'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:788:in `block in test_no_locks_no_wait'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:223:in `block in transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_handling.rb:270:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:222:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:812:in `block in duel'";;;;;
Found 1 leaked connections;;;;;
owner: #<Thread:0x000078a1a0d27ca0 /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:799 sleep>;;;;;
backtrace:;;;;;
"[""""/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:53:in `sleep'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:53:in `wait'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:53:in `ns_wait'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/abstract_lockable_object.rb:47:in `ns_wait_until'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/atomic/event.rb:87:in `block in wait'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:48:in `block in synchronize'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:48:in `synchronize'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:48:in `synchronize'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/atomic/event.rb:84:in `wait'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:804:in `block (2 levels) in duel'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction'"""", """"/home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:223:in `block in transaction'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_handling.rb:270:in `with_connection'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:222:in `transaction'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:801:in `block in duel'""""]";;;;;
;;;;;
E;;;;;
;;;;;
Error:;;;;;
PessimisticLockingTest#test_no_locks_no_wait:;;;;;
ActiveRecord::PreparedStatementCacheExpired: ERROR:  cached plan must not change result type;;;;;
;;;;;
    lib/active_record/connection_adapters/postgresql_adapter.rb:915:in `rescue in exec_cache';;;;;
    lib/active_record/connection_adapters/postgresql_adapter.rb:893:in `exec_cache';;;;;
    lib/active_record/connection_adapters/postgresql_adapter.rb:865:in `execute_and_clear';;;;;
    lib/active_record/connection_adapters/postgresql/database_statements.rb:66:in `internal_exec_query';;;;;
    lib/active_record/connection_adapters/abstract/database_statements.rb:630:in `select';;;;;
    lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all';;;;;
    lib/active_record/connection_adapters/abstract/query_cache.rb:222:in `select_all';;;;;
    lib/active_record/querying.rb:62:in `_query_by_sql';;;;;
    lib/active_record/querying.rb:51:in `find_by_sql';;;;;
    lib/active_record/statement_cache.rb:150:in `execute';;;;;
    lib/active_record/core.rb:434:in `cached_find_by';;;;;
    lib/active_record/core.rb:255:in `find';;;;;
    test/cases/locking_test.rb:788:in `block in test_no_locks_no_wait';;;;;
    lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction';;;;;
    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize';;;;;
    lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction';;;;;
    lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction';;;;;
    lib/active_record/transactions.rb:223:in `block in transaction';;;;;
    lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection';;;;;
    lib/active_record/connection_handling.rb:270:in `with_connection';;;;;
    lib/active_record/transactions.rb:222:in `transaction';;;;;
    test/cases/locking_test.rb:812:in `block in duel';;;;;
;;;;;
Error:;;;;;
PessimisticLockingTest#test_no_locks_no_wait:;;;;;
RuntimeError: Found 1 leaked connection after PessimisticLockingTest#test_no_locks_no_wait;;;;;
    test/cases/test_case.rb:82:in `check_connection_leaks';;;;;
    test/cases/test_case.rb:38:in `after_teardown';;;;;
;;;;;
;;;;;
bin/test test/cases/locking_test.rb:787;;;;;
;;;;;
;;;;;
;;;;;
Finished in 1.057243s, 3.7834 runs/s, 10.4044 assertions/s.;;;;;
4 runs, 11 assertions, 0 failures, 1 errors, 0 skips;;;;;
$;;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: main branch;;;;;
;;;;;
**Ruby version**: ruby 3.3.0 (2023-12-25 revision 5124f9ac75) [x86_64-linux];;;;;
",2024-03-19T08:06:22Z,2024-03-19T08:06:39Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 70310659, 'node_id': 'MDU6TGFiZWw3MDMxMDY1OQ==', 'url': 'https://api.github.com/repos/rails/rails/labels/PostgreSQL', 'name': 'PostgreSQL', 'color': 'fbca04', 'default': False, 'description': None}, {'id': 776781281, 'node_id': 'MDU6TGFiZWw3NzY3ODEyODE=', 'url': 'https://api.github.com/repos/rails/rails/labels/ci%20issues', 'name': 'ci issues', 'color': 'aaafff', 'default': False, 'description': None}]""";;;;;
"2192504341,""add `file_exist?` method for ActiveStorage::Blob, ActiveStorage::Variant, ActiveStorage::VariantWithRecord"",""";;;;;
;;;;;
It's help to check if all it's ok on the service storage;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
This Pull Request has been created because we (@captive-studio) handle a large number of files using ActiveStorage in our application where these files are central to the business.;;;;;
;;;;;
For some time now, we have noticed that certain variants are not being properly saved in the storage (specifically Google Cloud Storage). We want to rectify this situation by retrieving the variants for which the file does not exist in the storage.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes add new `file_exist?` method for ActiveStorage::Blob, ActiveStorage::Variant, ActiveStorage::VariantWithRecord;;;;;
;;;;;
This method will help to check if a file exist on the storage service;;;;;
;;;;;
### Additional information;;;;;
;;;;;
/;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-18T15:17:49Z,2024-03-18T15:17:53Z,[{'id': 664533972, 'node_id': 'MDU6TGFiZWw2NjQ1MzM5NzI=', 'url': 'https://api.github.com/repos/rails/rails/labels/activestorage', 'name': 'activestorage', 'color': 'bfd4f2', 'default': False, 'description': None}]""";;;;;
"2192417334,Enable query log tags by default on development env,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
This can be used to trace troublesome SQL statements back to the application code that generated these statements. I feel like this is a good default value that helps with debugging and code discovery.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-18T14:43:38Z,2024-03-25T02:05:54Z,[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}, {'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2190873649,.eager_load when selecting another column sets the ID incorrectly to a record being eager loaded.,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"  # gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :posts, force: true do |t|;;;;;
    t.integer :first_comment_id;;;;;
    t.integer :last_comment_id;;;;;
  end;;;;;
;;;;;
  create_table :comments, force: true do |t|;;;;;
    t.integer :post_id;;;;;
  end;;;;;
end;;;;;
;;;;;
class Post < ActiveRecord::Base;;;;;
  has_many :comments;;;;;
;;;;;
"  belongs_to :first_comment, class_name: """"Comment""""";;;;;
"  belongs_to :last_comment, class_name: """"Comment""""";;;;;
;;;;;
"  scope :select_another_column, -> { select(""""*"""").select(""""TIME('now') as now"""") }";;;;;
end;;;;;
;;;;;
class Comment < ActiveRecord::Base;;;;;
  belongs_to :post;;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_association_stuff;;;;;
    post = Post.create!;;;;;
    post.first_comment = Comment.create!;;;;;
    post.last_comment = Comment.create!;;;;;
;;;;;
    post.save!;;;;;
;;;;;
    post = Post.find(post.id);;;;;
    post_with_eager_loads = Post.eager_load(:first_comment, :last_comment).select_another_column.find(post.id);;;;;
;;;;;
    assert_equal post.id, post_with_eager_loads.id;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
Expect that IDs are consistent when using .eager_load;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
ID gets set to one of the other tables joined in;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: main;;;;;
;;;;;
**Ruby version**: 3.3.0;;;;;
",2024-03-17T21:28:07Z,2024-03-19T19:38:22Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2190758266,Allow one to set `strict_loading_mode` globally,""### Motivation / Background";;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
I was reading through [this summary of Rails' strict loading](https://jordanhollinger.com/2023/11/11/rails-strict-loading/) and came across this paragraph:;;;;;
;;;;;
> If you’re very brave, you can opt your entire application into strict loading. (Oddly, there doesn’t seem to be an equivalent of :n_plus_one_only here. I can’t imagine using this.);;;;;
;;;;;
In my app, we're setting `strict_loading!(mode: :n_plus_one_only)` on individual records; this paragraph made me realize it didn't have to be this way.;;;;
;;;;;
This Pull Request has been created because currently, `strict_loading_mode` is always set to `:all`. It may be preferable for users to have `:n_plus_one_only` on an individual model, or even on the entire app.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request adds a new class_attribute `:strict_loading_mode`, defaulted to `:all`.  If it's set to `:n_plus_one_only`, that mode is used by default when doing strict loading checks.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
n/a;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-17T16:45:34Z,2024-03-28T22:17:42Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2186612406,Autoloaded classes raise NameError when accessed in parent's on_load hook during load,""This is not a new issue with Rails autoloading, but a challenge I feel when working with Engines (either developing engines as a gem maintainer or consuming engines as an application developer)";;;;;
;;;;;
For example, an Engine may have a setup like this:;;;;;
;;;;;
```ruby;;;;;
module GoodJob;;;;;
  class ApplicationJob < ActiveJob::Base;;;;;
    # some configuration;;;;;
    ActiveSupport.run_load_hooks(:good_job_application_job, self);;;;;
  end;;;;;
;;;;;
  class UtilityOneJob < ApplicationJob; end;;;;
  class UtilityTwoJob < ApplicationJob; end;;;;
  class UtilityThreeJob < ApplicationJob; end;;;;
  # ... and many more;;;;;
end;;;;;
```;;;;;
;;;;;
I give an example of GoodJob, but this is a very analogous situation to other Engines with autoloaded classes/subclasses (models, controllers, etc.); for example Devise, which has a `DeviseController` (with load_hook) that is then subclassed with [a desire to extend](https://github.com/heartcombo/devise/wiki/How-To:-Create-custom-layouts#application--devise-config). ;;;;
;;;;;
I want to be able to allow application developers to extend the subclasses, and I want to defer autoloaded constants as much as possible (ideally not touching Action Controller or Active Model at all until during initialization), and this seems like it should be reasonable:;;;;;
;;;;;
```ruby;;;;;
# config/initializers/good_job.rb;;;;;
;;;;;
ActiveSupport.on_load(:good_job_application_job) do;;;;;
  # Customize a subclass;;;;;
"  GoodJob::UtilityJobOne.queue_name = """"something_custom""""";;;;;
end;;;;;
```;;;;;
;;;;;
This _usually_ works ok, except in the case when the `UtilityJobOne` _being loaded causes ApplicationJob to be loaded for the very first time_, in which case it raises a `uninitialized constant UtilityJobOne (NameError)`. This is because of the autoloading chain:;;;;;
;;;;;
`GoodJob::UtilityJobOne` first must load its parent class `GoodJob::ApplicationJob` for the first time, which triggers the load_hook which itself references `UtilityOneJob` which has not yet completed loading and thus a `NameError` 💥 ;;;;;
;;;;;
There is what I consider a workaround for this which is to use `inherited` (which is triggered _after the subclass constant is loaded), but I find it somewhat complex and wonder if there is a better way, or whether this is something that should be turned into a hook pattern:;;;;;
;;;;;
```ruby;;;;;
# config/initializers/good_job.rb;;;;;
;;;;;
module ConfigureUtilityJob;;;;;
  def inherited(subclass);;;;;
    super;;;;;
"    if subclass.to_s == """"UtilityJobOne""""";;;;;
"      subclass.queue_name = """"something_custom""""";;;;;
    end;;;;;
  end;;;;;
end;;;;;
;;;;;
ActiveSupport.on_load(:good_job_application_job) do;;;;;
  GoodJob::ApplicationJob.extend ConfigureUtilityJob;;;;;
end;;;;;
```;;;;;
;;;;;
"I realize that another solution as a engine maintainer is to add load hooks to every subclass, but that seems onerous, and as an application developer I'd have to convince other engine maintainers to do so (which is totally ok, so long as there isn't a better way I'm missing or a reasonable central interface for modifying autoloaded subclasses)."",2024-03-14T15:06:07Z,2024-03-14T15:07:44Z,[]";;;;;
"2183136951,`ActiveRecord::Migration::check_all_pending!` resets connection pool when in use in other threads,""This might not be a bug per se, but is unexpected behaviour that was exposed in our specific use case.";;;;;
;;;;;
### Steps to reproduce;;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
In production, we have a bunch of custom internal health-checks exposed via a controller endpoint that are pinged every 20s or so, one of which is a check for pending migrations. Up until recently we were using `ActiveRecord::Migration::check_pending!` which took an optional connection argument and would use it to access the migration context (presumably releasing the connection back into the pool immediately after) to check for pending migrations.;;;;;
;;;;;
This method [has been deprecated in favour of `check_all_pending!`](https://github.com/rails/rails/commit/03379d1f599653d100dff9fbf3ce4434a930b915) and [was recently removed on `main`](https://github.com/rails/rails/commit/02f66fe3e25cef2b0dec8bca26e777fe788af35c). To comply with this (since we run against Rails edge) we ended up replacing `check_pending!` with `check_all_pending!` (which doesn't take any arguments) in the respective health-check. After deploying this change we started seeing this error intermittently:;;;;;
;;;;;
```;;;;;
ActiveRecord::ConnectionNotEstablished:  No connection pool for 'ActiveRecord::Base' found.;;;;;
```;;;;;
;;;;;
After some debugging we found that it was due to `check_all_pending!` [using a temporary pool under the hood](https://github.com/rails/rails/blob/0dc84e2e7d942dcaac3bd75414ae55bfad9bb18a/activerecord/lib/active_record/tasks/database_tasks.rb#L542-L549), meaning it would establish a new connection for its checks, then establish another one once done, resetting the connection pool object each time. This meant that other threads (we're currently running `puma` with `3` threads) that attempted to retrieve the current (cached) pool during this time (to then retrieve a connection) would fail to find it and raise here:;;;;;
https://github.com/rails/rails/blob/0dc84e2e7d942dcaac3bd75414ae55bfad9bb18a/activerecord/lib/active_record/connection_adapters/abstract/connection_handler.rb#L224;;;;;
;;;;;
We've considered that maybe this specific health-check setup is a bit unconventional, but given that I can find [some public repos utilising this method the same way](https://github.com/search?q=ActiveRecord%3A%3AMigration.check_all_pending%21+language%3ARuby&type=code&l=Ruby), I thought I'd open this up for discussion to see if there's any chance of changing / extending the implementation or even just warning against its use outside of something like a rake task so others don't run into a similar issue.;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# Ensure `ActiveRecord::Base.configurations.configs_for` returns a config for which a temporary pool is yielded.;;;;;
"ActiveRecord::Base.configurations = { development: { adapter: """"sqlite3"""", database: """":memory:"""" } }";;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_connection_pool_does_not_reset;;;;;
    pool_before = ActiveRecord::Base.connection_pool;;;;;
;;;;;
    ActiveRecord::Migration.check_all_pending!;;;;;
;;;;;
    assert_equal pool_before.object_id, ActiveRecord::Base.connection_pool.object_id;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
<!-- Tell us what should happen -->;;;;;
;;;;;
Connection pool is not reset when checking for pending migrations with `check_all_pending!`.;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
;;;;;
Connection pool is reset when checking for pending migrations with `check_all_pending!`.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: Edge;;;;;
;;;;;
"**Ruby version**: 3.2.2"",2024-03-13T05:17:22Z,2024-03-14T06:03:23Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2182989812,Fix a crash when an  Executor wrapped fork exit.,""Fix #51298";;;;;
;;;;;
forking inside an Execution Wrapper crashes when running the completion callbacks.;;;;;
;;;;;
Rails 7.0 was not Execution wrapping the `runner` command. ;;;;;
Rails 7.2 changed the definition of `active_connection?`, the new definition doesn't contain the bug. ;;;;;
;;;;;
Therefore forking inside a script intended to be run with the `runner` command on 7.1 crashes. (see #51298);;;;;
;;;;;
This PR is targeting `7-1-stable`;;;;;
;;;;;
Edit: The regression test (with the fork) blew up the tests. I removed it, I'll revisit. ;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-13T02:22:58Z,2024-03-23T21:16:44Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2182679064,[ci skip] Undocumented - validations enabled by autosave,""### Motivation / Background";;;;;
;;;;;
Fixes #50807;;;;;
;;;;;
As described in Issue #50807,  validations are enabled by default when the autosave option is set to true. Currently, that behavior is not documented for the `has_one` or `belongs_to` associations.   ;;;;;
;;;;;
### Detail;;;;;
;;;;;
To resolve this issue, the  API documentation has been updated to document the validation behavior when the `autosave: true` option is set in `Activerecord::Associations` for the `has_one` or `belongs_to` associations.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-12T21:09:19Z,2024-03-23T17:25:32Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2182219571,Do not use the alpha version if the major version is released,""This PR changes the active storage dependency version for action text. ";;;;;
",2024-03-12T17:04:15Z,2024-03-12T17:04:19Z,[{'id': 1180817762, 'node_id': 'MDU6TGFiZWwxMTgwODE3NzYy', 'url': 'https://api.github.com/repos/rails/rails/labels/actiontext', 'name': 'actiontext', 'color': '3bc667', 'default': False, 'description': ''}]""";;;;;
"2181685435,Model.insert_all can accept an array of records with separate column names,""### Motivation / Background";;;;;
;;;;;
Expanding the `Model.insert_all` functionality to receive an array containing records and column names separately. This improvement eliminates the need for records to be in the hash format, providing a more streamlined approach, especially useful for handling large datasets when both the order of attributes and their alignment with the table structure are known in advance.;;;;;
;;;;;
```ruby;;;;;
column_names = [:name, :author_id];;;;;
book_batches.each do |book_batch|;;;;;
"	Book.insert_all(book_batch, column_names: column_names)";;;;;
end;;;;;
```;;;;;
;;;;;
This update enables users to provide an array of arrays for the records, while also specifying the column names separately. This enhancement enhances code flexibility and readability, simplifying data insertion without requiring pre-formatting into hashes.;;;;;
;;;;;
### Detail;;;;;
;;;;;
#NOM?;;;;;
#NOM?;;;;;
;;;;;
```ruby;;;;;
Book.insert_all([;;;;;
"  [""""Rework"""", 1],";;;;;
"  [""""Patterns of Enterprise Application Architecture"""", 1]";;;;;
], column_names: [:name, :author_id]);;;;;
```;;;;;
;;;;;
"To showcase the API proposal, I opted for the simplest approach, which involved converting the array of records and column names into a Hash, as it aligns with the existing code."",2024-03-12T13:54:28Z,2024-03-12T13:54:34Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2181555060,Add and document ActionText without_layout reader and writer attributes,""If a site follows an `ActionText` editing form with a preview form prior to record creation, the natural way to set the editor content in the preview form is something like:";;;;;
;;;;;
`<%= hidden_field :message, :content %>`;;;;;
;;;;;
"This however does a `to_s`, which includes the content with the """"trix-content"""" div layout wrapping. This wrapping gets saved, and the final rendering with layout has a double wrapping.";;;;;
;;;;;
A solution is to instead use;;;;;
;;;;;
`<%= hidden_field_tag 'message[content]', @message.content.to_trix_html %>`;;;;;
;;;;;
but a cleaner solution would be to provide a non-wrapped accessor like;;;;;
;;;;;
`<%= hidden_field :message, :content_without_layout %>`;;;;;
;;;;;
"This PR does this. It also fixes the incorrect documentation of `has_rich_text` that [shows `to_s` as producing HTML without layout](https://github.com/rails/rails/blob/main/actiontext/lib/action_text/attribute.rb#L20), documents the `without_layout` variant, and adds a sentence suggesting when each should be used."",2024-03-12T12:55:18Z,2024-03-12T12:55:24Z,""[{'id': 1180817762, 'node_id': 'MDU6TGFiZWwxMTgwODE3NzYy', 'url': 'https://api.github.com/repos/rails/rails/labels/actiontext', 'name': 'actiontext', 'color': '3bc667', 'default': False, 'description': ''}]""";;;;;
"2180953140,Fix exception raised from template should not show compiled code,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Fixes #51090 ;;;;;
;;;;;
This Pull Request has been created to fix exceptions raised from template shows the compiled code.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes `activesupport/lib/active_support/core_ext/erb/util.rb`;;;;;
;;;;;
### Additional information;;;;;
1. In this tokenize method we are not handling the text present after `%>` ;;;;;
2. Updated that method to handle text present at end.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-12T07:52:25Z,2024-03-21T17:49:16Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}]""";;;;;
"2180514773,Add composite key support to `Model.exists?`,""Fix #51295";;;;;
;;;;;
`.exists?` does not support composite primary key because it would [clash with the current expectation when passing an array.](https://github.com/rails/rails/blob/main/activerecord/lib/active_record/relation/finder_methods.rb#L351);;;;;
;;;;;
This PR would make it possible to pass a composite primary key by wrapping it in an array:;;;;;
;;;;;
```ruby;;;;;
CpkModel.exists?([[1,1]]) # as in `CpkModel.exists?([composite_primary_key])`;;;;;
```;;;;;
;;;;;
Incidentally, it would also allow searching with multiple keys without having to use the hash form:;;;;;
;;;;;
```ruby;;;;;
CpkModel.exists?([[1,1], [1,2], [3,1]])  ;;;;;
"RegularModel.exists?([[1,2,3]]) # Even works for non regular models! Generates: `SELECT 1 AS one FROM """"regular_models"""" WHERE """"users"""".""""id"""" IN (1, 2, 3)`";;;;;
``` ;;;;;
;;;;;
;;;;;
## Considerations;;;;;
;;;;;
This is a bit of hack and initially thought of answering #51295 by suggesting using the hash form instead, but after looking at what the hash form would look like for a primary key:;;;;;
;;;;;
```ruby;;;;;
CpkModel.exists?(CpkModel.primary_key => [[1,1]]) # You need to wrap the primary key in an array!;;;;;
```;;;;;
This is quite verbose. So perhaps there is value in this.;;;;;
I did not edit the documentation and changelog yet. Only the code, plus a couple tests. If this diff is deemed valuable I'll add the required edits.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-12T00:57:29Z,2024-03-12T01:06:49Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2179543988,Forked child processes created through rails runner throw error from ActiveRecord when exiting,""In Rails 7.1.3.2, child processes which were created using a fork call throw the following error when they are exiting:";;;;;
;;;;;
```;;;;;
.../activerecord-7.1.3.2/lib/active_record/connection_adapters/abstract/connection_pool.rb:197:in `active_connection?': undefined method `[]' for nil (NoMethodError);;;;;
;;;;;
        @thread_cached_conns[connection_cache_key(current_thread)];;;;;
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;;;;;
```;;;;;
;;;;;
These child processes are created using a fork call which does not take a block. Notably, if a block is passed to the fork call then the error does not occur.;;;;;
;;;;;
### Steps to reproduce;;;;;
```;;;;;
> ruby -v;;;;;
ruby 3.3.0 (2023-12-25 revision 5124f9ac75) [x86_64-linux];;;;;
;;;;;
> rails new fork_child_process -G -M -C -A -J -T ;;;;;
rails (7.1.3.2);;;;;
;;;;;
"> echo """"fork"""" > script.rb"; bundle exec rails runner script.rb;;;;
/home/gpallotta/.gem/gems/activerecord-7.1.3.2/lib/active_record/connection_adapters/abstract/connection_pool.rb:197:in `active_connection?': undefined method `[]' for nil (NoMethodError);;;;;
;;;;;
        @thread_cached_conns[connection_cache_key(current_thread)];;;;;
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;;;;;
        from /home/gpallotta/.gem/gems/activerecord-7.1.3.2/lib/active_record/connection_adapters/abstract/query_cache.rb:45:in `disable_query_cache!';;;;;
"	from /home/gpallotta/.gem/gems/activerecord-7.1.3.2/lib/active_record/query_cache.rb:33:in `block in complete'";;;;;
"	from /home/gpallotta/.gem/gems/activerecord-7.1.3.2/lib/active_record/query_cache.rb:33:in `each'";;;;;
"	from /home/gpallotta/.gem/gems/activerecord-7.1.3.2/lib/active_record/query_cache.rb:33:in `complete'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/execution_wrapper.rb:37:in `before'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:426:in `block in make_lambda'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:202:in `block (2 levels) in halting'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:707:in `block (2 levels) in default_terminator'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:706:in `catch'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:706:in `block in default_terminator'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:203:in `block in halting'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:598:in `block in invoke_before'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:598:in `each'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:598:in `invoke_before'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:109:in `run_callbacks'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/execution_wrapper.rb:143:in `complete'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/execution_wrapper.rb:137:in `complete!'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/execution_wrapper.rb:97:in `wrap'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/commands/runner/runner_command.rb:40:in `perform'";;;;;
"	from /home/gpallotta/.gem/gems/thor-1.3.1/lib/thor/command.rb:28:in `run'";;;;;
"	from /home/gpallotta/.gem/gems/thor-1.3.1/lib/thor/invocation.rb:127:in `invoke_command'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/command/base.rb:178:in `invoke_command'";;;;;
"	from /home/gpallotta/.gem/gems/thor-1.3.1/lib/thor.rb:527:in `dispatch'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/command/base.rb:73:in `perform'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/command.rb:71:in `block in invoke'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/command.rb:149:in `with_argv'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/command.rb:69:in `invoke'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/commands.rb:18:in `<main>'";;;;;
"	from /opt/ruby-3.3.0-1/lib/ruby/3.3.0/bundled_gems.rb:74:in `require'";;;;;
"	from /opt/ruby-3.3.0-1/lib/ruby/3.3.0/bundled_gems.rb:74:in `block (2 levels) in replace_require'";;;;;
"	from /home/gpallotta/.gem/gems/bootsnap-1.18.3/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:30:in `require'";;;;;
"	from bin/rails:4:in `<main>'";;;;;
;;;;;
>;;;;;
```;;;;;
;;;;;
If instead a block is given to the fork call, then no error occurs;;;;;
;;;;;
```;;;;;
"> echo """"fork {}"""" > script.rb"; bundle exec rails runner script.rb;;;;
;;;;;
>;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
The forked child process exits cleanly.;;;;;
;;;;;
### Actual behavior;;;;;
The forked child process exits with an error.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
"**Ruby version**: 3.3.0"",2024-03-11T16:17:12Z,2024-03-13T02:26:53Z,[]";;;;;
"2179242804,Missing Active Record encryption credential when using ActiveRecord::Encryption.without_encryption ,""### Steps to reproduce";;;;;
;;;;;
```ruby;;;;;
class SchluesselBrett < ApplicationRecord;;;;;
   encrypts :key ;;;;;
   def destroy;;;;;
     ActiveRecord::Encryption.without_encryption { super };;;;;
   end;;;;;
end;;;;;
;;;;;
Schluesselbrett.last.destroy;;;;;
```;;;;;
### Expected behavior;;;;;
Destroy should work as there are no hooks that depend on the encrypted column.;;;;;
;;;;;
We are using a custom key_provider that needs the user input of a Smartcard PIN every time an encrypted column is encrypted or decrypted.;;;;;
Destruction of a model should work without decrypting it first so that the PIN is not necessary (we accept the fact that we have to ensure ourselves that no hooks will require the encrypted field to be decrypted).;;;;;
In fact, the NullEncryptor that is used in without_encryption:;;;;;
;;;;;
```ruby;;;;;
        def without_encryption(&block);;;;;
          with_encryption_context encryptor: ActiveRecord::Encryption::NullEncryptor.new, &block;;;;;
        end;;;;;
```;;;;;
;;;;;
does not make use of the default key provider (whose initialization is the cause of the backtrace below) anyway.;;;;;
;;;;;
### Actual behavior;;;;;
```;;;;;
activerecord (7.1.3.2) lib/active_record/encryption/config.rb:43:in `block (2 levels) in <class:Config>';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/context.rb:38:in `build_default_key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/context.rb:25:in `key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/configurable.rb:17:in `key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/scheme.rb:92:in `default_key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/scheme.rb:53:in `key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:15:in `key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:147:in `decryption_options';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:90:in `block in decrypt';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/scheme.rb:69:in `with_context';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:15:in `with_context';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:85:in `decrypt';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:36:in `deserialize';;;;;
activemodel (7.1.3.2) lib/active_model/attribute.rb:175:in `type_cast';;;;;
activemodel (7.1.3.2) lib/active_model/attribute.rb:43:in `value';;;;;
activemodel (7.1.3.2) lib/active_model/attribute_set/builder.rb:43:in `fetch_value';;;;;
activerecord (7.1.3.2) lib/active_record/transactions.rb:421:in `block in restore_transaction_record_state';;;;;
activemodel (7.1.3.2) lib/active_model/attribute_set.rb:98:in `transform_values';;;;;
activemodel (7.1.3.2) lib/active_model/attribute_set.rb:98:in `map';;;;;
activerecord (7.1.3.2) lib/active_record/transactions.rb:420:in `restore_transaction_record_state';;;;;
activerecord (7.1.3.2) lib/active_record/transactions.rb:345:in `rolledback!';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:200:in `block in rollback_records';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:263:in `run_action_on_records';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:199:in `rollback_records';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:527:in `block in rollback_transaction';;;;;
activesupport (7.1.3.2) lib/active_support/concurrency/null_lock.rb:9:in `synchronize';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:520:in `rollback_transaction';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:539:in `rescue in block in within_new_transaction';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:538:in `block in within_new_transaction';;;;;
activesupport (7.1.3.2) lib/active_support/concurrency/null_lock.rb:9:in `synchronize';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:532:in `within_new_transaction';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction';;;;;
activerecord (7.1.3.2) lib/active_record/transactions.rb:361:in `with_transaction_returning_status';;;;;
activerecord (7.1.3.2) lib/active_record/transactions.rb:305:in `destroy';;;;;
```;;;;;
;;;;;
### Proposed solution;;;;;
;;;;;
local workaround is something along the lines of:;;;;;
;;;;;
```ruby;;;;;
module ActiveRecord;;;;;
  module Encryption;;;;;
    module Contexts;;;;;
...;;;;;
      class_methods do;;;;;
....  ;;;;;
        def without_encryption(&block);;;;;
          encryptor = ActiveRecord::Encryption::NullEncryptor.new;;;;;
          key_provider = ActiveRecord::Encryption::NullKeyProvider.new;;;;;
          ActiveRecord::Encryption.with_encryption_context(encryptor:, key_provider:, &block);;;;;
        end;;;;;
;;;;;
...;;;;;
;;;;;
    class NullKeyProvider;;;;;
    end;;;;;
```;;;;;
;;;;;
I'm happy to try to provide a pull request if there is hope that it will be accepted.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**:  3.2.2;;;;;
",2024-03-11T14:14:06Z,2024-04-04T11:55:19Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 126910270, 'node_id': 'MDU6TGFiZWwxMjY5MTAyNzA=', 'url': 'https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps', 'name': 'With reproduction steps', 'color': '009800', 'default': False, 'description': None}, {'id': 5511275119, 'node_id': 'LA_kwDNIULPAAAAAUh_Ym8', 'url': 'https://api.github.com/repos/rails/rails/labels/encryption', 'name': 'encryption', 'color': '8D3EA8', 'default': False, 'description': ''}]""";;;;;
"2179081656,Can't use Model.exists? with composite primary keys,""### Steps to reproduce";;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
require 'bundler/inline';;;;;
;;;;;
gemfile(true) do;;;;;
  source 'https://rubygems.org';;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
  gem 'rails';;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"  # gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
  gem 'sqlite3';;;;;
end;;;;;
;;;;;
require 'active_record';;;;;
require 'minitest/autorun';;;;;
require 'logger';;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
ActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:');;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :posts, force: true, primary_key: %i[user_id account_id] do |t|;;;;;
    t.integer 'user_id', null: false;;;;;
    t.integer 'account_id', null: false;;;;;
  end;;;;;
end;;;;;
;;;;;
class Post < ActiveRecord::Base;;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_association_stuff;;;;;
    Post.create!(user_id: 1, account_id: 1);;;;;
;;;;;
    assert_equal [1, 1], Post.find([1, 1]).id;;;;;
    assert_equal true, Post.exists?([1, 1]);;;;;
  end;;;;;
end;;;;;
;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
```exists?``` should return a boolean if a given row exist for this primary key, like it does for not composite keys.;;;;;
;;;;;
### Actual behavior;;;;;
```;;;;;
NoMethodError: undefined method `include?' for 1:Integer;;;;;
;;;;;
"        elsif statement.include?(""""?"""")";;;;;
                       ^^^^^^^^^;;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/sanitization.rb:167:in `sanitize_sql_array';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/sanitization.rb:37:in `sanitize_sql_for_conditions';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/relation/query_methods.rb:1513:in `build_where_clause';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/relation/query_methods.rb:943:in `where!';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/relation/finder_methods.rb:437:in `construct_relation_for_exists';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/relation/finder_methods.rb:366:in `exists?';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/querying.rb:23:in `exists?';;;;;
    bug_report.rb:40:in `test_association_stuff';;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**:  7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.1;;;;;
",2024-03-11T13:01:58Z,2024-03-20T01:49:50Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}]""";;;;;
"2177925782,Empty embeds when RichText is set to an empty content,""Fix #51269";;;;;
;;;;;
Action Text supports saving a RichText model with empty content. Passing _almost_ empty content (such as a space) flushes the embeds, but passing truly empty content does not. This defies expectations.;;;;;
;;;;;
This change ensures that the embeds are flushed when empty content is passed;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-10T22:05:51Z,2024-03-12T04:41:07Z,[{'id': 1180817762, 'node_id': 'MDU6TGFiZWwxMTgwODE3NzYy', 'url': 'https://api.github.com/repos/rails/rails/labels/actiontext', 'name': 'actiontext', 'color': '3bc667', 'default': False, 'description': ''}]""";;;;;
"2177865633,Using preload with composite keys can cause too many records to be read,""### Steps to reproduce";;;;;
;;;;;
Using `preload` with composite keys can cause more records to be read than are required - consider this test case:;;;;;
;;;;;
```ruby;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  gem """"activerecord"""", """"7.1.3.2""""";;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :nodes, primary_key: [:node_id, :node_version] do |t|;;;;;
    t.integer :node_id;;;;;
    t.integer :node_version;;;;;
  end;;;;;
;;;;;
  create_table :node_tags, primary_key: [:node_id, :node_version, :k], force: true do |t|;;;;;
    t.integer :node_id;;;;;
    t.integer :node_version;;;;;
    t.text :k;;;;;
  end;;;;;
end;;;;;
;;;;;
class Node < ActiveRecord::Base;;;;;
"  has_many :tags, class_name: """"NodeTag"""", query_constraints: [:node_id, :node_version], :inverse_of => :node";;;;;
end;;;;;
;;;;;
class NodeTag < ActiveRecord::Base;;;;;
  belongs_to :node, query_constraints: [:node_id, :node_version], :inverse_of => :tags;;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_preload;;;;;
    node = Node.create(id: [1, 1]);;;;;
"    node.tags.create(k: """"a"""")";;;;;
"    node.tags.create(k: """"b"""")";;;;;
    node = Node.create(id: [1, 2]);;;;;
"    node.tags.create(k: """"c"""")";;;;;
"    node.tags.create(k: """"d"""")";;;;;
    node = Node.create(id: [2, 1]);;;;;
"    node.tags.create(k: """"e"""")";;;;;
"    node.tags.create(k: """"f"""")";;;;;
;;;;;
    nodes = Node.preload(:tags);;;;;
              .where(node_id: 1, node_version: 2);;;;;
              .or(Node.where(node_id: 2, node_version: 1));;;;;
              .order(:node_id, :node_version);;;;;
;;;;;
    assert_equal 2, nodes.size;;;;;
;;;;;
    nodes.each do |node|;;;;;
      assert_equal 2, node.tags.size;;;;;
    end;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
The assertions pass, but if you look at the logged SQL for the preload you see this:;;;;;
;;;;;
```sql;;;;;
"SELECT """"node_tags"""".*";;;;;
"FROM """"node_tags""""";;;;;
"WHERE """"node_tags"""".""""node_id"""" IN (?, ?) AND """"node_tags"""".""""node_version"""" IN (?, ?)";;;;;
```;;;;;
;;;;;
where the bound ID values are 1 and 2 as are the bound version values.;;;;;
;;;;;
So not only will that read the tags for `[1, 2]` and `[2, 1]` as expected but it will also read the tags for `[1, 1]` which are not needed.;;;;;
;;;;;
Those records don't appear to get attached to any node so are presumably being discarded when the preload is matched to the original records.;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
The required records are preloaded.;;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
Extra records are preloaded.;;;;;
;;;;;
### System configuration;;;;;
;;;;;
**Rails version**: 7.1.3.2;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-10T19:14:55Z,2024-03-11T18:14:29Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2177504195,Expire caching when a download fail while proxying in ActiveStorage,""Fix #51284";;;;;
;;;;;
Both Proxy controllers in Active Storage set the caching headers early before streaming. ;;;;;
;;;;;
In some instances (see #51284), it is possible for the file download (from the service to server) to fail before we send the first byte to the client (response not yet committed). ;;;;;
;;;;;
In those instances, this change would invalidate the cache and return a better response status before closing the stream.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-10T03:28:10Z,2024-03-10T06:55:14Z,[{'id': 664533972, 'node_id': 'MDU6TGFiZWw2NjQ1MzM5NzI=', 'url': 'https://api.github.com/repos/rails/rails/labels/activestorage', 'name': 'activestorage', 'color': 'bfd4f2', 'default': False, 'description': None}]""";;;;;
"2175998435,Ensure image_processing is installed with Trix,""Currently if the Gemfile does not contain a commented out line for image_processing, or the line uses single, not double quotes, image_processing will not be installed and Trix will not be able to correctly handle image attachments.";;;;;
;;;;;
This ensures image_processing _is_ installed in those circumstances.;;;;;
;;;;;
<!--;;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
This Pull Request has been created because it is possible for the `bin/rails action_text:install` command to fail to add `image_processing` to the Gemfile if the default comment has been removed, or if the double quotes have been changed to single ones (perhaps by a Rubocop auto-fix).;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes the ActionText install script to more thoroughly ensure `image_processing` is installed.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-08T12:59:20Z,2024-03-08T13:29:29Z,[{'id': 1180817762, 'node_id': 'MDU6TGFiZWwxMTgwODE3NzYy', 'url': 'https://api.github.com/repos/rails/rails/labels/actiontext', 'name': 'actiontext', 'color': '3bc667', 'default': False, 'description': ''}]""";;;;;
"2175983514,ActiveStorage ProxyController sets Cache-Control headers on errors like FileNotFoundError,""### Steps to reproduce";;;;;
Ive observed occasional broken **representation** images on our site. After digging a little into this issue it became clear that the proxy cache in front of our application has cached a broken image. A cache purge always fixed it. ;;;;;
;;;;;
After digging a little deeper i think i found the source. The proxy cache is getting a `cache-control` header instructing it to do so by the ActiveStorage::Representations::ProxyController!;;;;;
;;;;;
Ive created a synthetic test which reproduces it. The response is successful with zero length and cache-control header set. The following test falsely passed!;;;;;
;;;;;
```ruby;;;;;
    ActiveStorage::Service::DiskService.any_instance.expects(:download).raises(ActiveStorage::FileNotFoundError);;;;;
    ;;;;;
"    get active_storage_image_url # """"/rails/active_storage/representations/proxy/...""""";;;;;
;;;;;
    assert_response :ok;;;;;
    assert_equal 'image/png', response.content_type;;;;;
"    assert_equal """"0"""", response.headers['Content-Length']";;;;;
    assert response.headers.key? 'ETag';;;;;
"    assert_equal """"max-age=3155695200, public"""", response.headers['Cache-Control']";;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
On an error like `ActiveStorage::FileNotFoundError` the response should not be successful nor should it instruct caches to cache that empty response.;;;;;
;;;;;
### Actual behavior;;;;;
On an error like `ActiveStorage::FileNotFoundError` the response is still successful (Statuscode: 200) and a cache-control header is instructing caches to cache this empty response.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.0.8;;;;;
;;;;;
**Ruby version**: 3.1.2;;;;;
",2024-03-08T12:51:45Z,2024-03-12T02:56:56Z,[{'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}, {'id': 664533972, 'node_id': 'MDU6TGFiZWw2NjQ1MzM5NzI=', 'url': 'https://api.github.com/repos/rails/rails/labels/activestorage', 'name': 'activestorage', 'color': 'bfd4f2', 'default': False, 'description': None}]""";;;;;
"2175446335,Move callsite for to lease_connection in AR::Sanitization up to `sanitize_sql_array`,""After looking at ways to refactor calls to `lease_connection`, this tiny PR came up for `sanitize_sql_array`";;;;;
"cc @byroot "",2024-03-08T07:24:29Z,2024-03-16T08:42:20Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2175354422,Transform attributes during `ActiveModel::Serialization::JSON#from_json`,""### Motivation / Background";;;;;
;;;;;
The problem;;;;;
---;;;;;
;;;;;
Loading JSON into an Active Model instance with;;;;;
`ActiveModel::Serializers:JSON#from_json` assumes that the property casings will match the class attribute casings. This works well with snake_casing, since idiomatic Ruby methods are snake_cased.;;;;;
;;;;;
When `#from_json` loads JSON properties that are camelCased, it silently ignores them:;;;;;
;;;;;
```ruby;;;;;
class Person;;;;;
  include ActiveModel::Serializers::JSON;;;;;
;;;;;
  attr_accessor :name, :born_on;;;;;
;;;;;
  def attributes=(hash);;;;;
"    hash.each { |key, value| send(""""#{key}="""", value) }";;;;;
  end;;;;;
end;;;;;
;;;;;
payload <<~JSON;;;;;
"  { """"name"""": """"Alice"""", """"bornOn"""": """"2024-03-08"""" }";;;;;
JSON;;;;;
;;;;;
person = Person.new.from_json(payload);;;;;
"person.name     # => """"Alice""""";;;;;
person.born_on  # => nil;;;;;
```;;;;;
;;;;;
### Detail;;;;;
;;;;;
The proposal;;;;;
---;;;;;
;;;;;
This commit proposes extending `#from_json` to accept a block. After the JSON string is decoded (and un-nested from its root, depending on the model's configuration), yield the `Hash` to a block if one is passed as an argument:;;;;;
;;;;;
```ruby;;;;;
payload <<~JSON;;;;;
"  { """"name"""": """"Alice"""", """"bornOn"""": """"2024-03-08"""" }";;;;;
JSON;;;;;
;;;;;
person = Person.new.from_json(payload) { _1.deep_transform_keys!(&:underscore) };;;;;
"person.name     # => """"Alice""""";;;;;
"person.born_on  # => """"2024-03-08""""";;;;;
```;;;;;
;;;;;
Supporting a block can be useful for context-specific overrides. If a class needs to provide a default transformation, it can override `#from_json`:;;;;;
;;;;;
```ruby;;;;;
class PersonFromCamelCaseAPI < Person;;;;;
  def from_json(*, &block);;;;;
    default_transform = proc { _1.deep_transform_keys!(&:underscore) };;;;;
;;;;;
    super(*, &(block || defaul_transform));;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
Without built-in support for transforming camelCased properties into snake_cased attributes, callers are responsible decoding the JSON themselves. In addition to the key transformations, they're also responsible for re-creating both the JSON decoding *and* the configurable root un-nesting provided by `#from_json`:;;;;;
;;;;;
```ruby;;;;;
payload <<~JSON;;;;;
"  { """"name"""": """"Alice"""", """"bornOn"""": """"2024-03-08"""" }";;;;;
JSON;;;;;
;;;;;
attributes = ActiveSupport::JSON.decode(payload);;;;;
attributes.deep_transform_keys!(&:underscore);;;;;
person = Person.new(attributes);;;;;
"person.name     # => """"Alice""""";;;;;
"person.born_on  # => """"2024-03-08""""";;;;;
;;;;;
nested_payload <<~JSON;;;;;
"  { """"person"""": { """"name"""": """"Alice"""", """"bornOn"""": """"2024-03-08"""" } }";;;;;
JSON;;;;;
;;;;;
attributes = ActiveSupport::JSON.decode(nested_payload);;;;;
attributes.deep_transform_keys!(&:underscore);;;;;
"person = Person.new(attributes[""""person""""])";;;;;
"person.name     # => """"Alice""""";;;;;
"person.born_on  # => """"2024-03-08""""";;;;;
```;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-08T06:18:38Z,2024-03-08T06:20:19Z,[{'id': 107190, 'node_id': 'MDU6TGFiZWwxMDcxOTA=', 'url': 'https://api.github.com/repos/rails/rails/labels/activemodel', 'name': 'activemodel', 'color': '00E5FF', 'default': False, 'description': None}]""";;;;;
"2174963549,Unnecessary auto save is triggered for polymorphic has_one defined in child class using single-table inheritance,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
This bug is directly related to https://github.com/rails/rails/issues/44986.;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :pictures, force: true do |t|;;;;;
    t.references :imageable, polymorphic: true;;;;;
  end;;;;;
;;;;;
  create_table :employees, force: true do |t|;;;;;
    t.string :type;;;;;
    t.string :name;;;;;
  end;;;;;
end;;;;;
;;;;;
class Picture < ActiveRecord::Base;;;;;
;;;;;
  belongs_to :imageable, polymorphic: true, optional: true;;;;;
;;;;;
  after_save :count_saves;;;;;
;;;;;
  def count_saves;;;;;
    @count ||= 0;;;;;
    @count += 1;;;;;
  end;;;;;
;;;;;
end;;;;;
;;;;;
class Employee < ActiveRecord::Base;;;;;
;;;;;
end;;;;;
;;;;;
class CaliforniaEmployee < Employee;;;;;
;;;;;
  has_one :picture, as: :imageable;;;;;
;;;;;
end;;;;;
;;;;;
class ArizonaEmployee < Employee;;;;;
;;;;;
  has_one :picture, as: :imageable;;;;;
;;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
;;;;;
  def test_association_not_saved_on_update;;;;;
    picture = Picture.create!;;;;;
;;;;;
"    cali_employee = CaliforniaEmployee.create!(name: """"Cali"""", picture: picture)";;;;;
;;;;;
"    cali_employee.update!(name: """"Cali Fornia"""")";;;;;
;;;;;
"    assert_equal """"Employee"""", picture.imageable_type";;;;;
    assert_equal cali_employee.id, picture.imageable_id;;;;;
;;;;;
    # Saves on create of picture and create of employee;;;;;
    assert_equal 2, picture.instance_variable_get(:@count);;;;;
  end;;;;;
;;;;;
  def test_association_saved_on_actual_model_change;;;;;
    picture = Picture.create!;;;;;
;;;;;
"    CaliforniaEmployee.create!(name: """"Cali"""", picture: picture)";;;;;
"    az_employee = ArizonaEmployee.create!(name: """"Arizona"""")";;;;;
;;;;;
    az_employee.update!(picture: picture);;;;;
;;;;;
"    assert_equal """"Employee"""", picture.imageable_type";;;;;
    assert_equal az_employee.id, picture.imageable_id;;;;;
;;;;;
    # Saves on create of picture, create of cali employee, and update to az employee;;;;;
    assert_equal 3, picture.instance_variable_get(:@count);;;;;
  end;;;;;
;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
<!-- Tell us what should happen -->;;;;;
;;;;;
There is no reason to trigger a save on the Picture record when updating a field on CaliforniaEmployee, since the picture record is already correctly pointing at the existing Employee.;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
;;;;;
`inverse_polymorphic_association_changed?` is returning true for this use case causing a subsequent autosave to be triggered on Picture, leading to a failure in both test cases:;;;;;
;;;;;
```;;;;;
Failure:;;;;;
BugTest#test_association_not_saved_on_update [rails-issue.rb:73]:;;;;;
Expected: 2;;;;;
  Actual: 3;;;;;
;;;;;
Failure:;;;;;
BugTest#test_association_saved_on_actual_model_change [rails-issue.rb:85]:;;;;;
Expected: 3;;;;;
  Actual: 4;;;;;
```;;;;;
;;;;;
### Additional Context;;;;;
;;;;;
This appears to specifically fail when the has_one is defined on a child class using Single-table Inheritance. If the `has_one` in the test case above is moved up to the `Employee` model, then the expectation will pass.;;;;;
;;;;;
The issue appears to be here: https://github.com/rails/rails/blob/83702d64c80637cc0debc3917c3419d327f8ee1b/activerecord/lib/active_record/autosave_association.rb#L495-L497.;;;;;
;;;;;
That currently reads the class for the record from the `foreign_type` and then attempts to convert it to the right class for polymorphic relationships, but I believe this is unnecessary, since it already would have been converted to the correct type when set.;;;;;
;;;;;
Instead `reflection.active_record` should actually be updated to use the `polymorphic_name` otherwise we risk looking at the wrong model name that would be ultimately saved.;;;;;
;;;;;
Updating line 497 to this gets these test cases passing for me:;;;;;
;;;;;
```;;;;;
reflection.active_record.polymorphic_name != class_name;;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2, main;;;;;
;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-07T22:52:04Z,2024-03-18T17:47:48Z,[]
2173610664,Fix redundant resource_route Invocations in scaffold generator,### Motivation / Background";;;;;
;;;;;
This PR comes form [this comment](https://github.com/rails/rails/pull/50335#pullrequestreview-1776597506). The rails generate scaffold command triggers the resource_route hook twice.;;;;;
;;;;;
```;;;;;
% bin/rails generate scaffold Post name:string;;;;;
      invoke  active_record;;;;;
      create    db/migrate/20240303140443_create_posts.rb;;;;;
      create    app/models/post.rb;;;;;
      invoke    test_unit;;;;;
      create      test/models/post_test.rb;;;;;
      create      test/fixtures/posts.yml;;;;;
      invoke  resource_route;;;;;
       route    resources :posts;;;;;
      invoke  scaffold_controller;;;;;
      create    app/controllers/posts_controller.rb;;;;;
      invoke    erb;;;;;
      create      app/views/posts;;;;;
      create      app/views/posts/index.html.erb;;;;;
      create      app/views/posts/edit.html.erb;;;;;
      create      app/views/posts/show.html.erb;;;;;
      create      app/views/posts/new.html.erb;;;;;
      create      app/views/posts/_form.html.erb;;;;;
      create      app/views/posts/_post.html.erb;;;;;
      invoke    resource_route;;;;;
      invoke    test_unit;;;;;
      create      test/controllers/posts_controller_test.rb;;;;;
      create      test/system/posts_test.rb;;;;;
      invoke    helper;;;;;
      create      app/helpers/posts_helper.rb;;;;;
      invoke      test_unit;;;;;
      invoke    jbuilder;;;;;
      create      app/views/posts/index.json.jbuilder;;;;;
      create      app/views/posts/show.json.jbuilder;;;;;
      create      app/views/posts/_post.json.jbuilder;;;;;
```;;;;;
;;;;;
Despite setting the --skip-routes option, which is a feature of the ScaffoldControllerGenerator designed to prevent route generation, the command still produces routes.;;;;;
;;;;;
```;;;;;
% bin/rails g scaffold Post name:string --skip-routes;;;;;
      invoke  active_record;;;;;
      create    db/migrate/20240306035406_create_posts.rb;;;;;
      create    app/models/post.rb;;;;;
      invoke    test_unit;;;;;
      create      test/models/post_test.rb;;;;;
      create      test/fixtures/posts.yml;;;;;
      invoke  resource_route;;;;;
       route    resources :posts;;;;;
      invoke  scaffold_controller;;;;;
      create    app/controllers/posts_controller.rb;;;;;
      invoke    erb;;;;;
      create      app/views/posts;;;;;
      create      app/views/posts/index.html.erb;;;;;
      create      app/views/posts/edit.html.erb;;;;;
      create      app/views/posts/show.html.erb;;;;;
      create      app/views/posts/new.html.erb;;;;;
      create      app/views/posts/_form.html.erb;;;;;
      create      app/views/posts/_post.html.erb;;;;;
      invoke    resource_route;;;;;
      invoke    test_unit;;;;;
      create      test/controllers/posts_controller_test.rb;;;;;
      create      test/system/posts_test.rb;;;;;
      invoke    helper;;;;;
      create      app/helpers/posts_helper.rb;;;;;
      invoke      test_unit;;;;;
      invoke    jbuilder;;;;;
      create      app/views/posts/index.json.jbuilder;;;;;
      create      app/views/posts/show.json.jbuilder;;;;;
      create      app/views/posts/_post.json.jbuilder;;;;;
```;;;;;
;;;;;
### Detail;;;;;
Following three parts of the code are related to multiple invocation of resource_route.;;;;;
;;;;;
- `hook_for :resource_route` within the ResourceGenerator, from which the ScaffoldGenerator inherits;;;;;
- `class_option :resource_route` in ScaffoldGenerator;;;;;
- `hook_for :resource_route` in ScaffoldControllerGenerator which is invoked by `hook_for :scaffold_controller` in ScaffoldGenerator;;;;;
;;;;;
The resource_route hook within ScaffoldGenerator has been removed with remove_hook_for to ensure that the hook is called exclusively within the scaffold_controller hook.;;;;;
The `class_option :resource_route, type: :boolean` has also been removed. Despite the removal of the resource_route hook in ScaffoldGenerator, invoking `class_option :resource_route` was still indirectly triggering resource_route.;;;;;
This occurred due to a combination of the following reasons:;;;;;
;;;;;
- generator classes, which inherit from Thor::Group, execute all defined public instance methods upon command execution.;;;;;
- the hook_for method utilizes invoke_from_option, a method defined in Thor::Group to dynamically defines an invoke_from_option_* method at runtime, which persists even if remove_hook_for is called.;;;;;
  - https://github.com/rails/thor/blob/a43d92fad7ebd77d359b7b96eb3db8a73ef9057c/lib/thor/group.rb#L124;;;;;
- the invoke_from_option_* method returns early when the option isn't available but `class_option :resource_route` in ScaffoldGeneratore makes the option available and Rails sets the resource_route option as default.;;;;;
  - https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/railties/lib/rails/generators.rb#L56;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-07T11:11:06Z,2024-03-30T06:24:07Z,[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2173181848,Kebabcase puma-dev configuration suggestion in bin/seutp,""Following up on #51266. Trying to make sure the suggested `puma-dev` setup introduced in #51088 works out of the box.";;;;;
;;;;;
Creating a fresh app with `rails new --main AppName` (or any multi-word app name) will still give us the error message:;;;;;
;;;;;
![image](https://github.com/rails/rails/assets/986290/7dd53909-8566-45ac-960c-84b58f3526a9);;;;;
;;;;;
"This PR simply kebabcases the `puma-dev` symlink suggested in `bin/setup`, making it work without additional configuration."",2024-03-07T07:40:07Z,2024-03-07T07:40:11Z,""[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2172885664,Add escape_html_entities option to JSON encoder,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
This Pull Request has been created because I sometimes want to override the global `Encoding.escape_html_entities_in_json` option for specific call sites.;;;;;
;;;;;
Where I work, we tend to embed JSON in HTML, so the default html entity escaping is appreciated. But there are some cases where we'd like to turn it off.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes ActiveSupport's JSON encoding code to accept an optional flag for whether or not to escape HTML entities (`escape_html_entities`). If not supplied, the existing global configuration flag will be used instead.;;;;;
;;;;;
The idea is to make the following possible:;;;;;
;;;;;
```ruby;;;;;
class MyController < ApplicationController;;;;;
  def index;;;;;
    render json: { some: '<data>' }, escape_html_entities: false;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->;;;;;
Sorry to show up with a code change out of the blue. I did a weird monkey patch like this in our codebase at work to solve a problem, and it seemed easy to upstream so I'm submitting this PR just in case. No hard feelings if it doesn't seem reasonable.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [ x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [ x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
;;;;;
",2024-03-07T03:49:36Z,2024-03-07T03:49:40Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}]""";;;;;
"2172771713,Enable Hash#compact_blank inside ActiveSupport::LogSubscriber,""### Motivation / Background";;;;;
Using ActiveSupport::LogSubscriber#color inside a custom log subscriber causes NoMethodError.;;;;;
;;;;;
### Detail;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  gem """"activesupport""""";;;;;
end;;;;;
;;;;;
"require """"active_support""""";;;;;
;;;;;
class TestLogSubscriber < ActiveSupport::LogSubscriber;;;;;
  attach_to :test;;;;;
;;;;;
  def hi(event);;;;;
    info(color(event.payload[:message], GREEN));;;;;
  end;;;;;
;;;;;
  private;;;;;
    def log_exception(name, e);;;;;
      super;;;;;
      raise e;;;;;
    end;;;;;
end;;;;;
;;;;;
ActiveSupport::LogSubscriber.logger = ActiveSupport::Logger.new(STDOUT);;;;;
"ActiveSupport::Notifications.instrument(""""hi.test"""", message: """"Hello!"""")";;;;;
```;;;;;
;;;;;
```;;;;;
/rails/activesupport/lib/active_support/log_subscriber.rb:193:in `mode_from': undefined method `compact_blank' for an instance of Hash (NoMethodError);;;;;
    ;;;;;
      modes = MODES.values_at(*options.compact_blank.keys);;;;;
                                      ^^^^^^^^^^^^^^;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
I have encountered this while using kredis locally, like;;;;;
;;;;;
```;;;;;
$ cd kredis;;;;;
$ bin/console;;;;;
"irb(main):001> Kredis.string """"mystring""""";;;;;
"Could not log """"meta.kredis"""" event. NoMethodError: undefined method `compact_blank' for an instance of Hash";;;;;
```;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-07T01:39:16Z,2024-03-11T23:11:21Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}]""";;;;;
"2172603548,ActionText::RichText attachments not cleaned up when content made empty,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails""""";;;;;
;;;;;
  gem 'debug';;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"  # gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record/railtie""""";;;;;
"require """"active_storage/engine""""";;;;;
"require """"action_text/engine""""";;;;;
"require """"tmpdir""""";;;;;
;;;;;
class TestApp < Rails::Application;;;;;
  config.load_defaults Rails::VERSION::STRING.to_f;;;;;
;;;;;
  config.root = __dir__;;;;;
"  config.hosts << """"example.org""""";;;;;
  config.eager_load = false;;;;;
"  config.session_store :cookie_store, key: """"cookie_store_key""""";;;;;
"  config.secret_key_base = """"secret_key_base""""";;;;;
;;;;;
  config.logger = Logger.new($stdout);;;;;
  Rails.logger  = config.logger;;;;;
;;;;;
  config.active_storage.service = :local;;;;;
  config.active_storage.service_configurations = {;;;;;
    local: {;;;;;
      root: Dir.tmpdir,;;;;;
"      service: """"Disk""""";;;;;
    };;;;;
  };;;;;
end;;;;;
;;;;;
"ENV[""""DATABASE_URL""""] = """"sqlite3::memory:""""";;;;;
;;;;;
Rails.application.initialize!;;;;;
;;;;;
"require ActiveStorage::Engine.root.join(""""db/migrate/20170806125915_create_active_storage_tables.rb"""").to_s";;;;;
"require ActionText::Engine.root.join(""""db/migrate/20180528164100_create_action_text_tables.rb"""").to_s";;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  CreateActiveStorageTables.new.change;;;;;
  CreateActionTextTables.new.change;;;;;
;;;;;
  create_table :users, force: true;;;;;
end;;;;;
;;;;;
class User < ActiveRecord::Base;;;;;
  has_rich_text :description;;;;;
end;;;;;
;;;;;
"require """"minitest/autorun""""";;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_rich_text_embed_behaviour;;;;;
    attached = ActiveStorage::Blob.create_and_upload!(;;;;;
      io: ::StringIO.new('dummy'),;;;;;
"      filename: 'dummy.txt""""',";;;;;
      content_type: 'text/plain',;;;;;
    );;;;;
;;;;;
"    user = User.create!(description: ActionText::Content.new(""""hello"""").append_attachables(attached))";;;;;
;;;;;
    assert_equal 1, user.description.embeds.size;;;;;
;;;;;
    user.description = ActionText::Content.new('');;;;;
;;;;;
    user.save;;;;;
;;;;;
    assert_empty user.description.embeds;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
When the body of an ActionText::RichText object is set to the empty string.  I would expect attachments to be cleaned up.;;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
ActiveStorage attachments `ActionText::RichText.embeds` are retained until the body is modified to contain some data ;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: Rails 7.1.3.2 [source code is unchanged on mainline](https://github.com/rails/rails/blob/2fa3294618eba90e095020620ca9584190c2ec8e/actiontext/app/models/action_text/rich_text.rb#L55) ;;;;;
;;;;;
**Ruby version**: ruby 3.2.3;;;;;
",2024-03-06T23:13:33Z,2024-03-12T02:56:38Z,[{'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}, {'id': 1180817762, 'node_id': 'MDU6TGFiZWwxMTgwODE3NzYy', 'url': 'https://api.github.com/repos/rails/rails/labels/actiontext', 'name': 'actiontext', 'color': '3bc667', 'default': False, 'description': ''}]""";;;;;
"2171578747,ActionCable::Channel::Broadcasting.serialize_broadcasting leads to unintentional very wide broadcast,""### Steps to reproduce";;;;;
Please consider the following code:;;;;;
;;;;;
```ruby;;;;;
class User < ApplicationRecord;;;;;
  # ...;;;;;
end;;;;;
;;;;;
class Foo;;;;;
  include ActiveModel::Model;;;;;
;;;;;
  def initialize(user:, type:);;;;;
    @user = user;;;;;
    @type = type.to_s;;;;;
  end;;;;;
;;;;;
  def self.find(foo_id);;;;;
"    id, type = foo_id.split("""":"""", 2)";;;;;
    new(user: User.find(id), type: type);;;;;
  end;;;;;
;;;;;
  def id;;;;;
"    """"#{@user.id}:#{type}""""";;;;;
  end;;;;;
;;;;;
  # ... more methods that make Foo actually useful;;;;;
end;;;;;
;;;;;
class FooChannel < ApplicationCable::Channel;;;;;
  def subscribed;;;;;
    foo = Foo.find(params[:foo_id]);;;;;
    authorize foo, :subscribe? # (Pundit);;;;;
    stream_for foo;;;;;
  end;;;;;
;;;;;
  def self.notify_patch(foo);;;;;
"    payload = { event: :patched, id: foo.id, type: """"Foo"""" }";;;;;
    broadcast_to(foo, payload);;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
It is possible to subscribe to patch-events for instances of Foo.;;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
So what happens is that we will fetch the `foo`. This is successful; no exception is raised. We then call `authorize` to see if the `current_user` may subscribe to events on this channel for this resource. `authorize` will raise an exception if it is not allowed; in this example it doesn't; we're on the happy path. And after that we call `stream_for` which **seems** to work fine... We can subscribe and we can call `notify_patch` to send our events.;;
;;;;;
"But there is a subtle issue with this code. `stream_for` has called `broadcasting_for` to generate a unique ID for the stream, but that ID appears to be `""""FooChannel:nil""""` which is really not unique at all!";;;;;
;;;;;
`broadcast_to` also calls `broadcasting_for` returning the same not-so-unique ID. The result is that **every `FooChannel.notify_patch`-event** gets broadcasted to **all `FooChannel`-subscribers**.;;;;;
;;;;;
The reason for this is easy to find:;;;;;
[`broadcasting_for`](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/actioncable/lib/action_cable/channel/broadcasting.rb#L24) calls [`serialize_broadcasting`](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/actioncable/lib/action_cable/channel/broadcasting.rb#L29) which in turn calls [`to_param`](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/actioncable/lib/action_cable/channel/broadcasting.rb#L36) on our `foo`-object. Our foo-object isn't persisted, or in other words: `foo#persisted?` implemented by [`ActiveModel::API#persisted?`](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/activemodel/lib/active_model/api.rb#L95) returns `false`. This makes `foo.to_param` implemented by [`ActiveModel::Conversion#to_param`](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/activemodel/lib/active_model/conversion.rb#L90) return `nil`.;;;;;
;;;;;
Quick solutions for this are easy to produce:;;;;;
;;;;;
1. We could update our implementation of `persisted?`;;;;;
;;;;;
```ruby;;;;;
class Foo;;;;;
  def persisted?;;;;;
    @user.persisted?;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
2. we could also call `stream_for foo.id` and `broadcast_to(foo.id, payload)`;;;;;
3. we could also rewrite `Foo#to_param`;;;;;
4. etcetera.;;;;;
;;;;;
What's *not* easy is figuring out that you are in fact broadcasting all events to everyone.  We gave it some thought but we didn't come up with a solid solution that would prevent this from happening again with the next channel. (`BarChannel` obviously 😄). It's really easy to make the same mistake again and it's not easy to detect if you do.;;;;;
;;;;;
The root cause, from one point of view, is that fetching and authorization are ultimately dependent on an `id`, but that streaming uses `#to_param`. If it could call `#id` instead this would not have happened; but it can't, because `stream_for(model, callback = nil, coder: nil, &block)` basically allows anything as its `model`-parameter. Is this intentional?;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-06T13:57:46Z,2024-03-06T13:57:46Z,[]
2170621291,Default Active Storage strict loading to strict_loading_by_default,### Motivation / Background";;;;;
;;;;;
While Active Storage supports strict loading, it [defaults to false](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/activestorage/lib/active_storage/attached/model.rb#L106). This can be problematic in applications that enforce strict loading by default. It can be assumed that `strict_loading_by_default` includes Active Storage attachments, leading to n+1 issues.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes the default of the `strict_loading` keyword parameter for `has_one_attached` and  `has_many_attached` to use the model's `strict_loading_by_default` to create a consistent developer experience.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-06T04:39:05Z,2024-03-06T04:39:09Z,[{'id': 664533972, 'node_id': 'MDU6TGFiZWw2NjQ1MzM5NzI=', 'url': 'https://api.github.com/repos/rails/rails/labels/activestorage', 'name': 'activestorage', 'color': 'bfd4f2', 'default': False, 'description': None}]""";;;;;
"2170562786,Add support for pattern matching for parameters,""### Motivation / Background";;;;;
;;;;;
I have some RESTful endpoints where it makes sense to pattern match params to deal with different shape of incoming payloads, as illustrated in this endpoint:;;;;;
;;;;;
```ruby;;;;;
def create;;;;;
  case params;;;;;
  in interview_time_availability: { interview_time_id:, person_id: };;;;;
    @interview_time_availabilities.create! interview_time_id:, person_id:;;;;;
  in interview_time: { id: };;;;;
    @students.each do |student|;;;;;
      student.interview_time_availabilities.create interview_time_id: id;;;;;
    end;;;;;
  end;;;;;
;;;;;
  redirect_to students_interview_time_availabilities_path;;;;;
end;;;;;
```;;;;;
;;;;;
### Detail;;;;;
;;;;;
This PR adds a `deconstruct_keys(keys)` method on `StrongParameters` that called `to_unsafe_h` for pattern matching:;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [X] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-06T03:36:54Z,2024-03-11T16:19:18Z,[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}]""";;;;;
"2170466905,has_many relation with joins adding redundant inverse inner join,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
Have the following set of related models, and use the `reverse_dependencies` relation. Observe (via the inline comments in the test case below) that there is an unnecessary/redundant join;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
#!/usr/bin/env ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile do;;;;;
"  source """"https://rubygems.org""""";;;;;
  ;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
  ;;;;;
"  gem """"rails"""", """"~> 7.1.0""""";;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"# gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
  ;;;;;
"  gem """"sqlite3""""";;;;;
  ;;;;;
"  gem 'anbt-sql-formatter', require: """"anbt-sql-formatter/formatter""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :rubygems, force: true do |t|;;;;;
  end;;;;;
  ;;;;;
  create_table :versions, force: true do |t|;;;;;
    t.belongs_to :rubygem;;;;;
    t.integer :position;;;;;
    t.boolean :indexed;;;;;
  end;;;;;
  ;;;;;
  create_table :gem_downloads, force: true do |t|;;;;;
    t.belongs_to :rubygem;;;;;
    t.belongs_to :version, null: true;;;;;
    t.integer :count;;;;;
  end;;;;;
  ;;;;;
  create_table :dependencies, force: true do |t|;;;;;
    t.belongs_to :rubygem;;;;;
    t.belongs_to :version;;;;;
  end;;;;;
end;;;;;
;;;;;
class Rubygem < ActiveRecord::Base;;;;;
  has_many :incoming_dependencies, lambda {;;;;;
                                      joins(:version).where(versions: { indexed: true, position: 0 });;;;;
"                                    }, class_name: """"Dependency"""", inverse_of: :rubygem";;;;;
  has_many :reverse_dependencies, through: :incoming_dependencies, source: :version_rubygem;;;;;
  ;;;;;
  has_many :versions;;;;;
  ;;;;;
  has_many :incoming_dependencies_no_join, lambda {;;;;;
                                      where(versions: { indexed: true, position: 0 });;;;;
"                                    }, class_name: """"Dependency"""", inverse_of: :rubygem";;;;;
  has_many :reverse_dependencies_no_join, through: :incoming_dependencies_no_join, source: :version_rubygem;;;;;
end;;;;;
;;;;;
class Dependency < ActiveRecord::Base;;;;;
  belongs_to :rubygem, optional: true;;;;;
  belongs_to :version;;;;;
  has_one :version_rubygem, through: :version, source: :rubygem;;;;;
end;;;;;
;;;;;
class Version < ActiveRecord::Base;;;;;
  belongs_to :rubygem, touch: true;;;;;
"  has_many :dependencies, -> { order(""""rubygems.name ASC"""").includes(:rubygem) }, dependent: :destroy, inverse_of: :version";;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_assoc_1;;;;;
    rubygem1 = Rubygem.create!;;;;;
    v1 = Version.create!(indexed: true, position: 0, rubygem: rubygem1);;;;;
    rubygem2 = Rubygem.create!;;;;;
    v2 = Version.create!(indexed: true, position: 0, rubygem: rubygem2);;;;;
    d = v2.dependencies.create!(rubygem: rubygem1);;;;;
    ;;;;;
    puts Rails.version;;;;;
    ;;;;;
    # SELECT;;;;;
"    #   """"rubygems"""" . *";;;;;
    #   FROM;;;;;
"    #   """"rubygems""""";;;;;
"    #   INNER JOIN """"versions""""";;;;;
"    #     ON """"rubygems"""".""""id"""" = """"versions"""".""""rubygem_id""""";;;;;
"    #   INNER JOIN """"dependencies""""";;;;;
"    #     ON """"versions"""".""""id"""" = """"dependencies"""".""""version_id""""";;;;;
"    #   INNER JOIN """"versions"""" """"versions_dependencies""""";;;;;
"    #     ON """"versions_dependencies"""".""""id"""" = """"dependencies"""".""""version_id""""";;;;;
    #   WHERE;;;;;
"    #   """"dependencies"""".""""rubygem_id"""" = ?";;;;;
"    #   AND """"versions"""".""""indexed"""" = ?";;;;;
"    #   AND """"versions"""".""""position"""" = ?";;;;;
      ;;;;;
    puts mu_pp(rubygem1.reverse_dependencies.arel);;;;;
    ;;;;;
    assert_equal [rubygem2], rubygem1.reverse_dependencies;;;;;
    assert_equal rubygem1.reverse_dependencies_no_join, rubygem1.reverse_dependencies;;;;;
    ;;;;;
    # Failure:;;;;;
    # BugTest#test_assoc_1 [Untitled.rb:118]:;;;;;
    # --- expected;;;;;
    # +++ actual;;;;;
    # @@ -109,6 +109,53 @@;;;;;
    #           #<ActiveRecord::TypeCaster::Map:0xXXXXXX;;;;;
    #           @klass=;;;;;
    #           Dependency(id: integer, rubygem_id: integer, version_id: integer)>>,;;;;;
"    # +               name=""""version_id"""">>>>,";;;;;
    # +        #<Arel::Nodes::InnerJoin:0xXXXXXX;;;;;
    # +         @left=;;;;;
    # +          #<Arel::Nodes::TableAlias:0xXXXXXX;;;;;
    # +           @left=;;;;;
    # +            #<Arel::Table:0xXXXXXX;;;;;
    # +             @klass=;;;;;
    # +              Version(id: integer, rubygem_id: integer, position: integer, indexed: boolean),;;;;;
"    # +             @name=""""versions"""",";;;;;
    # +             @table_alias=nil,;;;;;
    # +             @type_caster=;;;;;
    # +              #<ActiveRecord::TypeCaster::Map:0xXXXXXX;;;;;
    # +               @klass=;;;;;
    # +                Version(id: integer, rubygem_id: integer, position: integer, indexed: boolean)>>,;;;;;
"    # +           @right=""""versions_dependencies"""">,";;;;;
    # +         @right=;;;;;
    # +          #<Arel::Nodes::On:0xXXXXXX;;;;;
    # +           @expr=;;;;;
    # +            #<Arel::Nodes::Equality:0xXXXXXX;;;;;
    # +             @left=;;;;;
    # +              #<struct Arel::Attributes::Attribute;;;;;
    # +               relation=;;;;;
    # +                #<Arel::Nodes::TableAlias:0xXXXXXX;;;;;
    # +                 @left=;;;;;
    # +                  #<Arel::Table:0xXXXXXX;;;;;
    # +                   @klass=;;;;;
    # +                    Version(id: integer, rubygem_id: integer, position: integer, indexed: boolean),;;;;;
"    # +                   @name=""""versions"""",";;;;;
    # +                   @table_alias=nil,;;;;;
    # +                   @type_caster=;;;;;
    # +                    #<ActiveRecord::TypeCaster::Map:0xXXXXXX;;;;;
    # +                     @klass=;;;;;
    # +                      Version(id: integer, rubygem_id: integer, position: integer, indexed: boolean)>>,;;;;;
"    # +                 @right=""""versions_dependencies"""">,";;;;;
"    # +               name=""""id"""">,";;;;;
    # +             @right=;;;;;
    # +              #<struct Arel::Attributes::Attribute;;;;;
    # +               relation=;;;;;
    # +                #<Arel::Table:0xXXXXXX;;;;;
    # +                 @klass=;;;;;
    # +                  Dependency(id: integer, rubygem_id: integer, version_id: integer),;;;;;
"    # +                 @name=""""dependencies"""",";;;;;
    # +                 @table_alias=nil,;;;;;
    # +                 @type_caster=;;;;;
    # +                  #<ActiveRecord::TypeCaster::Map:0xXXXXXX;;;;;
    # +                   @klass=;;;;;
    # +                    Dependency(id: integer, rubygem_id: integer, version_id: integer)>>,;;;;;
"    #         name=""""version_id"""">>>>]>,";;;;;
    #   @wheres=;;;;;
    #     [#<Arel::Nodes::And:0xXXXXXX;;;;;
    # @@ -213,6 +260,8 @@;;;;;
"    #     ON """"rubygems"""".""""id"""" = """"versions"""".""""rubygem_id""""";;;;;
"    #   INNER JOIN """"dependencies""""";;;;;
"    #     ON """"versions"""".""""id"""" = """"dependencies"""".""""version_id""""";;;;;
"    # +    INNER JOIN """"versions"""" """"versions_dependencies""""";;;;;
"    # +      ON """"versions_dependencies"""".""""id"""" = """"dependencies"""".""""version_id""""";;;;;
    #   WHERE;;;;;
"    #   """"dependencies"""".""""rubygem_id"""" = ?";;;;;
"    #   AND """"versions"""".""""indexed"""" = ?";;;;;
      ;;;;;
    assert_equal rubygem1.reverse_dependencies_no_join.arel.ast, rubygem1.reverse_dependencies.arel.ast;;;;;
  end;;;;;
  ;;;;;
;;;;;
  def test_assoc_2;;;;;
    rubygem1 = Rubygem.create!;;;;;
    v1 = Version.create!(indexed: true, position: 0, rubygem: rubygem1);;;;;
    rubygem2 = Rubygem.create!;;;;;
    v2 = Version.create!(indexed: true, position: 0, rubygem: rubygem2);;;;;
    d = v2.dependencies.create!(rubygem: rubygem1);;;;;
    ;;;;;
    assert_equal [d], rubygem1.incoming_dependencies;;;;;
    # shows that the joins is necessary;;;;;
    assert_raises(ActiveRecord::StatementInvalid) { rubygem1.incoming_dependencies_no_join.to_a };;;;;
  end;;;;;
  ;;;;;
  def mu_pp(obj);;;;;
    case obj;;;;;
    when Arel::Nodes::SelectStatement;;;;;
      rule = AnbtSql::Rule.new;;;;;
      rule.keyword = AnbtSql::Rule::KEYWORD_UPPER_CASE;;;;;
"      rule.kw_multi_words << """"INNER JOIN""""";;;;;
"      rule.kw_nl_x << """"INNER JOIN""""";;;;;
"      rule.indent_string = """"  """"";;;;;
      ;;;;;
"      [""""AST:"""", obj.pretty_inspect, """"SQL:"""",";;;;;
"        AnbtSql::Formatter.new(rule).format(obj.to_sql)].join(""""\n\n"""")";;;;;
    else;;;;;
      obj.pretty_inspect;;;;;
    end;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
"The additional join should not be added, since it's an inner join and the `""""versions"""".""""id"""" = """"dependencies"""".""""version_id""""` restriction guarantees it does not add any additional filtering";;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
"There is an unused join to `""""versions"""" """"versions_dependencies""""`";;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.3.0;;;;;
",2024-03-06T01:49:42Z,2024-03-06T01:49:42Z,[]
2169291575,ActiveRecord::Encryption is encrypting/filtering other similar named attributes,### Steps to reproduce";;;;;
;;;;;
#NOM?;;;;;
```bash;;;;;
  bin/rails g model User first_name last_name email other_first_name;;;;;
  bin/rails db:migrate;;;;;
```;;;;;
#NOM?;;;;;
```ruby;;;;;
User.encrypts(:first_name);;;;;
```;;;;;
;;;;;
#NOM?;;;;;
```ruby;;;;;
"user = User.new(first_name: """"Hello"""", last_name: """"World"""", other_first_name: """"Hi"""")";;;;;
;;;;;
# This outputs;;;;;
"=> #<User:0x000000010c5ea648 id: nil, first_name: """"[FILTERED]"""", last_name: """"World"""", email: nil, other_first_name: """"[FILTERED]"""", created_at: nil, updated_at: nil>";;;;;
;;;;;
# Encrypted attributes only has :first_name in the set;;;;;
User.encrypted_attributes;;;;;
=> <Set: {:first_name}>;;;;;
```;;;;;
"<img width=""""654"""" alt=""""Screenshot 2024-03-05 at 7 21 18 PM"""" src=""""https://github.com/rails/rails/assets/27268721/bbb18517-a068-4982-97ea-39cbd5f492a5"""">";;;;;
;;;;;
### Expected behavior;;;;;
- `other_first_name` should not be [FILTERED];;;;;
;;;;;
### Actual behavior;;;;;
- `other_first_name` is `[FILTERED]`;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: `Edge`;;;;;
;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-05T13:52:33Z,2024-04-06T06:49:55Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}, {'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}]""";;;;;
"2168115785,Raise on `in_batches` used on a relation with unpersisted records,""Prior https://github.com/rails/rails/pull/48876 using `in_batches` on a relation with unpersisted records would work but new records will not be included in the iteration. ";;;;;
;;;;;
Currently using `in_batches` on a loaded relation with unpersisted records will fail when we try to sort records by `id` as new records don't have `id` set and comparison with `nil` fails.;;;;;
;;;;;
Since both raising an ambiguous comparison error or implicitly skipping new records seem sub-option we are proposing to raise a clear error to let application explicitly decide whether it needs to iterate on a loaded relation in slices (i.e. `each_slice`) or explicitly drop / save the un-persisted record and continue using `in_batches` ;;;;;
;;;;;
"cc: @garyhtou "",2024-03-05T01:52:09Z,2024-03-14T06:55:50Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2168018086,QueryAttributes treated as strings in exec_query,""### Steps to reproduce";;;;;
;;;;;
I have a library [dynamic_records](https://github.com/LukeClancy/dynamic-records-meritfront) that uses exec_query alongside QueryAttributes to write sql. Recently I updated rails, pg and psql to a recent version and found that exec_query no longer works as expected.;;;;;
;;;;;
exec_query seems to be converting all parameters into strings. I do not believe this is expected functionality.;;;;;
;;;;;
```ruby;;;;;
value = 1;;;;;
type = ActiveRecord::Type::Integer.new;;;;;
qa = ActiveRecord::Relation::QueryAttribute.new('int_input', value, type);;;;;
"x = ActiveRecord::Base.connection.exec_query(""""select $1"""", 'query name', [qa])";;;;;
out_v = x.rows.first.first;;;;;
;;;;;
"puts """"value: #{out_v.inspect}, class: #{out_v.class.to_s}""""";;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
"value: 1, class: Integer""""";;;;;
;;;;;
### Actual behavior;;;;;
"value \""""1\"""", class: String""""";;;;;
;;;;;
### System configuration;;;;;
ruby 3.2.2p53;;;;;
rails (7.1.3.2);;;;;
activemodel (= 7.1.3.2);;;;;
activerecord (= 7.1.3.2);;;;;
pg (1.5.6);;;;;
;;;;;
"psql (PostgreSQL) 16.2 (Ubuntu 16.2-1.pgdg22.04+1)"",2024-03-05T00:02:57Z,2024-03-05T23:37:09Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2167901158,Unexpected behaviour for CTE joins when CTE has same name as a relation,""### Steps to reproduce";;;;;
;;;;;
We are big users of CTEs and have been using [vlado/activerecord-cte](/vlado/activerecord-cte) for many years now. While trying to upgrade to Rails 7.1, we came across this situation which previously worked in Vlado's extension (stripped down code follows):;;;;;
;;;;;
```ruby;;;;;
class Task < ApplicationRecord;;;;;
  has_many :project_resources;;;;;
  has_many :projects, through: :project_resources;;;;;
end;;;;;
;;;;;
class ProjectResource < ApplicationRecord;;;;;
  belongs_to :resource, polymorphic: true;;;;;
  belongs_to :project;;;;;
end;;;;;
;;;;;
class Project < ApplicationRecord;;;;;
  has_many :project_resources;;;;;
  has_many :tasks, through: :project_resources, source: :resource, source_type: 'Task';;;;;
end;;;;;
;;;;;
Project.with(tasks: Task.active).joins(:tasks);;;;;
```;;;;;
;;;;;
With the extension, this would produce SQL like the following:;;;;;
;;;;;
```sql;;;;;
WITH tasks AS (;;;;;
  SELECT tasks.*;;;;;
  FROM tasks;;;;;
  WHERE active;;;;;
);;;;;
  SELECT projects.*;;;;;
  FROM projects;;;;;
  JOIN project_resources ON project_resources.resource_type = 'Task' AND project_resources.project_id = projects.id;;;;;
  JOIN tasks ON tasks.id = project_resources.resource_id;;;;;
```;;;;;
;;;;;
With the Rails 7.1 CTE joins, this produces the following:;;;;;
;;;;;
```sql;;;;;
WITH tasks AS (;;;;;
  SELECT tasks.*;;;;;
  FROM tasks;;;;;
  WHERE active;;;;;
);;;;;
  SELECT projects.*;;;;;
  FROM projects;;;;;
  JOIN tasks ON tasks.project_id = projects.id;;;;;
```;;;;;
;;;;;
Which is an invalid SQL query, as `project_id` doesn't exist on `tasks` but rather exists on the `project_resources` relation which sits in between `Task` and `Project`. This only happens when the CTE name is the same as an association. For instance, this does not change the join conditions:;;;;;
;;;;;
```ruby;;;;;
Project.with(filtered_tasks: Task.active).joins(:tasks);;;;;
```;;;;;
;;;;;
Produces;;;;;
;;;;;
```sql;;;;;
WITH filtered_tasks AS (;;;;;
  SELECT tasks.*;;;;;
  FROM tasks;;;;;
  WHERE active;;;;;
);;;;;
  SELECT projects.*;;;;;
  FROM projects;;;;;
  JOIN project_resources ON project_resources.resource_type = 'Task' AND project_resources.project_id = projects.id;;;;;
  JOIN tasks.id = project_resources.resource_id;;;;;
```;;;;;
;;;;;
Where the join conditions are retained as expected. (The `filtered_tasks` relation isn't joined here, of course, but the point is is that the `:tasks` join itself is unaffected by the `#with` call.);;;;;
;;;;;
Masking a table name in a CTE is a very useful capability, but it's not really possible if masking the table impacts the joins. ;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
I would expect that the joins would not be affected if the relation alias in the `WITH` query is masking an actual relation.;;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
The join condition should remain unaffected in the case of the CTE alias being the same as a relation name.;;;;;
;;;;;
### System configuration;;;;;
;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.3.0;;;;;
;;;;;
### Potential Fix;;;;;
;;;;;
After playing with it a bit, the following appears to satisfy all of our unit tests for our CTEs:;;;;;
;;;;;
```diff;;;;;
diff --git a/activerecord/lib/active_record/relation/query_methods.rb b/activerecord/lib/active_record/relation/query_methods.rb;;;;;
index 5d63709c3a..f17ed6b562 100644;;;;;
#NOM?;;;;;
#NOM?;;;;;
@@ -1625,7 +1625,7 @@ def build_from;;;;;
 ;;;;;
       def select_named_joins(join_names, stashed_joins = nil, &block);;;;;
         cte_joins, associations = join_names.partition do |join_name|;;;;;
-          Symbol === join_name && with_values.any? { _1.key?(join_name) };;;;;
+          Symbol === join_name && with_values.any? { _1.key?(join_name) } && !reflections[join_name.to_s];;;;;
         end;;;;;
 ;;;;;
         cte_joins.each do |cte_name|;;;;;
```;;;;;
;;;;;
This does not appear to break any existing ActiveRecord tests, so if there is interest in using this I can write up a patch that includes tests.;;;;;
",2024-03-04T22:28:36Z,2024-04-06T22:44:52Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2165733298,[Fix #50118] `:prepend` option not working with `run_after_transaction_callbacks_in_order_defined` config,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Fixes #50118.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Ensures that the `:prepend` option for after transaction callbacks is respected when `config.run_after_transaction_callbacks_in_order_defined = true`. This allows prepending certain `after_commit` and `after_rollback` callbacks while still running the rest in the order defined on the model.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->;;;;;
;;;;;
In addition to the tests here there is also [this script](https://github.com/rails/rails/issues/50118#issuecomment-1975502684) which I tested against.;;;;;
;;;;;
cc @ghiculescu;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-04T01:36:20Z,2024-03-04T05:20:42Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2165611366,[Fix #51242] Rework in_batches(use_ranges: true) to be more efficient,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
Fixes https://github.com/rails/rails/issues/51242;;;;;
;;;;;
In ActiveRecord 7.1, a new option was added to [ActiveRecord::Batches#in_batches](https://api.rubyonrails.org/classes/ActiveRecord/Batches.html#method-i-in_batches), `use_ranges: true`, that enables a more efficient way to generate queries from the provided scope for each batch.;;;;;
;;;;;
The resulting queries use ranges to select record ids, e.g. `WHERE id > 10000 AND id <= 20000` instead of passing a possibly very long list of ids in an `IN` clause, e.g. `IN (10000, 10001, [...,] 19999, 20000)`.;;;;;
;;;;;
This option was implemented in https://github.com/rails/rails/pull/45414.;;;;;
;;;;;
The implementation of `use_ranges: true` relies on the already implemented strategy to select all ids from the range (needed for `use_ranges: false`), when generating the scope for each batch.;;;;;
;;;;;
The typical SQL query to generate a scope for a batch is (example with batches of 10k records):;;;;;
;;;;;
```sql;;;;;
"SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
```;;;;;
;;;;;
But subsequently, all these ids but the last one are discarded:;;;;;
;;;;;
https://github.com/rails/rails/blob/v7.1.3.2/activerecord/lib/active_record/relation/batches.rb#L379-L380;;;;;
;;;;;
**This method wastes resources in the database (CPU, I/O), in transit (bandwidth) and in the Ruby process (RAM).**;;;;;
;;;;;
This Pull Request is a proposal to save these resources by implementing **an additional optimisation**.;;;;;
;;;;;
### Detail;;;;;
;;;;;
The description below applies only to the use of `in_batches` **with** the option `use_ranges: true`.;;;;;
;;;;;
Instead of returning all the ids for each batch, we use `OFFSET` to search for the last id in the next batch and return just one id, e.g.;;;;;
;;;;;
```diff;;;;;
  -- queries for all batches but the last (before/after);;;;;
"- SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
"+ SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 1 OFFSET 9999";;;;;
```;;;;;
;;;;;
There is one downside, however.;;;;;
;;;;;
Our `OFFSET`-based query won't be able to return the last id if the next batch is smaller than the limit or if there's no next batch. We always need one additional query to get the size and last id of the very last batch. We use the same query as before the optim for that purpose:;;;;;
;;;;;
```diff;;;;;
  -- queries for the last batch (before/after);;;;;
"- SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
"+ SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 1 OFFSET 9999";;;;;
"+ SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
```;;;;;
;;;;;
Unless we only have a handful of small batches, this strategy is a winner overall, as it reduces the time and network resources spent generating batches, as shown by the benchmark below.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
#### Benchmark;;;;;
;;;;;
Let's reuse the benchmark from the description of https://github.com/rails/rails/pull/45414, i.e. the same `users` table with `10M` records, but with two modifications:;;;;;
;;;;;
* Batches of 10k records instead of 1k;;;;;
* No call to `batch.count` on each batch since we are measuring only on the time and resources needed to generate the scopes, not to use them.;;;;;
;;;;;
Here is the code used:;;;;;
;;;;;
```sql;;;;;
CREATE TABLE users (id bigserial PRIMARY KEY, val integer DEFAULT 0);;;;;
INSERT INTO users SELECT i FROM generate_series(1, 10000000) AS i;;;;;
```;;;;;
;;;;;
```ruby;;;;;
start = Process.clock_gettime(Process::CLOCK_MONOTONIC);;;;;
;;;;;
count = 0;;;;;
User.in_batches(of: 10_000) do |batch|;;;;;
  count += 1  # previously: batch.count, but we don't want to trigger any other queries in this benchmark;;;;;
end;;;;;
;;;;;
"puts """"Count = #{count}""""";;;;;
elapsed = Process.clock_gettime(Process::CLOCK_MONOTONIC) - start;;;;;
"puts """"Elapsed: #{elapsed}s""""";;;;;
```;;;;;
;;;;;
The benchmark is executed on a single machine (a recent macbook), with a round-trip-time < 1ms.;;;;;
;;;;;
The network (I/O) stats are obtained by comparing the result of this command before/after a benchmark run:;;;;;
;;;;;
```;;;;;
docker stats --no-stream postgres --format 'table {{.NetIO}}';;;;;
```;;;;;
;;;;;
**Here are the results:**;;;;;
;;;;;
| Batching method                      | Duration | Network (I/O)     |;;;;;
|--------------------------------------|---------:|------------------:|;;;;;
| in_batches(use_ranges: true)         |    5.6 s.  |   &nbsp;&nbsp;1.2 MB / &nbsp;&nbsp;180 MB   |;
| in_batches(use_ranges: true) + optim from this PR |     2.3 s.  |   &nbsp;&nbsp;< 0.5 MB /  < 0.2 MB   |;;;
;;;;;
In this benchmark, we managed to **generate scopes for batches `x2.4` times faster and with `x900` times less bandwidth**. These results will of course typically vary with the batch size used, and the network speed.;;;;;
;;;;;
The absolute values may not seem like huge gains, but I'm considering using `in_batches(use_ranges: true)` on tables with over 3 billion records, where this benchmark would show a saving of at least `16+ minutes` and `52.7 GB` of bandwidth (+ the database resources needed to extract/send this traffic).;;;;;
;;;;;
#### Other strategies considered;;;;;
;;;;;
Using `OFFSET` is not be the only way to achieve the same kind of optimisation.;;;;;
;;;;;
For example, we could consider using a strategy based on the calculation of the maximum id + batch size for each batch (details folded below).;;;;;
;;;;;
<details>;;;;;
  <summary>Using a CTE</summary>;;;;;
<br />;;;;;
We could use a CTE like this one:;;;;;
;;;;;
```sql;;;;;
"WITH """"batch_ids"""" AS (";;;;;
    -- same query as today;;;;;
"    SELECT """"users"""".""""id"""" FROM """"users"""" WHERE (id > 10000) ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
);;;;;
SELECT COUNT(id) AS last_batch_size, MAX(id) AS last_batch_id FROM batch_ids;;;;;
```;;;;;
;;;;;
"This would be advantageous, as we would not have to use that """"extra"""" query for the last batch as we did above.";;;;;
;;;;;
Nevertheless, using a CTE would have the following downsides:;;;;;
;;;;;
1. CTEs are not supported yet by all RDBMS supported by Active Record (MySQL < 8.0);;;;;
"2. To my knowledge, ActiveRecord does not provide any way to easily generate a query with two distinct calculations such as a count and a maximum. The """"manual"""" workarounds for this could be complicated.";;;;;
;;;;;
For the record, the query above can be generated with:;;;;;
;;;;;
```ruby;;;;;
User.connection.select_one(;;;;;
  User;;;;;
    .with(batch_ids: User.select('id').where('id > 10000').order(:id).limit(10000));;;;;
    .from('batch_ids');;;;;
    .select('COUNT(id) AS last_batch_size', 'MAX(id) AS last_batch_id');;;;;
);;;;;
```;;;;;
</details>;;;;;
;;;;;
;;;;;
<details>;;;;;
  <summary>Using a subquery</summary>;;;;;
<br />;;;;;
We could use a subquery like this one:;;;;;
;;;;;
```sql;;;;;
SELECT;;;;;
    COUNT(id) AS last_batch_size, MAX(id) AS last_batch_id;;;;;
FROM (;;;;;
    -- same query as today;;;;;
"    SELECT """"users"""".""""id"""" FROM """"users"""" WHERE (id > 10000) ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
) subquery;;;;;
```;;;;;
;;;;;
Even better than the CTE version because this would be compatible with all RDBMS supported by ActiveRecord.;;;;;
;;;;;
For the record, the query above can be generated with:;;;;;
;;;;;
```ruby;;;;;
User.connection.select_one(;;;;;
  User.select('COUNT(id) AS last_batch_size', 'MAX(id) AS last_batch_id').from(;;;;;
    User.select('id').where('id > 10000').order(:id).limit(10000);;;;;
  );;;;;
);;;;;
```;;;;;
;;;;;
But to support all sorts of primary keys (including composite) and multiple calculations in a single query, I suspect some complicated work is required in Active Record. If you think this is feasible at a reasonable cost, please provide some guidance 🙏 ;;;;;
</details>;;;;;
;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-03T23:02:55Z,2024-04-06T22:48:12Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2229968422,Improve ActionCable redis config example [skip ci],""While using `{}` inside yaml files is valid and will be correctly parsed, it looks strange and not idiomatic."",2024-04-07T21:32:04Z,2024-04-07T21:32:08Z,""[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2229766221,Skip ActiveStorage previewer tests if required tools are unavailable,""These tests require certain tools to be available, if they aren't these tests will fail. Skip instead."",2024-04-07T13:14:48Z,2024-04-07T13:14:53Z,""[{'id': 664533972, 'node_id': 'MDU6TGFiZWw2NjQ1MzM5NzI=', 'url': 'https://api.github.com/repos/rails/rails/labels/activestorage', 'name': 'activestorage', 'color': 'bfd4f2', 'default': False, 'description': None}]""";;;;;
"2229284323,Remove usage of `OpenStruct`,""Follow up to https://github.com/rails/rails/pull/51491#issuecomment-2037429653.";;;;;
;;;;;
"There was one more error regarding the missing `require """"ostruct""""` after that PR merge (https://buildkite.com/rails/rails/builds/106158#018eaee1-7e2b-4e8a-9876-8d3c358d5576), so maybe we can just remove its usage instead?";;;;;
;;;;;
"cc @byroot "",2024-04-06T14:58:05Z,2024-04-06T18:57:07Z,""[{'id': 107188, 'node_id': 'MDU6TGFiZWwxMDcxODg=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionmailer', 'name': 'actionmailer', 'color': '8B00FC', 'default': False, 'description': None}, {'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}, {'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}, {'id': 3666649, 'node_id': 'MDU6TGFiZWwzNjY2NjQ5', 'url': 'https://api.github.com/repos/rails/rails/labels/actionview', 'name': 'actionview', 'color': 'd7e102', 'default': False, 'description': None}, {'id': 123812746, 'node_id': 'MDU6TGFiZWwxMjM4MTI3NDY=', 'url': 'https://api.github.com/repos/rails/rails/labels/activejob', 'name': 'activejob', 'color': '5319e7', 'default': False, 'description': None}]""";;;;;
"2229169236,Don't buffer things that shouldn't be buffered.,""Assigning `ActionDispatch::Response` to `self.response` causes the response body to be buffered (and potentially evaluated multiple times).";;;;;
;;;;;
```ruby;;;;;
class StreamingController < ApplicationController;;;;;
  def simple;;;;;
    body = Enumerator.new do |enumerator|;;;;;
"      enumerator << """"."""" * 1024";;;;;
      ;;;;;
      100.times do |i|;;;;;
"        enumerator << """"This is line #{i}\n""""";;;;;
        sleep 0.1;;;;;
      end;;;;;
    end;;;;;
;;;;;
    # Works, puma, falcon, Rails 7.1;;;;;
"    # self.response = Rack::Response[200, {""""content-type"""" => """"text/plain""""}, body]";;;;;
;;;;;
    # Doesn't work because the response is buffered:;;;;;
"    self.response = ActionDispatch::Response.new(200, {""""content-type"""" => """"text/plain""""}, body)";;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
In both Puma and Falcon, the response is buffered without this change.;;;;;
;;;;;
"cc @willcosgrove "",2024-04-06T09:53:30Z,2024-04-06T10:08:35Z,""[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}]""";;;;;
"2229046933,[Fix #40109] Incorrect joins for polymorphic `has_many through:` with association scope,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Fixes https://github.com/rails/rails/issues/40109;;;;;
;;;;;
### Detail;;;;;
;;;;;
Updates `ActiveRecord::Reflection::PolymorphicReflection#join_scopes` to not apply the previous reflection's join scopes if it's a through reflection.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-06T03:10:42Z,2024-04-06T07:14:24Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2228498012,add navbar highlighting to guides [ci skip],""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
@jathayde @AmandaPerino This Pull Request has been created to add the highlighting to the navigation bar. ;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request adds on scroll event to control highlighting and css rules for the for highlight. ;;;;;
;;;;;
Right now there are comments in the css labeling the parts that draw the highlight and the square because I wasn't sure it would be obvious what the pseudo-elements were for, but I can remove them if you want. ;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-05T17:27:03Z,2024-04-07T15:34:07Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2228287663,UnrecognizedCommandError can be corrected and retried,""### Motivation / Background";;;;;
;;;;;
"This is a follow up to https://github.com/rails/rails/pull/50941. """"Did you mean?"""" style errors were introduced in rails/rails@2530160 for unrecognized commands. With this change, we give the user the option to retry with the corrected command name - instead of needing to retype and rerun the command.";;;;;
;;;;;
### Detail;;;;;
;;;;;
We iterate through all the possible commands returned by `DidYouMean::SpellChecker` and give the user the option to rerun the suggested correction.;;;;;
;;;;;
```;;;;;
 ➜  myapp git:(main) bin/rails vershen;;;;;
"Unrecognized command """"vershen""""";;;;;
;;;;;
Did you mean?  version [Yn] y;;;;;
Rails 7.2.0.alpha;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-05T15:19:49Z,2024-04-05T22:31:25Z,[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2228096494,Improve accessibility,""### Motivation / Background";;;;;
;;;;;
As requested by @AmandaPerino, this PR aims to improve the accessibility of the guides. It continues on the work in #51341 #51372 #51385 and #51444. It also addresses whatever wasn't addressed from https://github.com/rails/rails/pull/51341#issuecomment-2007717282.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Each commit in the PR has a descriptive title and often a message why the change was made, which I recommend we keep when merging instead of squashing it. Screenshots are listed below. A few of the commits that introduce fixes or features are listed here:;;;;;
;;;;;
* [Add label and accessible content](https://github.com/rails/rails/commit/4f2b25ba54d82bc897fb33f681214f5bf05cb0bd) ;;;;;
  ;;;;;
  Having a select element without a label outside a form isn't directly problematic, but the text Version is the label of the select and should act as such.;;;;;
;;;;;
  Because the select element is set up to browse to a different page which loses the current focus position, users must be instructed about this context change. It would be much better to display this content to everyone, but having this for screenreaders only is better than not having it at all.;;;;;
;;;;;
* [Fix accessible text for voice commands](https://github.com/rails/rails/commit/1863e5590cecac6ecfd0c4c031f1c4c967d0d768) ;;;;;
  ;;;;;
  Using the title attribute means some screenreaders will not be able to show the expanded accessible text at all, but using aria-label loses the hover text currently available.;;;;;
;;;;;
  If the title attribute is still used, the accessible label should start with the same content as the visible label. This is necessary for most voice operated tooling which only match starting text.;;;;;
;;;;;
"  Having """"Return"""" as the start of the accessible label and """"Guides"""" as the start of the visible label means in most cases users that rely on voice commands will not be able to browse here.";;;;;
;;;;;
* [Add landmarks to all guide pages](https://github.com/rails/rails/commit/9669f4be012f34488d52e16d0b6e40a11399e414) ;;;;;
  ;;;;;
  Landmarks such as header, section, footer, article, and the main content landmark help navigating when using assistive tooling.;;;;;
;;;;;
  Since each guide is a self-contained article, a header section with the guide introduction and navigation, a footer section which is not part of the content but a call to action, and the rest can be clearly separated, landmarks here are appropriate.;;;;;
;;;;;
* [Make back-to-top work without JavaScript](https://github.com/rails/rails/commit/b33278c01384a7612d0adf2270456718181b5acb) ;;;;;
;;;;;
  By doing feature detection on animation timeline CSS, the graceful degradation can take care of the visibility of the back-to-top button. In case no JavaScript is available, it should always be shown.;;;;;
;;;;;
* [Enable back-to-top without JavaScript](https://github.com/rails/rails/commit/430f27c959f0df30b6baeea3d688d8fa5448f842) ;;;;;
;;;;;
  And add an accessible label to the button. It would be better to just show the text back to top underneath the arrow, but this change is again better than not having it at all.;;;;;
;;;;;
* [Consistent scrolling behaviour respecting pref](https://github.com/rails/rails/commit/f2ae0318736a286a13d896cad8527bd2d1443c50) ;;;;;
;;;;;
  Use the preference to detect if a user wants reduced motion and if not enable smooth scrolling. This takes care of the back-to-top smooth scrolling, and also adds it to anchor links. If this is unwanted, the change can be reverted and a matchmedia check should be done in JavaScript instead before smooth scrolling;;;;;
;;;;;
* [Add skip links to quickly navigate past navs](https://github.com/rails/rails/commit/653b292ac26b2df59ebeb44fc9415ebc8130243b) ;;;;;
  ;;;;;
  Skip links are a common practice to allow keyboard and other users to skip past large blocks of content that are present on every page, which in this case are the secondary navigation at the top,;;;;;
the version selector, and the chapter navigation.;;;;;
;;;;;
  The skip links only show when focused.;;;;;
;;;;;
* [Wrap tables to make them responsive](https://github.com/rails/rails/commit/e2cfe8fdfccfcb47aec2f358b0badab79c817981);;;;;
;;;;;
* [Make back-to-top link to skip link](https://github.com/rails/rails/commit/ad966a42de9e166ab33026b28fc8dda64f5fbdd1) ;;;;;
;;;;;
  This allow screen readers to announce something, because linking to an empty fragment or the body element doesn't announce anything useful.;;;;;
;;;;;
* [Add branded selectable color](https://github.com/rails/rails/commit/2557614d872629462e354b2bd1536736aa2077be) ;;;;;
;;;;;
  Fixes selecting text in dark mode and brands it for both modes.;;;;;
;;;;;
* [Make more info and guides index accessible](https://github.com/rails/rails/commit/f9eaeb18d8c5712ae0f2edf351ff9829c996bf78) ;;;;;
;;;;;
  * Adds aria-controls, which binds the control to the content.;;;;;
  * Adds aria-expanded, which signals the current expansion state.;;;;;
  * Adds focus handling, which focuses the first link or the button;;;;;
    depending on the expansion state.;;;;;
  * Adds keyboard closing for the more info button.;;;;;
  * Adds outside click tracking to close the expanded content.;;;;;
  * Fixes the more info button to not be focusable.;;;;;
;;;;;
* [Fix dark mode for guide selector](https://github.com/rails/rails/commit/9c4cfd00492a2bd55db9ed5b5a9a616a962c153a);;;;;
;;;;;
* [Add accessible label for guide navigator](https://github.com/rails/rails/commit/93f9819c62890301f398e752b6083c9d2c9f6c40);;;;;
;;;;;
### Additional information;;;;;
;;;;;
Please note that this PR doesn't necessarily make the guides completely accessible and we should continue to improve on this, but this gets us (a big) part of the way there, together with the changes that were already made prior.;;;;;
;;;;;
| Before | After |;;;;;
| ------ | ----- |;;;;;
"| You could not focus the selector pressing """"Version"""" | ![a11y-focusable-label-version](https://github.com/rails/rails/assets/1964376/58f5d1a7-a6ef-47e2-86ac-6e1e0288a18c) |";;;;;
| The element (version selector) was broken if JavaScript was disabled | ![a11y-no-js-desktop](https://github.com/rails/rails/assets/1964376/0a93871b-c55a-4f9b-a524-86f6024f39b7) |;;;;;
| The element (version selector) was broken if JavaScript was disabled | ![a11y-no-js-mobile](https://github.com/rails/rails/assets/1964376/5075e1ac-c888-496e-8fa4-4f9066d6aa43) |;;;;;
| ![a11y-before-table-wrap](https://github.com/rails/rails/assets/1964376/29e41733-60ce-4933-9d4f-36a9fad972e8) | ![a11y-after-table-wrap](https://github.com/rails/rails/assets/1964376/303818b1-d3af-45e3-9ea7-08121c91f04c) |;;;;;
| You could not skip past the secondary top navigation | ![a11y-main-skip-link](https://github.com/rails/rails/assets/1964376/8d2c1af0-7575-4089-8e89-e7cfb42c8975) |;;;;;
| You could not skip past the chapter navigation | ![a11y-chapter-skip-link](https://github.com/rails/rails/assets/1964376/87cccb26-f7ae-4ae9-a382-145d6cbd963e) |;;;;;
| ![a11y-selectable-text-before](https://github.com/rails/rails/assets/1964376/e9e9b56f-08de-45d8-955f-c7884b33a387) | ![a11y-selectable-text](https://github.com/rails/rails/assets/1964376/c938bbde-54ee-480b-b295-6a91bdd8c7e7) |;;;;;
| There was no label indicating what the select does | ![a11y-guide-selector](https://github.com/rails/rails/assets/1964376/cfaf0501-516b-4ad3-bc30-d77701f01164) |;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [X] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-05T13:53:30Z,2024-04-07T15:35:24Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2226955930,Handle path_params gracefully when a user sends `?path_params=string`,""In some cases it's possible for `path_params` to be passed into `url_for` by an end-user of a rails app. Kaminari currently triggers this.";;;;;
;;;;;
"It's also currently inconvenient to write a test to ensure this doesn't happen. Passing `path_params: """"string""""` in a functional test crashes the test runner. (see [this example in a rails bug report template](https://github.com/rails/rails/compare/main...martinemde:rails:bug-report-path-params) that crashes.)";;;;;
;;;;;
A string value will cause a 500 error in rails internals. A hash `?path_params[inject]=string` can be used to inject a path_param into the url generation. However, I don't believe there is any vulnerability since path_params are lower priority than actual params and get ignored when there are no matches. Also, given that the very similar #39616 did not raise alarm bells, I'm not considering this a vulnerability. Still, it is probably good to scrub this key. A vulnerability once existed for a similar problem: https://github.com/advisories/GHSA-r5jw-62xg-j433;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
I was trying to fix a 500 caused by a security scan of rubygems.org. An unknown researcher sent a huge list of params to many pages, snipped here:;;;;;
;;;;;
![image](https://github.com/rails/rails/assets/989/84f481a9-dfc5-40dd-93e9-1ccacd445489);;;;;
;;;;;
This caused at least two 500 errors on rubygems.org, a minor annoyance but enough to potentially page someone on-call.;;;;;
;;;;;
I tracked the actual issue down to kaminari for which I opened https://github.com/kaminari/kaminari/pull/1123.;;;;;
;;;;;
While I think that this should be fixed in kaminari, I also think rails should fix this because it is somewhat difficult to write a test to ensure that this key is handled well. (see bug report template linked at top) ;;;;;
;;;;;
This PR also saves one hash allocation and one merge for every URL generate that doesn't have a `path_params:` key (most of them?), but the `option = option.dup` might negate most of the benefit (it could be reconfigured to save that dup, most likely).;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes `ActionDispatch::Journey::Formatter#generate` to only extract and merge path_params when it is a hash.;;;;;
;;;;;
This PR does not address in any way filtering `path_params`. I believe kaminari should do this. However, this addresses the crash when path_params is not a Hash and makes most url generations slightly more efficient. ;;;;;
;;;;;
### Additional information;;;;;
;;;;;
This is very similar to another fix by my colleague @simi submitted to rails, #39616, which I think also deserves attention for the same reason, if it is still applicable to current rails code.;;;;;
;;;;;
I'm also patching this on rubygems.org in the meantime so we don't get needless 500s.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [X] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-05T04:01:48Z,2024-04-05T16:48:09Z,[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}]""";;;;;
"2226911350,Use ActionController::TestCase in bug_report_template/action_controller.rb,""### Motivation / Background";;;;;
;;;;;
This Pull Request has been created because I was trying to submit a bug report and had to spend time getting the bug report template to work more like a functional test in rails.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes `guides/bug_report_template/action_controller.rb` to draw a route and use `ActionController::TestCase` to make testing easier.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-05T03:32:15Z,2024-04-05T03:32:49Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2226602219,Should Active Model's `ImmutableString` type observe the `limit` parameter?,""TL";DR: should `attribute :foobar, :string, limit: 30` chop the value to 30 characters?;;;;
;;;;;
`ActiveModel::Type::String` inherits;;;;;
`ActiveModel::Type::ImmutableString` inherits;;;;;
 `ActiveModel::Type::Value`  which accepts three `limit, scale, precision` options [but lets the base type decide what to do with them](https://api.rubyonrails.org/classes/ActiveModel/Type/Value.html#method-c-new).;;;;;
;;;;;
I was wondering whether it would make sense for the string types to interpret `limit` as a max length and chop on `cast` or `serialize`. I've got some custom initializer code at the moment which does:;;;;;
;;;;;
```rb;;;;;
class ActiveModel::Type::String;;;;;
  def cast(value);;;;;
    if @limit;;;;;
      super(value.to_s.first(@limit));;;;;
    else;;;;;
      super;;;;;
    end;;;;;
  end;;;;;
end;;;;;
 ```;;;;;
;;;;;
Which reuses the `ImmutableString#cast` logic and chops the value, not great but works well, well enough to ask the question here.;;;;;
;;;;;
What do people think? Happy to submit a PR if we can agree it's nice to have.;;;;;
;;;;;
"NOTE: `ActiveModel::Type::Integer` interprets `limit` as [the number of bytes to store the integer with](https://api.rubyonrails.org/classes/ActiveModel/Type/Integer.html), which makes the option a bit confusing. However, a `t.string :column_name, limit: 42` will effectively [limit the length of that string column in Active Record](https://api.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_column)."",2024-04-04T22:07:58Z,2024-04-06T06:57:37Z,""[{'id': 107190, 'node_id': 'MDU6TGFiZWwxMDcxOTA=', 'url': 'https://api.github.com/repos/rails/rails/labels/activemodel', 'name': 'activemodel', 'color': '00E5FF', 'default': False, 'description': None}]""";;;;;
"2224752118,Update Filter Attributes to perform exact matches instead of Fuzzy matches,""### Motivation / Background";;;;;
;;;;;
This Pull Request has been created because of a bug mentioned in #51254 wherein encrypting one attribute in a model filters out other similar matching attributes in inspect.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This PR makes the following changes:;;;;;
- Updates `filter_attributes` to exact regex matches instead of fuzzy matching;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-04T07:52:45Z,2024-04-06T12:55:46Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}, {'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2224488321,Fix textdecorator specificity on hovering in index [ci skip],""In the guides index section, the text-decorator and color are not showing properly on hovering. And the issue is causing because of the higher specificity. ";;;;;
![Screenshot 2024-04-04 at 10 26 58 AM](https://github.com/rails/rails/assets/22231095/2c36b760-594c-43c9-9991-f6318e279d4c);;;;;
;;;;;
![Screenshot 2024-04-04 at 10 17 39 AM](https://github.com/rails/rails/assets/22231095/03381990-fa57-4ce4-8d20-288477265470);;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request fixes the hovering style issue.;;;;;
![Screenshot 2024-04-04 at 9 06 11 AM](https://github.com/rails/rails/assets/22231095/7b34dec4-9f69-416a-b46b-172408e811df);;;;;
;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
;;;;;
cc/ @jathayde ;;;;;
",2024-04-04T04:50:13Z,2024-04-07T15:36:37Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2224165865,Add a Date decoder to the pg adapter ,""Fix #51448";;;;;
;;;;;
Add a Date decoder to the pg adapter to type cast dates at the connection level;;;;;
;;;;;
This would type cast columns of type `date` to ruby `Date` when running a raw query through `ActiveRecord::Base.connection.select_all`.;;;;;
;;;;;
Before:;;;;;
;;;;;
```ruby;;;;;
"ActiveRecord::Base.connection.select_value(""""select '2024-01-01'::date"""").class ";;;;;
#=> String;;;;;
```;;;;;
;;;;;
After:;;;;;
```ruby;;;;;
"ActiveRecord::Base.connection.select_value(""""select '2024-01-01'::date"""").class ";;;;;
#=>  Date ;;;;;
```;;;;;
;;;;;
;;;;;
While I don't think we'd want to to set a type cast expectation at this level (not all adapters have dates), this would brings the PG adapter to parity (for dates) with the Mysql2 adapter. ;;;;;
;;;;;
We already convert timestamp, it would makes sense to also convert dates. ;;;;;
;;;;;
I wasn't sure if I should add a test. I am thinking that a test sets an expectation about type casting at the adapter level. ;;;;;
This changes a public API, albeit a pretty low level one, but it seems like we don't test the other types either. I removed timestamps + float/numeric and all tests still pass. ;;;;;
;;;;;
I added a message in the changelog entry to make sure it doesn't burn anyone. ;;;;;
;;;;;
Unsure if we should merge this. Impact radius is large, but after digging into it and running the tests, it looks pretty benign.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-04T00:27:33Z,2024-04-04T00:29:16Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2224128597,Trix toolbar doesn't render correctly with Propshaft,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
;;;;;
```bash;;;;;
# In bash, get a new rails app setup using propshaft;;;;;
bin/rails new . -a propshaft;;;;;
bin/rails generate scaffold post title:string body:text;;;;;
;;;;;
# Install Action Text:;;;;;
bin/rails action_text:install;;;;;
bundle install;;;;;
bin/rails db:migrate;;;;;
;;;;;
#  post body is rich text;;;;;
cat << EOF > app/models/post.rb;;;;;
class Post < ApplicationRecord;;;;;
  has_rich_text :body;;;;;
end;;;;;
EOF;;;;;
;;;;;
# ensure it's a rich_text_area in the form;;;;;
sed -i 's/<%= form.text_area :body %>/<%= form.rich_text_area :body %>/' app/views/posts/_form.html.erb;;;;;
;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
http://localhost:3000/posts/new should render the text area with Trix toolbar.;;;;;
;;;;;
Here is what renders if I follow all the same steps above, but instead of `bin/rails new . -a propshaft`, just using `bin/rails new .`:;;;;;
;;;;;
![image](https://github.com/rails/rails/assets/1312348/e53bc1e9-a793-410d-a7cd-a779e10faa31);;;;;
;;;;;
;;;;;
;;;;;
### Actual behavior;;;;;
The toolbar is just HTML buttons.;;;;;
;;;;;
![image](https://github.com/rails/rails/assets/1312348/521a03ca-e8fe-4cd2-9bfa-adbc24f716e1);;;;;
;;;;;
I cannot figure out how to get it working in Propshaft.;;;;;
;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.3.0;;;;;
",2024-04-03T23:45:27Z,2024-04-04T15:31:10Z,[]
2224104767,Use devcontainer features for optional dependencies,### Motivation / Background";;;;;
;;;;;
We have created our own features for optional Rails dependencies needed for active storage, postgres and mysql. Features provide a bit better ergonomics for adding or removing these from the devcontainer, and previously we were always installing these dependencies via the devcontainer's dockerfile, whether the app was using them or not.;;;;;
;;;;;
### Detail;;;;;
;;;;;
With this change, when we generate the app, we just add the features we need to the `devcontainer.json`. And also, we swap features in and out as need when doing `db:system:change`.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-03T23:15:11Z,2024-04-03T23:31:28Z,[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2223710666,Don't preload Selenium browser when remote,""### Motivation / Background";;;;;
Fixes #50827 ;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request stops the preloading of the Selenium browser when the browser is remote.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] NA - Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] NA - CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-03T19:09:14Z,2024-04-03T19:20:04Z,[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}]""";;;;;
"2223231248,`validates_associated` does not work with `accepts_nested_attributes_for` for `has_many` associations,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
I have a model like this:;;;;;
```ruby;;;;;
class OrderLine < ApplicationRecord;;;;;
  has_many :order_line_resources;;;;;
  accepts_nested_attributes_for :order_line_resources;;;;;
  validates_associated :order_line_resources;;;;;
end;;;;;
```;;;;;
Which is associated to this model:;;;;;
```ruby;;;;;
class OrderLineResource < ApplicationRecord;;;;;
  belongs_to :order_line;;;;;
  validates :order_line_id, uniqueness: { scope: :resource_id };;;;;
end;;;;;
```;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
However, if I write something like this:;;;;;
```ruby;;;;;
order_line.update!(order_line_resources_attributes: [{ resource_id: 1 }, { resource_id: 1 }]);;;;;
```;;;;;
"I receive an error triggered by my unique index on database level: `ActiveRecord::RecordNotUnique: PG::UniqueViolation: ERROR:  duplicate key value violates unique constraint """"idx_order_line_resources_order_line_id_resource_id""""` but not the validation error I was expecting.";;;;;
;;;;;
### Expected behavior;;;;;
<!-- Tell us what should happen -->;;;;;
I would like to get a validation error from ActiveRecord directly (`ActiveRecord::RecordInvalid`) and not by my pg database.;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
The error is triggered on database level, so my app raises `ActiveRecord::RecordNotUnique: PG::UniqueViolation`;;;;;
;;;;;
### System configuration;;;;;
**Rails version**:;;;;;
7.1.3.2;;;;;
;;;;;
**Ruby version**:;;;;;
3.3.0;;;;;
;;;;;
I hope everything is clear! 🙂 ;;;;;
"Thanks a lot for your help and keep up the good work, Rails team, you're doing an amazing job! ✨ "",2024-04-03T15:24:52Z,2024-04-04T08:40:58Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 126910270, 'node_id': 'MDU6TGFiZWwxMjY5MTAyNzA=', 'url': 'https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps', 'name': 'With reproduction steps', 'color': '009800', 'default': False, 'description': None}]""";;;;;
"2223118248,""Fix """"no anonymous block parameter"""" in ruby 3.1"",""### Motivation / Background";;;;;
;;;;;
On;;;;;
ruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [x86_64-linux-gnu] (e.g. Ubuntu 23.10), simple rails commands fail with;;;;;
`no anonymous block parameter`:;;;;;
;;;;;
```;;;;;
vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:38:in `require': vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:190: no anonymous block parameter (SyntaxError);;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:38:in `<class:AbstractAdapter>';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:31:in `<module:ConnectionAdapters>';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:15:in `<module:ActiveRecord>';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:14:in `<top (required)>';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb:3:in `require';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb:3:in `<top (required)>';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters.rb:100:in `require';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters.rb:100:in `resolve';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/database_configurations/database_config.rb:18:in `adapter_class';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/database_configurations/database_config.rb:26:in `validate!';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract/connection_handler.rb:268:in `resolve_pool_config';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract/connection_handler.rb:116:in `establish_connection';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_handling.rb:53:in `establish_connection';;;;;
        from repro.rb:20:in `<main>';;;;;
;;;;;
```;;;;;
;;;;;
One file repro:;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
require 'bundler';;;;;
Bundler.configure;;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
;;;;;
```;;;;;
;;;;;
This Pull Request has been created to fix this issue.;;;;;
;;;;;
### Detail;;;;;
;;;;;
"I do not know why this triggers """"no anonymous block parameter"""", as the parameter is clearly there.";;;;;
It was introduced when a named parameter was added, without the named parameter the error does not occur.;;;;;
However, converting to a named block parameter fixes this issue.;;;;;
",2024-04-03T14:36:24Z,2024-04-06T19:34:45Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2221347874,ActiveSupport::OrderedOptions#respond_to?(:call) true - breaking check for callable objects,""`ActiveSupport::OrderedOptions` returns `true` for `.respond_to?(:call)`, which breaks various duck-type approach to detect callable objects. Example is pretty popular [carrierwave-aws gem](https://github.com/carrierwaveuploader/carrierwave-aws/?tab=readme-ov-file#usage) which checks if one of the options is callable by checking `respond_to?(:call)`. ";;;;;
There is no reason to return true for any possible key. OpenStruct also returns 'nil` for non-existing keys, but `respond_to?` only returns `true` for existing keys.;;;;;
On the other hand someone did it on purpose, otherwise why implement `respond_to_missing?` as hard-coded `true`, so I'm not sure if there was no higher design here.;;;;;
### Steps to reproduce;;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
```;;;;;
ActiveSupport::OrderedOptions.new.respond_to?(:call) # => true;;;;;
ActiveSupport::InheritableOptions.new.respond_to?(:call) # => true;;;;;
```;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails""""";;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"  # gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
end;;;;;
;;;;;
"require """"active_support""""";;;;;
"require """"active_support/core_ext/object/blank""""";;;;;
"require """"minitest/autorun""""";;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_ordered_options_respond_to;;;;;
    assert ActiveSupport::OrderedOptions.new.update(aaa: 1).respond_to?(:aaa);;;;;
    refute ActiveSupport::OrderedOptions.new.respond_to?(:call);;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
<!-- Tell us what should happen -->;;;;;
ActiveSupport::OrderedOptions.new.respond_to?(:call) # => should return false;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
ActiveSupport::OrderedOptions.new.respond_to?(:call) # => returns true;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.0.8.1;;;;;
**Ruby version**: 3.0.4;;;;;
",2024-04-02T19:59:36Z,2024-04-07T12:45:38Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}]""";;;;;
"2219772792,counter_cache doesn't work with composite PKs (revisited),""In the past I opened issue [#50968](https://github.com/rails/rails/issues/50968) about `counter_cache` not working with composite PKs. The corresponding PR fixed the error, but I still have a case in my codebase where I still get a different error.";;;;;
;;;;;
### Steps to reproduce;;;;;
;;;;;
Unfortunately I was not able to reproduce this with a script, so the script below does NOT reproduce the error. In any case, I am attaching it is because this is my mapping. The difference between my codebase and the script below is that I am running against Postgres, however I don't see how that could play a role.;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :test_background_check_requests, force: true do |t|;;;;;
    t.integer :candidate_id;;;;;
    t.integer :account_id;;;;;
    t.string :name;;;;;
  end;;;;;
;;;;;
  create_table :test_candidates, force: true, primary_key: %i[candidate_id account_id] do |t|;;;;;
    t.integer :candidate_id;;;;;
    t.integer :account_id;;;;;
    t.integer :test_background_check_requests_count;;;;;
    t.string :name;;;;;
  end;;;;;
end;;;;;
;;;;;
class TestCandidate < ActiveRecord::Base;;;;;
  self.primary_key = %i[candidate_id account_id];;;;;
  has_many :test_background_check_requests, query_constraints: [:candidate_id, :account_id], inverse_of: :test_candidate;;;;;
end;;;;;
;;;;;
class TestBackgroundCheckRequest < ActiveRecord::Base;;;;;
  belongs_to :test_candidate, counter_cache: true, query_constraints: [:candidate_id, :account_id];;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_association_stuff;;;;;
"    test_candidate = TestCandidate.create!(candidate_id: 1, account_id: 1, name: """"Foo Barson"""")";;;;;
"    test_candidate.test_background_check_requests.create!(candidate_id: 1, account_id: 1, name: """"Background check request 1"""")";;;;;
;;;;;
    assert_equal 1, TestBackgroundCheckRequest.count;;;;;
    assert_equal 1, test_candidate.reload.test_background_check_requests_count;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
I was expecting the creation to take place correctly, and the counter to increase.;;;;;
;;;;;
### Actual behavior;;;;;
I am getting the following exception:;;;;;
;;;;;
```;;;;;
"Minitest::UnexpectedError: ArgumentError: Expected corresponding value for [""""id"""", """"account_id""""] to be an Array";;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:82:in `block (2 levels) in expand_from_hash';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:81:in `map';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:81:in `block in expand_from_hash';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:79:in `each';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:79:in `flat_map';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:79:in `expand_from_hash';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:25:in `build_from_hash';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/query_methods.rb:1526:in `build_where_clause';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/query_methods.rb:943:in `where!';;;;;
    activerecord (7.1.3.2) lib/active_record/counter_cache.rb:115:in `update_counters';;;;;
    activerecord (7.1.3.2) lib/active_record/locking/optimistic.rb:182:in `update_counters';;;;;
    activerecord (7.1.3.2) lib/active_record/persistence.rb:974:in `increment!';;;;;
    activerecord (7.1.3.2) lib/active_record/locking/optimistic.rb:64:in `increment!';;;;;
    activerecord (7.1.3.2) lib/active_record/callbacks.rb:436:in `increment!';;;;;
    activerecord (7.1.3.2) lib/active_record/associations/has_many_association.rb:100:in `update_counter';;;;;
    activerecord (7.1.3.2) lib/active_record/associations/has_many_association.rb:122:in `delete_or_nullify_all_records';;;;;
    activerecord (7.1.3.2) lib/active_record/associations/collection_association.rb:161:in `delete_all';;;;;
    activerecord (7.1.3.2) lib/active_record/associations/collection_proxy.rb:475:in `delete_all';;;;;
    test/services/candidates/copier_base_test.rb:602:in `block in <class:CopierBaseTest>';;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: ;;;;;
7.1.3.2 (branch `7-1-stable`);;;;;
;;;;;
**Ruby version**: ;;;;;
3.2.2;;;;;
",2024-04-02T07:31:16Z,2024-04-03T22:56:59Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 1071962662, 'node_id': 'MDU6TGFiZWwxMDcxOTYyNjYy', 'url': 'https://api.github.com/repos/rails/rails/labels/more-information-needed', 'name': 'more-information-needed', 'color': 'bfdadc', 'default': False, 'description': 'When reporter needs to provide more information'}]""";;;;;
"2219541327,[Fix #51463] Raise an error when invalid `:on` or `:except` options are given to `#resource` or `#resources`,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Fixes https://github.com/rails/rails/issues/51463.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Raises an `ArgumentError` when a `ActionDispatch::Routing::Mapper::Resources::Resource` is initalized with `:on` or `:except` options that aren't default (index, create, new, show, update, and destroy) actions .;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
See my comment below as to why this seems like more changes than it needs to be.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-02T04:30:58Z,2024-04-04T09:38:53Z,[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}]""";;;;;
"2219534455,`#resource` and `#resources` fail quietly and succeed quietly when invalid arguments are passed to `:only` and `:except` options respectively,""This came up when pairing with a dev who is newish to Rails. They assumed that passing a custom action argument to `:only` when using `#resources` would auto-magically define a route for it with some defaults. Reading the examples in the documentation for these methods, it's not clear (especially to beginners) what all the accepted arguments for these options are, [there are only examples using default actions](https://www.rubydoc.info/docs/rails/ActionDispatch%2FRouting%2FMapper%2FResources:resources).";;;;;
;;;;;
I think it would be beneficial if an error was raised if invalid arguments are passed in.;;;;;
;;;;;
### Steps to reproduce;;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
end;;;;;
;;;;;
"require """"action_controller/railtie""""";;;;;
;;;;;
class TestApp < Rails::Application;;;;;
  config.root = __dir__;;;;;
"  config.hosts << """"example.org""""";;;;;
"  config.secret_key_base = """"secret_key_base""""";;;;;
;;;;;
  config.logger = Logger.new($stdout);;;;;
  Rails.logger  = config.logger;;;;;
end;;;;;
;;;;;
"require """"minitest/autorun""""";;;;;
"require """"rack/test""""";;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  include Rack::Test::Methods;;;;;
;;;;;
  def test_invalid_resources_only_option;;;;;
    assert_raises(ArgumentError) do # ❌ fails quietly, no routes generated;;;;;
      app.routes.draw do;;;;;
        resources :posts, only: :foo;;;;;
      end;;;;;
;;;;;
      # => routes: [];;;;;
"      Rails.logger.info(""""routes: #{app.routes.routes.map { |r| r.defaults[:action] }}"""")";;;;;
    end;;;;;
  end;;;;;
;;;;;
  def test_invalid_resources_except_option;;;;;
    assert_raises(ArgumentError) do # ❌ succeeds quietly, all default routes generated;;;;;
      app.routes.draw do;;;;;
        resources :posts, except: :foo;;;;;
      end;;;;;
;;;;;
"      # => routes: [""""index"""", """"create"""", """"new"""", """"edit"""", """"show"""", """"update"""", """"update"""", """"destroy""""]";;;;;
"      Rails.logger.info(""""routes: #{app.routes.routes.map { |r| r.defaults[:action] }}"""")";;;;;
    end;;;;;
  end;;;;;
;;;;;
  private;;;;;
    def app;;;;;
      Rails.application;;;;;
    end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
<!-- Tell us what should happen -->;;;;;
;;;;;
Passing invalid options to `:only` or `:except` should raise an error with an informative message.;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
;;;;;
Passing invalid options to `:only` fails quietly and no routes are generated.;;;;;
Passing invalid arguments to `:except` succeeds quietly and all default routes are generated (index, create, new, show, update, and destroy).;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: Edge;;;;;
;;;;;
"**Ruby version**: 3.3.0"",2024-04-02T04:24:01Z,2024-04-02T11:17:11Z,[]";;;;;
"2219354900,Fix inline habtm fixtures for tables with composite primary keys,Fixes https://github.com/rails/rails/issues/51461.,2024-04-02T00:43:32Z,2024-04-02T00:43:37Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2218168973,Composite PKs break fixture loading for many-to-many associations,""### Steps to reproduce";;;;;
;;;;;
Copy the following fixture files in a directory:;;;;;
;;;;;
**posts.yml**;;;;;
```yaml;;;;;
one:;;;;;
"    title: """"My first post""""";;;;;
    account_id: 1;;;;;
    labels: one, two;;;;;
```;;;;;
**labels.yml**;;;;;
```yaml;;;;;
one:;;;;;
"    text: """"Label 1""""";;;;;
two:;;;;;
"    text: """"Label 2""""";;;;;
```;;;;;
;;;;;
and use them here:;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails""""";;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"  # gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
;;;;;
  create_table :posts, force: true, primary_key: %i[id account_id] do |t|;;;;;
    t.integer :id;;;;;
    t.integer :account_id;;;;;
    t.string :title;;;;;
  end;;;;;
;;;;;
  create_table :posts_labels, force: true do |t|;;;;;
    t.integer :post_id;;;;;
    t.integer :account_id;;;;;
    t.references :label, foreign_key: true;;;;;
  end;;;;;
;;;;;
  create_table :labels, force: true do |t|;;;;;
    t.string :text;;;;;
  end;;;;;
end;;;;;
;;;;;
class Post < ActiveRecord::Base;;;;;
  self.primary_key = %i[id account_id];;;;;
  has_many :posts_labels;;;;;
  has_many :labels, through: :posts_labels;;;;;
end;;;;;
;;;;;
class PostsLabel < ActiveRecord::Base;;;;;
  belongs_to :post, query_constraints: [:post_id, :account_id];;;;;
  belongs_to :label;;;;;
end;;;;;
;;;;;
class Label < ActiveRecord::Base;;;;;
  has_many :posts_labels;;;;;
  has_many :posts, through: :posts_labels;;;;;
end;;;;;
;;;;;
# Load the fixtures into the database (update the directory);;;;;
"ActiveRecord::FixtureSet.create_fixtures(""""/fixtures-directory/"""", %w[posts labels])";;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_association_stuff;;;;;
    assert_equal 1, Post.count;;;;;
    assert_equal 2, Label.count;;;;;
    assert_equal 2, Post.first.labels.count # Fails here;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
According to the documentation of [ActiveRecord::FixtureSet](https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html), the fixture for the intermediate many-to-many table [can be skipped](https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html#:~:text=Let%E2%80%99s%20make%20the%20HABTM%20fixture%20go%20away.).;;;;;
;;;;;
### Actual behavior;;;;;
The fixtures are not loaded correctly. These are the sql statements for the fixtures (notice the `null`):;;;;;
;;;;;
```sql;;;;;
"DELETE FROM """"posts""""";;;;;
"DELETE FROM """"posts_labels""""";;;;;
"DELETE FROM """"labels""""";;;;;
"INSERT INTO """"posts"""" (""""id"""", """"account_id"""", """"title"""") VALUES (980190962, 1, 'My first post')";;;;;
"INSERT INTO """"posts_labels"""" (""""post_id"""", """"label_id"""") VALUES (NULL, 980190962)";;;;;
"INSERT INTO """"posts_labels"""" (""""post_id"""", """"label_id"""") VALUES (NULL, 298486374)";;;;;
"INSERT INTO """"labels"""" (""""id"""", """"text"""") VALUES (980190962, 'Label 1')";;;;;
"INSERT INTO """"labels"""" (""""id"""", """"text"""") VALUES (298486374, 'Label 2')";;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: `7.1.3.2`;;;;;
;;;;;
**Ruby version**: `3.2.2`;;;;;
",2024-04-01T12:30:45Z,2024-04-02T06:41:43Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 126910270, 'node_id': 'MDU6TGFiZWwxMjY5MTAyNzA=', 'url': 'https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps', 'name': 'With reproduction steps', 'color': '009800', 'default': False, 'description': None}]""";;;;;
"2217292282,New print styles and generator to add to build,""";;;;;
"<img width=""""958"""" alt=""""Screenshot 2024-03-31 at 8 43 35 PM"""" src=""""https://github.com/rails/rails/assets/2223/995815e6-1d34-4550-b49c-c7a78e213cc1"""">";;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
This updates print CSS to be more inline with the overall style. The sidebar is inlined (same as mobile), and content is 100%. Previous code in the launch from boilerplate has been struck or integrated better.;;;;;
;;;;;
* Links show in text after the original link text;;;;;
* Border line around code and copy button are removed;;;;;
* Print is now generated from SCSS to CSS via the generator that builds the other CSS files ;;;;;
;;;;;
### Additional information;;;;;
;;;;;
Some browsers will override backgrounds on print;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-01T00:58:28Z,2024-04-01T14:57:32Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2217108029,Add `touch` option to `#update_columns` and `#update_column` methods,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
I've created this Pull Request because not all ActiveRecord persistence methods affect timestamps or have a touch option. This can be problematic, especially when there is some ETL processing that relies on the `updated_at` timestamps instead of copying the whole table. For instance, if someone uses `#update_columns` for performance reasons, it may result in lost updates. This is particularly an issue for `#update_column`. If a user wants to keep timestamps current, they have to explicitly call the `#touch` method after using `#update_column`.;;;;;
;;;;;
Examples:;;;;;
```ruby;;;;;
# we don't want to perform any callbacks or validations here so use #update_columns;;;;;
current_user.update_columns(;;;;;
  last_ip: request.remote_ip,;;;;;
  updated_at: Time.current # but we still want to keep track of the last changes, so have to provide a timestamp explicitly;;;;;
);;;;;
```;;;;;
;;;;;
```ruby;;;;;
current_user.update_column(:last_ip, request.remote_ip);;;;;
current_user.touch;;;;;
```;;;;;
;;;;;
Rails discussion: https://discuss.rubyonrails.org/t/proposal-add-touch-option-for-update-columns-update-column/85388;;;;;
;;;;;
### Detail;;;;;
;;;;;
This PR adds a `touch` option to the `#update_columns` and `#update_column` methods.;;;;;
The option allows to update `updated_at`/`updated_on` attributes with ;;;;;
;;;;;
```ruby;;;;;
    person.update_columns(name: 'John Doe', touch: true);;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-31T17:50:27Z,2024-04-03T09:44:15Z,[{'id': 107190, 'node_id': 'MDU6TGFiZWwxMDcxOTA=', 'url': 'https://api.github.com/repos/rails/rails/labels/activemodel', 'name': 'activemodel', 'color': '00E5FF', 'default': False, 'description': None}, {'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2216178575,Action Cable Guide - add Transmit method,""### Motivation / Background";;;;;
;;;;;
I was exploring making use of Action Cables for a project I was working on, and didn't find any mention of the `transmit` method of channels, which allows you to transmit data to the specific subscriber that initiated the interaction.;;;;;
;;;;;
As someone relatively new to Rails and entirely new to Action Cables I spun my wheels for a bit trying to figure out how interactions like this should be handled, and I was surprised to see the method wasn't even mentioned in the guide on Action Cables.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Documentation PR;;;;;
;;;;;
This Pull Request updates the Action Cable guide to add information on the existence of the `transmit` method, allowing channels to send data to a specific subscriber.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-30T03:23:34Z,2024-03-31T05:19:57Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2215236766,Postgresql date type is not properly typecasted when using direct SQL queries like select_all,""When using direct SQL query, the date is not properly typecasted on Postgresql:";;;;;
```;;;;;
"> ActiveRecord::Base.connection.select_all(""""  SELECT '2024-01-01'::date """")";;;;;
   (0.5ms)    SELECT '2024-01-01'::date;;;;;
  ↳ config/initializers/local.rb:52:in `sa';;;;;
=> #<ActiveRecord::Result:0x0000000115516010;;;;;
 @column_types=;;;;;
  {0=>#<ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Date:0x0000000116a5acf0 @limit=nil, @precision=nil, @scale=nil, @timezone=nil>,;;;;;
"   """"date""""=>#<ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Date:0x0000000116a5acf0 @limit=nil, @precision=nil, @scale=nil, @timezone=nil>},";;;;;
" @columns=[""""date""""],";;;;;
 @hash_rows=nil,;;;;;
" @rows=[[""""2024-01-01""""]]>";;;;;
```;;;;;
;;;;;
### Notes;;;;;
;;;;;
* The column type seems to be recognized correctly, but typecast is not applied;;;;;
* SQLite seems to generate even worth result like `2024` as integer.;;;;;
* Timestamp doesn't have this problem;;;;;
;;;;;
### Reproduce;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
require 'bundler/inline';;;;;
;;;;;
gemfile(true) do;;;;;
  source 'https://rubygems.org';;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
  gem 'rails';;;;;
;;;;;
  gem 'pg';;;;;
  # gem 'sqlite3';;;;;
end;;;;;
;;;;;
require 'active_record';;;;;
require 'minitest/autorun';;;;;
require 'logger';;;;;
;;;;;
# `CREATE DATABASE rails_51428_test;`;;;;
ActiveRecord::Base.establish_connection(adapter: 'postgresql', database: 'rails_test');;;;;
# ActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:');;;;;
ActiveRecord::Base.logger = Logger.new($stdout);;;;;
;;;;;
;;;;;
class DateTest < Minitest::Test;;;;;
  def test_stuff;;;;;
    value = ActiveRecord::Base.connection.select_value(;;;;;
"      """"select cast('2024-01-01' as date)""""";;;;;
    );;;;;
    assert_equal Date.new(2024, 01, 01), value;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
```;;;;;
Expected: Mon, 01 Jan 2024;;;;;
"  Actual: """"2024-01-01""""";;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3;;;;;
;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-29T12:13:51Z,2024-04-05T17:17:41Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 70310659, 'node_id': 'MDU6TGFiZWw3MDMxMDY1OQ==', 'url': 'https://api.github.com/repos/rails/rails/labels/PostgreSQL', 'name': 'PostgreSQL', 'color': 'fbca04', 'default': False, 'description': None}]""";;;;;
"2214734569,Fix an error for `apply_rubocop_autocorrect_after_generate!` with `--pretend`,""## Motivation / Background";;;;;
;;;;;
An issue was identified where an error occurs when executing `apply_rubocop_autocorrect_after_generate!` with `--pretend` option, according to feedback from https://github.com/rubocop/rubocop-rails/pull/1263.;;;;;
;;;;;
## Details;;;;;
;;;;;
This PR fixes the following error when executing `apply_rubocop_autocorrect_after_generate!` with `--pretend` option:;;;;;
;;;;;
```console;;;;;
$ bin/rails g migration create_users -p;;;;;
```;;;;;
;;;;;
### Before;;;;;
;;;;;
An `Errno::ENOENT` error occurs:;;;;;
;;;;;
```console;;;;;
invoke  active_record;;;;;
create    db/migrate/20240329060627_create_users.rb;;;;;
/Users/koic/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/bundler/gems/rails-8e46af8c9396/railties/lib/rails/configuration.rb:138:in;;;;;
`system': No such file or directory - bin/rubocop (Errno::ENOENT);;;;;
```;;;;;
;;;;;
### After;;;;;
;;;;;
No errors.;;;;;
;;;;;
## Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-29T06:17:20Z,2024-03-30T10:23:42Z,[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2214519753,Remove node_modules from the final image,,2024-03-29T02:55:34Z,2024-04-01T03:46:51Z,""[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2214042050,Emit deprecation warning about inverse_of inference only for valid reflections,""### Motivation / Background";;;;;
;;;;;
This is a small follow-up to https://github.com/rails/rails/pull/50883. ;;;;;
;;;;;
As we went through all deprecation warnings while we run Rails edge with;;;;;
```ruby;;;;;
config.active_record.automatically_invert_plural_associations = false;;;;;
```;;;;;
we realised that we had warnings for an inferred reflection that would be wrong to infer. Digging deeper into whether this meant that enabling `automatically_invert_plural_associations` would actually mean we'd have completely wrong values in the collection of the inferred association, we realised that no, the reflection was correctly not inferred. However, the warning was emitted regardless. ;;;;;
;;;;;
This happens because the deprecation warning is emitted without checking whether the found `reflection` is valid. The warning says that the inverse association could have been automatically inferred but wasn't because `automatically_invert_plural_associations` is disabled. However, this is not true, because later on, when we check whether the reflection is valid, we see it's not, and end up returning `nil`.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This pull request just adds the `valid_inverse_reflection?(reflection)` condition to determine whether the deprecation warning needs to happen. That already checks that `reflection` is truthy. ;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-28T20:11:38Z,2024-03-29T06:35:20Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2213953232,Make it possible to opt-out of sending Link header in `preload_link_tag`,""This commit adds a `preload_links_header` option to `preload_link_tag` to disable sending of the Link header in the HTTP response.";;;;;
;;;;;
Currently `ActionView::Helpers::AssetTagHelper.preload_links_header` only controls whether `javascript_include_tag` and `stylesheet_link_tag` send the Link header, but there is no way to control the behavior of `preload_link_tag`. We could just check that variable, but existing applications might be relying on `preload_link_tag` to add the header. Users also might want control over this on a per call basis.;;;;;
;;;;;
Closes #51436;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-28T19:18:46Z,2024-03-28T21:03:36Z,[{'id': 3666649, 'node_id': 'MDU6TGFiZWwzNjY2NjQ5', 'url': 'https://api.github.com/repos/rails/rails/labels/actionview', 'name': 'actionview', 'color': 'd7e102', 'default': False, 'description': None}]""";;;;;
"2213933174,Bump mysql2 to fix build error with mysql-client 8.3,""### Motivation / Background";;;;;
;;;;;
This fixes bundle install when using the latest version of mysql-client, 8.3;;;;;
;;;;;
### Detail;;;;;
;;;;;
<details>;;;;;
<summary>Sample installation log</summary>;;;;;
;;;;;
```;;;;;
bundle install;;;;;
Fetching gem metadata from https://rubygems.org/.........;;;;;
Installing mysql2 0.5.5 with native extensions;;;;;
Gem::Ext::BuildError: ERROR: Failed to build gem native extension.;;;;;
;;;;;
    current directory: /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/mysql2-0.5.5/ext/mysql2;;;;;
/Users/josh/.rbenv/versions/3.3.0/bin/ruby extconf.rb;;;;;
checking for rb_absint_size()... yes;;;;;
checking for rb_absint_singlebit_p()... yes;;;;;
checking for rb_gc_mark_movable()... yes;;;;;
checking for rb_wait_for_single_fd()... yes;;;;;
checking for rb_enc_interned_str() in ruby.h... yes;;;;;
-----;;;;;
Using --with-openssl-dir=/opt/homebrew/opt/openssl@3;;;;;
-----;;;;;
-----;;;;;
Using mysql_config at /opt/homebrew/bin/mysql_config;;;;;
-----;;;;;
checking for mysql.h... yes;;;;;
checking for errmsg.h... yes;;;;;
checking for SSL_MODE_DISABLED in mysql.h... yes;;;;;
checking for SSL_MODE_PREFERRED in mysql.h... yes;;;;;
checking for SSL_MODE_REQUIRED in mysql.h... yes;;;;;
checking for SSL_MODE_VERIFY_CA in mysql.h... yes;;;;;
checking for SSL_MODE_VERIFY_IDENTITY in mysql.h... yes;;;;;
checking for MYSQL.net.vio in mysql.h... yes;;;;;
checking for MYSQL.net.pvio in mysql.h... no;;;;;
checking for MYSQL_DEFAULT_AUTH in mysql.h... yes;;;;;
checking for MYSQL_ENABLE_CLEARTEXT_PLUGIN in mysql.h... yes;;;;;
checking for SERVER_QUERY_NO_GOOD_INDEX_USED in mysql.h... yes;;;;;
checking for SERVER_QUERY_NO_INDEX_USED in mysql.h... yes;;;;;
checking for SERVER_QUERY_WAS_SLOW in mysql.h... yes;;;;;
checking for MYSQL_OPTION_MULTI_STATEMENTS_ON in mysql.h... yes;;;;;
checking for MYSQL_OPTION_MULTI_STATEMENTS_OFF in mysql.h... yes;;;;;
checking for my_bool in mysql.h... no;;;;;
-----;;;;;
Don't know how to set rpath on your system, if MySQL libraries are not in path mysql2 may not load;;;;;
-----;;;;;
-----;;;;;
Setting libpath to /opt/homebrew/Cellar/mysql/8.3.0/lib;;;;;
-----;;;;;
creating Makefile;;;;;
;;;;;
current directory: /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/mysql2-0.5.5/ext/mysql2;;;;;
make DESTDIR\= sitearchdir\=./.gem.20240328-28015-xyw7df sitelibdir\=./.gem.20240328-28015-xyw7df clean;;;;;
;;;;;
current directory: /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/mysql2-0.5.5/ext/mysql2;;;;;
make DESTDIR\= sitearchdir\=./.gem.20240328-28015-xyw7df sitelibdir\=./.gem.20240328-28015-xyw7df;;;;;
compiling client.c;;;;;
In file included from client.c:15:;;;;;
./mysql_enc_name_to_ruby.h:43:1: warning: a function definition without a prototype is deprecated in all versions of C and is;;;;;
not supported in C2x [-Wdeprecated-non-prototype];;;;;
mysql2_mysql_enc_name_to_rb_hash (str, len);;;;;
^;;;;;
./mysql_enc_name_to_ruby.h:86:1: warning: a function definition without a prototype is deprecated in all versions of C and is;;;;;
not supported in C2x [-Wdeprecated-non-prototype];;;;;
mysql2_mysql_enc_name_to_rb (str, len);;;;;
^;;;;;
client.c:1438:3: error: call to undeclared function 'mysql_ssl_set'; ISO C99 and later do not support implicit function;;;;
declarations [-Wimplicit-function-declaration];;;;;
  mysql_ssl_set(wrapper->client,;;;;;
  ^;;;;;
client.c:1438:3: note: did you mean 'mysql_close'?;;;;;
/opt/homebrew/Cellar/mysql/8.3.0/include/mysql/mysql.h:797:14: note: 'mysql_close' declared here;;;;;
void STDCALL mysql_close(MYSQL *sock);;;;;
             ^;;;;;
2 warnings and 1 error generated.;;;;;
make: *** [client.o] Error 1;;;;;
;;;;;
make failed, exit code 2;;;;;
;;;;;
Gem files will remain installed in /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/mysql2-0.5.5 for inspection.;;;;;
Results logged to;;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/extensions/arm64-darwin-23/3.3.0/mysql2-0.5.5/gem_make.out;;;;;
;;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:125:in `run';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:51:in `block in make';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:43:in `each';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:43:in `make';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/ext_conf_builder.rb:42:in `build';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:193:in `build_extension';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:227:in `block in build_extensions';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:224:in `each';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:224:in `build_extensions';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/installer.rb:852:in `build_extensions';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/rubygems_gem_installer.rb:76:in;;;;;
`build_extensions';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/rubygems_gem_installer.rb:28:in;;;;;
`install';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/source/rubygems.rb:205:in `install';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/installer/gem_installer.rb:54:in;;;;;
`install';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/installer/gem_installer.rb:16:in;;;;;
`install_from_spec';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/installer/parallel_installer.rb:132:in;;;;;
`do_install';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/installer/parallel_installer.rb:123:in;;;;;
`block in worker_pool';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/worker.rb:62:in `apply_func';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/worker.rb:57:in `block in;;;;;
process_queue';;;;;
  <internal:kernel>:187:in `loop';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/worker.rb:54:in `process_queue';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/worker.rb:90:in `block (2 levels) in;;;;;
create_threads';;;;;
;;;;;
An error occurred while installing mysql2 (0.5.5), and Bundler cannot continue.;;;;;
;;;;;
In Gemfile:;;;;;
  mysql2;;;;;
```;;;;;
;;;;;
</details>;;;;;
;;;;;
### Additional information;;;;;
;;;;;
- [GitHub Issue in mysql2](https://github.com/brianmario/mysql2/issues/1346);;;;;
- [0.5.6 release notes listing the fix](https://github.com/brianmario/mysql2/releases/tag/0.5.6);;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] n/a - Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] n/a - CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-28T19:05:52Z,2024-03-28T19:55:23Z,[]
2213880505,Disable send_preload_links_header outright,### Steps to reproduce";;;;;
;;;;;
Suppose you have a partial like this:;;;;;
;;;;;
```haml;;;;;
= cache([ActionController::Base.asset_host], expires_in: 1.minute) do;;;;;
    = preload_link_tag(path_to_stylesheet('application');;;;;
```;;;;;
;;;;;
If the partial is not cached, then `preload_link_tag` will call `send_preload_links_header`, which modifies the `Link` HTTP header.;;;;;
;;;;;
However, if the partial is cached, then the `Link` HTTP header is not sent.;;;;;
;;;;;
This is a surprising side effect of caching `preload_link_tag`. I was surprised that `send_preload_links_header` is even called in the first place.;;;;;
;;;;;
https://github.com/rails/rails/pull/48405 lowered the max header size from 8K to 1000 bytes, but I think Rails should go farther than that: provide an option to disable this sending altogether, perhaps as an argument to `preload_link_tag`. For example:;;;;;
;;;;;
```diff;;;;;
diff --git a/actionview/lib/action_view/helpers/asset_tag_helper.rb b/actionview/lib/action_view/helpers/asset_tag_helper.rb;;;;;
index 11528eb33d..0dd3ff517a 100644;;;;;
#NOM?;;;;;
#NOM?;;;;;
@@ -325,6 +325,7 @@ def preload_link_tag(source, options = {});;;;;
"         crossorigin = """"anonymous"""" if crossorigin == true || (crossorigin.blank? && as_type == """"font"""")";;;;;
         integrity = options[:integrity];;;;;
         nopush = options.delete(:nopush) || false;;;;;
+        send_link_header = options.key?(:preload_links_header) ? options.delete(:preload_links_header) : true;;;;;
"         rel = mime_type == """"module"""" ? """"modulepreload"""" : """"preload""""";;;;;
 ;;;;;
         link_tag = tag.link(**{;;;;;
@@ -341,7 +342,7 @@ def preload_link_tag(source, options = {});;;;;
"         preload_link += """"";" integrity=#{integrity}"""" if integrity";;;;
"         preload_link += """"";" nopush"""" if nopush";;;;
 ;;;;;
-        send_preload_links_header([preload_link]);;;;;
+        send_preload_links_header([preload_link]) if send_link_header;;;;;
 ;;;;;
         link_tag;;;;;
       end;;;;;
diff --git a/actionview/test/template/asset_tag_helper_test.rb b/actionview/test/template/asset_tag_helper_test.rb;;;;;
index f0c8a10f57..cd6cdd8925 100644;;;;;
#NOM?;;;;;
#NOM?;;;;;
@@ -628,6 +628,13 @@ def test_should_set_preload_early_hints_with_rel_modulepreload;;;;;
     end;;;;;
   end;;;;;
 ;;;;;
#NOM?;;;;;
#NOM?;;;;;
"+      preload_link_tag(""""http://example.com/all.js"""", type: """"module"""", preload_links_header: false)";;;;;
"+      assert_nil @response.headers[""""Link""""]";;;;;
#NOM?;;;;;
#NOM?;;;;;
+;;;;;
   def test_should_set_preload_links_with_integrity_hashes;;;;;
     with_preload_links_header do;;;;;
"       stylesheet_link_tag(""""http://example.com/style.css"""", integrity: """"sha256-AbpHGcgLb+kRsJGnwFEktk7uzpZOCcBY74+YBdrKVGs"""")";;;;;
```;;;;;
;;;;;
",2024-03-28T18:33:40Z,2024-03-28T21:07:42Z,[{'id': 3666649, 'node_id': 'MDU6TGFiZWwzNjY2NjQ5', 'url': 'https://api.github.com/repos/rails/rails/labels/actionview', 'name': 'actionview', 'color': 'd7e102', 'default': False, 'description': None}, {'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}]""";;;;;
"2213548177,[RF-DOCS] Action View Overview Guide [ci-skip],""## Motivation / Background";;;;;
;;;;;
This Pull Request is for updating and improving the Action View Overview guide. ;;;;;
;;;;;
Note: This guide was intertwined with a different guide (Layouts and Rendering) with duplicate content and overlapping concepts. A follow-on PR will focus on the other guide and then we will do a pass over both guides together.;;;;;
;;;;;
## Details;;;;;
;;;;;
#NOM?;;;;;
#NOM?;;;;;
#NOM?;;;;;
#NOM?;;;;;
;;;;;
## Testing;;;;;
;;;;;
- [x] Run `guides:generate`;;;;;
- [x] Run `guides:lint` ;;;;;
"- [x] Run rubocop on code samples"",2024-03-28T15:41:52Z,2024-04-06T01:04:57Z,""[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2213456024,[Bug][ActiveRecord] #count(:all) on grouped query should clear ORDER BY if it clears SELECT,""### Steps to reproduce";;;;;
;;;;;
"Build a query that uses `.count(:all)` and `.group(...)` with a custom `.select(""""... AS alias"""")` and a `.order(:alias)`";;;;;
;;;;;
It seems ActiveRecord when calling `.count(:all)` will remove from the SELECT the `alias` column and everything else but the primary key, however it keeps the `ORDER BY alias`. To execute `COUNT(...)`, the `ORDER BY` is kind of irrelevant, it should probably be removed.;;;;;
;;;;;
ActiveRecord seems to already clear ORDER BY for some specific scenario as seen here: https://github.com/rails/rails/blob/main/activerecord/lib/active_record/relation/calculations.rb#L240 however in my scenario, the `has_include(...)` returns false and goes straight to `perform_calculation(operation, column_name)`;;;;;
;;;;;
Here https://github.com/rails/rails/blob/main/activerecord/lib/active_record/relation/calculations.rb#L536 select values are redefined, maybe we should simply add;;;;;
;;;;;
```;;;;;
relation.order_values = [];;;;;
```;;;;;
;;;;;
;;;;;
**Test code**;;;;;
;;;;;
Note: It ain't specific to Postgres. Error is present with SQLite too.;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
# Toggle this to test with SQLite;;;;;
use_postgres = false;;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", """"7.1.3.2""""";;;;;
;;;;;
"  gem """"database_cleaner""""";;;;;
;;;;;
  if use_postgres;;;;;
"    gem """"pg""""";;;;;
  else ;;;;;
"    gem """"sqlite3""""";;;;;
  end;;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
"require """"database_cleaner""""";;;;;
;;;;;
if use_postgres;;;;;
"  ActiveRecord::Base.establish_connection(adapter: """"postgresql"""", host: """"localhost"""", database: """"dev"""", username: """"dev"""",";;;;;
"  password: """"dev"""", port: 5437)";;;;;
else;;;;;
"  ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
end;;;;;
;;;;;
ActiveRecord::Base.logger = Logger.new($stdout);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :conversations, force: true do |t| # rubocop:disable Style/SymbolProc;;;;;
    t.timestamps;;;;;
  end;;;;;
;;;;;
  create_table :messages, force: true do |t|;;;;;
    t.references :conversation;;;;;
    t.timestamps;;;;;
  end;;;;;
end;;;;;
;;;;;
class Conversation < ActiveRecord::Base # rubocop:disable Rails/ApplicationRecord;;;;;
  has_many :messages, dependent: :destroy;;;;;
end;;;;;
;;;;;
class Message < ActiveRecord::Base # rubocop:disable Rails/ApplicationRecord;;;;;
  belongs_to :conversation;;;;;
end;;;;;
;;;;;
DatabaseCleaner.strategy = :truncation;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  class SuccessException < StandardError; end;;;;
;;;;;
  def setup;;;;;
    DatabaseCleaner.start;;;;;
    Conversation.create!.tap do |conversation|;;;;;
      Message.create!(conversation: conversation);;;;;
      Message.create!(conversation: conversation);;;;;
      Message.create!(conversation: conversation);;;;;
    end;;;;;
  end;;;;;
  ;;;;;
  def teardown;;;;;
    DatabaseCleaner.clean;;;;;
  end;;;;;
;;;;;
  def assert_not_raise(&block);;;;;
    assert_raises(SuccessException) do;;;;;
      block.call;;;;;
      raise SuccessException;;;;;
    end;;;;;
  end;;;;;
;;;;;
  def sql_now;;;;;
"    if ActiveRecord::Base.connection_db_config.adapter == """"sqlite3""""";;;;;
"      """"DATE('NOW')""""";;;;;
    else;;;;;
"      """"NOW()""""";;;;;
    end;;;;;
  end;;;;;
;;;;;
  def base_query;;;;;
    Conversation;;;;;
            .select(;;;;;
"              """"conversations.*"""",";;;;;
"              """"COUNT(messages.id) AS messages_count"""",";;;;;
"              """"#{sql_now} AS last_activity_at""""";;;;;
            );;;;;
            .left_joins(:messages);;;;;
            .group(:id);;;;;
  end;;;;;
;;;;;
  def test_it_should_work_with_aliased_order_by;;;;;
"    query = base_query.order(""""last_activity_at DESC"""")";;;;;
;;;;;
    assert_not_raise { query.count(:all) };;;;;
  end;;;;;
;;;;;
  def test_it_demonstrates_that_non_aliased_order_by_work;;;;;
"    query = base_query.order(Arel.sql(""""#{sql_now} DESC""""))";;;;;
;;;;;
;;;;;
    assert_not_raise { query.count(:all) };;;;;
  end;;;;;
;;;;;
  def test_without_order_by_it_always_work;;;;;
"    query = base_query # .order(""""last_activity_at DESC"""")";;;;;
;;;;;
    assert_not_raise { query.count(:all) };;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
This query should work;;;;;
;;;;;
```ruby;;;;;
    Conversation;;;;;
            .select(;;;;;
"              """"conversations.*"""",";;;;;
"              """"COUNT(messages.id) AS messages_count"""",";;;;;
"              """"NOW() AS last_activity_at""""";;;;;
            );;;;;
            .left_joins(:messages);;;;;
            .order(:last_activity_at);;;;;
            .group(:id);;;;;
```;;;;;
;;;;;
Expected query;;;;;
;;;;;
```;;;;;
SELECT ;;;;;
"  COUNT(*) AS """"count_all"""", ";;;;;
"  """"conversations"""".""""id"""" AS """"conversations_id"""" ";;;;;
"FROM """"conversations"""" ";;;;;
"LEFT OUTER JOIN """"messages"""" ON """"messages"""".""""conversation_id"""" = """"conversations"""".""""id"""" ";;;;;
"GROUP BY """"conversations"""".""""id""""";;;;;
;;;;;
#NOM?;;;;;
#NOM?;;;;;
```;;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
```;;;;;
"ActiveRecord::StatementInvalid <""""PG::UndefinedColumn: ERROR:  column \""""last_activity_at\"""" does not exist";;;;;
;;;;;
SELECT ;;;;;
"  COUNT(*) AS """"count_all"""", ";;;;;
"  """"conversations"""".""""id"""" AS """"conversations_id"""" ";;;;;
"FROM """"conversations"""" ";;;;;
"LEFT OUTER JOIN """"messages"""" ON """"messages"""".""""conversation_id"""" = """"conversations"""".""""id"""" ";;;;;
"GROUP BY """"conversations"""".""""id""""";;;;;
ORDER BY last_activity_at DESC;;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.0.0;;;;;
",2024-03-28T14:59:27Z,2024-04-02T15:15:35Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2210141203,[RF-DOCS] Action View Helpers Documentation [ci-skip],""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
This Pull Request has been created to provide clarity to the Action View Helpers guide.;;;;;
;;;;;
### Detail;;;;;
;;;;;
;;;;;
Here are some notes on what has changed:;;;;;
;;;;;
Some notes:;;;;;
;;;;;
- AssetTagHelper talks about a bunch of *_tag helpers, but also some of them mention *_url and *_path helpers. (which live in AssetUrlHelper). Those are helpful to know, but less frequently used I think. It's also incomplete (some mention it, others don't, *_tag helpers have their *_url/*_path counterparts, or use the basic `asset_path/url`.) I don't think it's worth expanding with all these variants, I'd rather remove the individual ones, and if we want to mention, we can maybe bundle them together within the same subsection instead, or just as examples of the related *_tag sections.;;;;;
- The cache helper could use some more info. I don't think it's worth linking to the Fragments API, but rather to the [fragments caching piece of the caching guide](https://edgeguides.rubyonrails.org/caching_with_rails.html#fragment-caching), where it goes into more details. The example could also be expanded to show something that at least gets a record as an example too.;;;;;
- `content_for` could perhaps benefit from showing `content_for?` in the example, somehow.;;;;;
- We do not want to show any form helpers here, just link to the specific guide, but we can maybe make that paragraph clearer.;;;;;
- `escape_javascript` could use an example (not the one that's on the API as it seems very jquery-related... maybe some other example of embedding some Ruby in JS or something);;;;;
- mention of `rails-html-sanitizer` could be linked.;;;;;
"- """"NB: The output may still contain unescaped '<', '>', '&' characters and confuse browsers."""" should be a note?";;;;;
- UrlHelper could have a few extra items like `current_page?` and `mail_to`, which can be commonly used. (no need to show each and every method, just the most common ones);;;;;
- CsrfHelper seems unnecessary to explain here. (we don't add CspHelper for instance... not sure we need to get into those, can probably skip them.);;;;;
- We could have a section on `TextHelper` mentioning things like `simple_format`, `truncate`, `excerpt`, maybe some other(s). (again, not everything, just the most commonly used ones);;;;;
- We could have a section on `TagHelper` mentioning `content_tag` and `tag`.;;;;;
;;;;;
- Updated the 'what you will know section';;;;;
#NOM?;;;;;
#NOM?;;;;;
#NOM?;;;;;
#NOM?;;;;;
- Added more clarity to `capture` and `content_for`;;;;;
#NOM?;;;;;
#NOM?;;;;;
#NOM?;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-27T08:14:18Z,2024-04-04T09:42:14Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2209113208,Fix PostgreSQL `include` indexes with keyword column names,Fixes #51428.,2024-03-26T19:13:53Z,2024-03-27T16:01:54Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2208982733,Problem with field named timestamp and index with include,""### Steps to reproduce";;;;;
;;;;;
"When you have a field named """"timestamp"""" and want to add an index including this field, the schema is generated with escape characters, making it impossible to run the load schema";;;;;
;;;;;
```ruby;;;;;
class ChangeIndexStatusToEvent < ActiveRecord::Migration[7.1];;;;;
  def change;;;;;
    add_index :events, [:status, :name, :app_id], name: 'index_events_on_status_name_app_id', include: [:id, :timestamp];;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
This schema is generated when running the migrate above:;;;;;
;;;;;
```ruby;;;;;
"t.index [""""status"""", """"name"""", """"app_id"""", """"timestamp""""], name: """"index_events_on_status_name_app_id"""", include: [""""id"""", """"\""""timestamp\""""""""]";;;;;
```;;;;;
;;;;;
Test case:;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
require 'bundler/inline';;;;;
;;;;;
gemfile(true) do;;;;;
  source 'https://rubygems.org';;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
  gem 'rails';;;;;
;;;;;
  gem 'pg';;;;;
end;;;;;
;;;;;
require 'active_record';;;;;
require 'minitest/autorun';;;;;
require 'logger';;;;;
;;;;;
# `CREATE DATABASE rails_51428_test;`;;;;
ActiveRecord::Base.establish_connection(adapter: 'postgresql', database: 'rails_51428_test');;;;;
ActiveRecord::Base.logger = Logger.new($stdout);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :events, force: true do |t|;;;;;
    t.decimal :amount, precision: 10, scale: 0, default: 0, null: false;;;;;
    t.datetime :timestamp;;;;;
  end;;;;;
;;;;;
  add_index :events, [:amount], name: 'index_events_on_timestamp', include: [:timestamp];;;;;
end;;;;;
;;;;;
ActiveRecord::SchemaDumper.dump;;;;;
;;;;;
class Event < ActiveRecord::Base; end;;;;
;;;;;
class EventTest < Minitest::Test;;;;;
  def test_stuff;;;;;
    assert_equal 0, Event.count;;;;;
    Event.create!(amount: 1);;;;;
    assert_equal 1, Event.count;;;;;
;;;;;
    # Note: this fails silently. I later discovered that neither this nor;;;;;
    # `ActiveRecord::Tasks::DatabaseTasks.load_schema_current(:ruby, ENV['SCHEMA'])`;;;;;
    # fail. See comments below.;;;;;
    puts `rails db:schema:load`;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
"I am not sure if the word """"timestamp"""" is reserved for the system, but I started having this problem after upgrading the rails version from 7.0.3 to 7.1.0";;;;;
;;;;;
;;;;;
### Expected behavior;;;;;
"Don't escape the characters at include in index or add this explanation to take care to use field named """"timestamp"""" in Rails Guide.";;;;;
;;;;;
### Actual behavior;;;;;
"Using field named """"timestamp"""" and adding index with this field in include, results in the schema with escaped characters, making it impossible to run the load schema.";;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.0;;;;;
;;;;;
**Ruby version**: 3.3.0;;;;;
",2024-03-26T18:15:15Z,2024-03-27T20:46:42Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 70310659, 'node_id': 'MDU6TGFiZWw3MDMxMDY1OQ==', 'url': 'https://api.github.com/repos/rails/rails/labels/PostgreSQL', 'name': 'PostgreSQL', 'color': 'fbca04', 'default': False, 'description': None}, {'id': 126910270, 'node_id': 'MDU6TGFiZWwxMjY5MTAyNzA=', 'url': 'https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps', 'name': 'With reproduction steps', 'color': '009800', 'default': False, 'description': None}]""";;;;;
"2208080356,Request session id unavailable when streaming HTML,""The default Content Security Policy nonce generator returns the `request.session.id`, but this isn’t available when streaming an HTML response.";;;;;
;;;;;
### Steps to reproduce;;;;;
1. Enable the default Content Security Policy by uncommenting the code generated in `config/initializers/content_security_policy.rb`;;;;;
2. Stream an HTML response form a controller;;;;;
;;;;;
**Content Security Policy Config:**;;;;;
```ruby;;;;;
Rails.application.configure do;;;;;
  config.content_security_policy do |policy|;;;;;
    policy.default_src :self, :https;;;;;
    policy.font_src    :self, :https, :data;;;;;
    policy.img_src     :self, :https, :data;;;;;
    policy.object_src  :none;;;;;
    policy.script_src  :self, :https;;;;;
    policy.style_src   :self, :https;;;;;
  end;;;;;
;;;;;
  config.content_security_policy_nonce_generator = ->(request) { request.session.id };;;;;
  config.content_security_policy_nonce_directives = %w(script-src style-src);;;;;
end;;;;;
```;;;;;
;;;;;
**Example controller:**;;;;;
;;;;;
```ruby;;;;;
class DashboardController < ApplicationController;;;;;
  def index;;;;;
"    headers[""""X-Accel-Buffering""""] = """"no""""";;;;;
"    headers[""""Cache-Control""""] = """"no-transform""""";;;;;
"    headers[""""Last-Modified""""] = Time.now.httpdate";;;;;
"    headers[""""Content-Type""""] = """"text/html";" charset=utf-8""""";;;;
;;;;;
    self.response_body = Enumerator.new do |buffer|;;;;;
"      buffer << """"<html><head><title>Dashboard</title></head><body>""""";;;;;
"      buffer << """"<h1>Dashboard</h1>""""";;;;;
"      buffer << """"<p>Welcome to the dashboard</p>""""";;;;;
"      buffer << """"</body></html>""""";;;;;
    end;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behaviour;;;;;
The Content Security Policy headers should include a nonce based on the session id.;;;;;
;;;;;
```;;;;;
Content-Security-Policy: default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src 'none'; script-src 'self' https: 'nonce-2c3f06bf498ed7295cc4612bdc7ad90e'; style-src 'self' https: 'nonce-2c3f06bf498ed7295cc4612bdc7ad90e'
```;;;;;
;;;;;
### Actual behaviour;;;;;
The Content Security Policy headers do not include a nonce.;;;;;
;;;;;
```;;;;;
Content-Security-Policy: default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src 'none'; script-src 'self' https:; style-src 'self' https:
```;;;;;
;;;;;
### Workaround;;;;;
As a workaround, you can set a session attribute and remove it before setting the `response_body`.;;;;;
;;;;;
```ruby;;;;;
session[:foo] = 1;;;;;
session.delete(:foo);;;;;
```;;;;;
;;;;;
This seems to get the session into a state where it has an `id`.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
"**Ruby version**: 3.3.0"",2024-03-26T12:13:22Z,2024-03-26T12:14:52Z,[]";;;;;
"2206546795,Add Active Model `Collection` attribute type,""### Summary";;;;;
;;;;;
One case that is not yet covered by the current standard types is for attributes that represent a collection of multiple values. For example, one might need to represent a subset of strings as a list in a single attribute; or even an entire group of associated models that are all embedded in a named collection. ;;;;
;;;;;
;;;;;
This PR aims to implement a new Collection type.;;;;;
It subclasses the base Value class and overrides the necessary methods so casting and serialization work for an array of objects that are themselves valid for one of the types in the Registry. This ensures that each element of the collection can be cast and serialized individually by delegating the operation to the appropriate type instance.;;;;;
;;;;;
Collection serializes itself as a JSON array on the database. For casting, it attempts to convert values to a Ruby array.;;;;;
;;;;;
Methods:;;;;;
;;;;;
- `type`: returns the :collection symbol.;;;;;
- `serializable?`: checks if the given value is an array containing only elements in which are all serializable for the collection type. It will instantiate the type passed during its own initialization and call serializable? for each element.;;;;;
- `serialize`: returns a JSON string of an array with all elements serialized by the collection type.;;;;;
- `deserialize`: expects a JSON array string and converts it into a Ruby array with each element deserialized by the collection type.;;;;;
- `cast`: converts the given array into a normalized collection of cast values. It will map the given array to a new one in which each element is cast into a new value by the collection type.;;;;;
- `changed_in_place?`: Accepts raw serialized value, deserializes it and checks if any of the elements of the collections were mutated according to the collection type method of the same name.;;;;;
- `assert_valid_value`: checks if all elements of the given array are accepted by the collection type method of the same name.;;;;;
;;;;;
;;;;;
;;;;;
### Other Information;;;;;
;;;;;
This change also introduces additional `Value#valid_value?` method that is supposed to separate the assertion, which raises an exception from a boolean check that can be reused in other places. This way new types won't have to override the whole `assert_valid_value` method if they want to keep the default error message.;;;;;
;;;;;
Let me know if this change should be implemented in a separate PR. I decided to keep it in this PR for better readability of the change but definitely willing to extract it and have a discussion is a different PR. Thanks!;;;;;
;;;;;
### Documentation;;;;;
;;;;;
Currently only the class itself is covered with documentation. But we have plans to cover public methods as well.;;;;;
Either in this PR, in a separate one or perhaps as part of the https://github.com/rails/rails/pull/44306;;;;;
;;;;;
"Original PR #44324"",2024-03-25T19:38:19Z,2024-04-03T17:01:06Z,""[{'id': 107190, 'node_id': 'MDU6TGFiZWwxMDcxOTA=', 'url': 'https://api.github.com/repos/rails/rails/labels/activemodel', 'name': 'activemodel', 'color': '00E5FF', 'default': False, 'description': None}]""";;;;;
"2206478011,Add `Model` type to Active Model attributes,""### Summary";;;;;
;;;;;
The new Model type handles all operations on conversion around model representations, from POROs to hashes and database string/JSON columns.;;;;;
;;;;;
Attributes that are specified as the Model type are required to also specify a class name, which will be used to cast the given values into model instances. On the database serialization side, the model is represented as a JSON, with its `AttributeSet` being serialized by the types of each respective attribute.;;;;;
;;;;;
;;;;;
;;;;;
### Docs:;;;;;
;;;;;
`type`: returns the :model symbol.;;;;;
;;;;;
`serializable?`: checks if the given value is an instance of the model class that this type was initialized with, returning false otherwise.;;;;;
;;;;;
`serialize`: returns a string with the JSON representation of the given model attributes. It achieves that by calling values_for_database in the model’s AttributeSet, and converts the hash received into a JSON string.;;;;;
;;;;;
`deserialize`: this method expects a JSON string, supposed to be a serialized set of attributes of a model instance. It proceeds to convert the JSON into a Ruby hash, and then instantiates a new model of the appropriate class name with the Ruby hash as its attributes. The mass assignment will allow each attribute to be deserialized accordingly and stored in the instance’s attribute set.;;;;;
;;;;;
`cast`: receives a value that is either a hash of attributes or a model instance. It then instantiates a new model based on the class name with the given attributes. This means that if a model is passed, a new instance with the same attribute values will be returned, but not the exact same object.;;;;;
;;;;;
`changed_in_place?`: Accepts a raw serialized attribute set, deserializes it and compares it with the given model instance. If the deserialized model’s attribute set is equal to the given model’s attribute set, returns true, or false otherwise.;;;;;
;;;;;
`assert_valid_value`: this method checks if the given value can be cast to the model class. It takes either a model or a hash of attributes. If the model is not the same class as the type’s class name, or if the given hash contains keys that do not belong to the class's attribute set, it raises an error.;;;;;
;;;;;
### Other Information;;;;;
;;;;;
`attributes_for_database` was copied from ;;;;;
https://github.com/rails/rails/blob/caced273937cf61c9ed2056877e0c3cd6a6b6577/activerecord/lib/active_record/attribute_methods/before_type_cast.rb#L70;;;;;
with an intention to only exist in Active Model, but kept in both places for simplicity of this PR;;;;;
;;;;;
"Original PR #44380"",2024-03-25T19:02:28Z,2024-03-25T21:39:48Z,""[{'id': 107190, 'node_id': 'MDU6TGFiZWwxMDcxOTA=', 'url': 'https://api.github.com/repos/rails/rails/labels/activemodel', 'name': 'activemodel', 'color': '00E5FF', 'default': False, 'description': None}]""";;;;;
"2204627024,Fix `destroy_async` job for owners with composite primary keys,""Currently, `DestroyAssociationAsyncJob` does not work when we have an owner with a composite primary key. ";;;;;
"This PR fixes that."",2024-03-24T23:55:18Z,2024-03-24T23:56:54Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2203991751,ActiveSupport::Cache.expand_cache_key sometimes returns falsely same key in parallel tests,""### Steps to reproduce";;;;;
Thats the hard part here! I still didnt figure out how to reproduce it safely. ;;;;;
What i can tell is that this does not happen when i execute a single testcase. It also doesnt happen when i set parallel workers to `1`.;;;;;
;;;;;
When parallel workers is set to `processors` and all tests are executed via `rails test`, the following test is breaking repeatedly:;;;;;
```ruby;;;;;
"      it """"returns updated records omitting cache and returning new etag"""" do";;;;;
"        get """"/apis/v1/me/tickets""""";;;;;
        assert_valid_json_response;;;;;
;;;;;
"        assert_changes ->{ last_response.headers[""""etag""""] } do";;;;;
          travel 1.second;;;;;
          tickets(:multi).touch;;;;;
;;;;;
"          get """"/apis/v1/me/tickets""""";;;;;
          assert_valid_json_response;;;;;
        end;;;;;
      end;;;;;
```;;;;;
The etag header is calculated basically via this line of code which i also found out to return the same **wrong key**. The `updated_at` on the record `tickets(:multi)` changes, but the underlying query fetching the `max(tickets.updated_at)` seem to return an older timestamp? At least the timestamp in the key remains the same.;;;;;
```;;;;;
ActiveSupport::Cache.expand_cache_key current_user.tickets.visible;;;;;
```;;;;;
The visible scope: ;;;;;
```;;;;;
"scope :visible, -> { joins(:admittances).where(tickets: {hidden: false}).merge(Admittance.visible).group(""""tickets.id"""")}";;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
The etag header should change in the same way whether i execute a single test or all together without flakiness. ;;;;;
;;;;;
### Actual behavior;;;;;
The etag header **remains equal** which is wrong. But this happens only when executing all tests parallelized which is kinda flaky.;;;;;
;;;;;
### Notes;;;;;
I found out that changing the scope implementation from `group` to `distinct` fixes it:;;;;;
```;;;;;
"scope :visible, -> { joins(:admittances).where(tickets: {hidden: false}).merge(Admittance.visible).select(""""distinct on (#{table_name}.id) #{table_name}.*"""")}";;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.2;;;;;
;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-23T18:20:10Z,2024-03-27T09:26:49Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}]""";;;;;
"2203763430,Ignore destroyed records in CollectionAssociation#empty?,""Fix: https://github.com/rails/rails/issues/51388";;;;;
;;;;;
This commit isn't in a mergeable state, it's just to better understand the issue at hand. There is likely similar issues in other methods and it would need some tests.;;;;;
;;;;;
",2024-03-23T08:08:02Z,2024-03-23T08:08:09Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2203250382,Expose @association as a reader in ActiveRecord_Associations_CollectionProxy,""This makes it possible to reflect on associations. For example, Blog.first.posts.association.owner would show that the blog is the owner of the association.";;;;;
;;;;;
## Why?;;;;;
;;;;;
I have a link helper in my Rails app that reflects on associations, like this: `show(@blog.posts)`. Currently I can't reflect on that association unless I access a private instance variable:;;;;;
;;;;;
```ruby;;;;;
"@blog.posts.instance_variable_get(""""@association"""").target";;;;;
```;;;;;
;;;;;
This commit exposes the `@association` object in a public API so I can reflect on associations.;;;;;
",2024-03-22T20:22:30Z,2024-03-26T21:13:58Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2202930057,`ActiveRecord::Suppressor` not working on associations that are loaded via `inverse_of` on unsaved records,""### Steps to reproduce";;;;;
This issue comes from [this comment](https://github.com/rails/rails/pull/50284#issuecomment-2004506200), and started happening after #50284. @rafaelfranca confirmed this behaviour (outlined by @andrewyoo) is intended:;;;;;
;;;;;
```ruby;;;;;
Loading development environment (Rails 7.2.0.alpha);;;;;
umami(dev)> u = User.new;;;;;
=> ;;;;;
#<User:0x000000012c399b30;;;;;
...;;;;;
umami(dev)> s = Shift.new user: u;;;;;
=> #<Shift:0x0000000129e31d98 id: nil, user_id: nil>;;;;;
umami(dev)> s.user;;;;;
=> ;;;;;
#<User:0x000000012c399b30>;;;;;
umami(dev)> u.shifts;;;;;
=> [#<Shift:0x0000000129e31d98 id: nil, user_id: nil>];;;;;
```;;;;;
;;;;;
However, this has the side effect of breaking `ActiveRecord::Suppressor` if you happen to modify the association owner outside the suppression block. Here's a minimal reproduction script:;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
"require """"debug""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
ActiveRecord::Base.has_many_inversing = true;;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :events, force: true do |t|;;;;;
    t.string :action, limit: 255;;;;;
    t.references :recording;;;;;
;;;;;
    t.timestamps;;;;;
  end;;;;;
;;;;;
  create_table :recordings, force: true do |t|;;;;;
    t.string :content;;;;;
;;;;;
    t.timestamps;;;;;
  end;;;;;
end;;;;;
;;;;;
class Recording < ActiveRecord::Base;;;;;
  has_many :events, dependent: :destroy;;;;;
;;;;;
  after_create :track_created;;;;;
;;;;;
  def track_event(action);;;;;
    Event.create! recording: self, action: action;;;;;
  end;;;;;
;;;;;
  def copy;;;;;
    transaction do;;;;;
      recording = Event.suppress { Recording.create!(content: content) };;;;;
      recording.update!(updated_at: updated_at);;;;;
      recording.track_event(:copied_copy);;;;;
      track_event(:copied_original);;;;;
    end;;;;;
  end;;;;;
;;;;;
  private;;;;;
    def track_created;;;;;
      track_event :created;;;;;
    end;;;;;
end;;;;;
;;;;;
class Event < ActiveRecord::Base;;;;;
  belongs_to :recording, required: false;;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_suppress_events_on_copies;;;;;
"    recording = Recording.create!(content: """"original"""")";;;;;
    assert_equal 1, Event.count;;;;;
;;;;;
    recording.copy;;;;;
;;;;;
    assert_equal 3, Event.count;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
Unless it's decided that this is now the expected behaviour for suppression as well, and needs to be documented, I'd expect the above test to pass. ;;;;;
;;;;;
I think, ideally, we'd fix `ActiveRecord::Suppressor` to deal with this case: a record that was set but not saved while the model was suppressed shouldn't be saved afterwards indirectly via the association owner. ;;;;;
;;;;;
### Actual behavior;;;;;
The test fails with ;;;;;
```;;;;;
Failure:;;;;;
BugTest#test_suppress_events_on_copies [test.rb:75]:;;;;;
Expected: 3;;;;;
  Actual: 4;;;;;
```;;;;;
because we added a `created` event to the copy when we save the original recording outside the `Event.suppress` block. ;;;;;
;;;;;
### System configuration;;;;;
**Rails version**:  Rails version: `main` (7c68c52);;;;;
**Ruby version**: 3.3.0 (though it should happen with any version).;;;;;
",2024-03-22T17:00:08Z,2024-03-25T12:53:02Z,[]
2202177190,Inconsistency between `any?`/`empty?` and `size` for collection associations loaded via `inverse_of`,### Steps to reproduce";;;;;
This behaviour seems to have been uncovered by #50284, but it wasn't introduced by that change. Now, if you have two associations like these: ;;;;;
;;;;;
```ruby;;;;;
class Blob < ActiveRecord::Base;;;;;
  has_many :attachments;;;;;
end;;;;;
 ;;;;;
class Attachment < ActiveRecord::Base;;;;;
  belongs_to :blob, required: false;;;;;
end;;;;;
```;;;;;
with `ActiveRecord::Base.has_many_inversing = true`, the following: ;;;;;
```ruby;;;;;
attachment.blob;;;;;
```;;;;;
would load `attachment` within `attachment.blob.attachments` inside the collection's `@target` without setting it as `loaded!`. The result is what I find a bit inconsistent behaviour if you delete `attachment` but I'm not quite sure what the right behaviour should be. ;;;;;
;;;;;
Here's a reproduction script where the inconsistency can be seen in action:;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
"  gem """"stringio"""", """"3.0.9""""";;;;;
"  gem """"debug""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
 ;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
ActiveRecord::Base.has_many_inversing = true;;;;;
 ;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :attachments, force: true do |t|;;;;;
    t.string :name, limit: 255;;;;;
    t.integer :blob_id;;;;;
;;;;;
    t.timestamps;;;;;
  end;;;;;
 ;;;;;
  create_table :blobs, force: true do |t|;;;;;
    t.timestamps;;;;;
  end;;;;;
end;;;;;
 ;;;;;
class Blob < ActiveRecord::Base;;;;;
  has_many :attachments;;;;;
;;;;;
  def has_attachments?;;;;;
    attachments.any?;;;;;
  end;;;;;
end;;;;;
 ;;;;;
class Attachment < ActiveRecord::Base;;;;;
  belongs_to :blob, required: false;;;;;
;;;;;
  after_destroy :destroy_exclusive_blobs;;;;;
;;;;;
  private;;;;;
    def destroy_exclusive_blobs;;;;;
      blob.destroy if blob && !blob.has_attachments?;;;;;
    end;;;;;
end;;;;;
 ;;;;;
class BugTest < Minitest::Test;;;;;
  def test_destroy_exclusive_blobs;;;;;
    blob = Blob.create!;;;;;
    attachment = Attachment.create!(blob: blob);;;;;
;;;;;
    assert_equal 1, Blob.count;;;;;
;;;;;
    attachment.destroy;;;;;
;;;;;
    assert_equal 0, Blob.count;;;;;
   end;;;;;
 end;;;;;
```;;;;;
;;;;;
The test fails after #50284 as `any?` returns `true`. That comes from `empty?` https://github.com/rails/rails/blob/68b20b6513fe56ca80e4966628c231b4d6113bea/activerecord/lib/active_record/associations/collection_association.rb#L230-L236;;;;;
;;;;;
`loaded?` is false, yet `target` includes an `Attachment` record, so `target.empty?` is false. Note that `target.emtpy?` there was added initially to consider newly created records that hadn't been persisted yet (https://github.com/rails/rails/pull/8912). ;;;;;
;;;;;
If replacing `attachments.any?` with `attachments.size > 0`, like this: ;;;;;
```ruby;;;;;
class Blob < ActiveRecord::Base;;;;;
  has_many :attachments;;;;;
;;;;;
  def has_attachments?;;;;;
    attachments.size > 0;;;;;
  end;;;;;
end;;;;;
```;;;;;
the test passes. ;;;;;
;;;;;
### Expected behavior;;;;;
I'd expect both ways, `attachments.size > 0` and `attachments.any?` to behave in the same way, but I'm not completely sure given the code for `CollectionAssociation#empty?` and `CollectionAssociation#size`. If they're supposed to behave inconsistently in this case, perhaps this should be documented. ;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: `main` (7c68c5210cbc245d778daa7958cab73bc74f4669);;;;;
;;;;;
"**Ruby version**: 3.3.0 (though it should happen with any version). "",2024-03-22T10:25:40Z,2024-03-25T15:49:29Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}]""";;;;;
"2201499276,Inconsistent behaviour with previous encryption schemes at global / attribute level,""### Steps to reproduce";;;;;
;;;;;
ref: https://guides.rubyonrails.org/active_record_encryption.html#support-for-previous-encryption-schemes;;;;;
;;;;;
Consider these three tests, to be added to [encryption_schemes_test.rb](https://github.com/rails/rails/blob/main/activerecord/test/cases/encryption/encryption_schemes_test.rb):;;;;;
;;;;;
```ruby;;;;;
"  test """"deterministic property is retained when using previous schemes at the attribute level"""" do";;;;;
"    ActiveRecord::Encryption.config.deterministic_key = """"12345""""";;;;;
;;;;;
    encrypted_author_class = Class.new(Author) do;;;;;
"      self.table_name = """"authors""""";;;;;
;;;;;
      encrypts :name, deterministic: true, previous: { encryptor: PassthruEncryptor.new };;;;;
    end;;;;;
;;;;;
    assert_includes encrypted_author_class.deterministic_encrypted_attributes, :name;;;;;
;;;;;
"    author = encrypted_author_class.create!(name: """"Stephen King"""")";;;;;
"    assert_equal author, encrypted_author_class.find_by_name(""""Stephen King"""")";;;;;
  end;;;;;
;;;;;
"  test """"deterministic property is retained when using previous schemes at the global level"""" do";;;;;
"    ActiveRecord::Encryption.config.deterministic_key = """"12345""""";;;;;
    ActiveRecord::Encryption.config.previous = [{ encryptor: PassthruEncryptor.new }];;;;;
;;;;;
    encrypted_author_class = Class.new(Author) do;;;;;
"      self.table_name = """"authors""""";;;;;
;;;;;
      encrypts :name, deterministic: true;;;;;
    end;;;;;
;;;;;
    assert_includes encrypted_author_class.deterministic_encrypted_attributes, :name;;;;;
;;;;;
"    author = encrypted_author_class.create!(name: """"Stephen King"""")";;;;;
"    assert_equal author, encrypted_author_class.find_by_name(""""Stephen King"""")";;;;;
  end;;;;;
;;;;;
"  test """"deterministic property can be explicitly provided when using previous schemes at the attribute level"""" do";;;;;
"    ActiveRecord::Encryption.config.deterministic_key = """"12345""""";;;;;
;;;;;
    encrypted_author_class = Class.new(Author) do;;;;;
"      self.table_name = """"authors""""";;;;;
;;;;;
      encrypts :name, deterministic: true, previous: { encryptor: PassthruEncryptor.new, deterministic: true };;;;;
    end;;;;;
;;;;;
    assert_includes encrypted_author_class.deterministic_encrypted_attributes, :name;;;;;
;;;;;
"    author = encrypted_author_class.create!(name: """"Stephen King"""")";;;;;
"    assert_equal author, encrypted_author_class.find_by_name(""""Stephen King"""")";;;;;
  end;;;;;
```;;;;;
;;;;;
The second and third tests pass. The first fails:;;;;;
;;;;;
```;;;;;
Failure:;;;;;
ActiveRecord::Encryption::EncryptionSchemesTest#test_deterministic_property_is_retained_when_using_previous_schemes_at_the_attribute_level [test/cases/encryption/encryption_schemes_test.rb:195]:;;;;;
Expected: #<#<Class:0x00000001055dbcd0> id: 1>;;;;;
  Actual: nil;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
I think either the first and second test should both pass, or they should both fail. I think the third test is passing correctly.;;;;;
;;;;;
I can make a PR but would like some guidance on which behaviour is expected. I think the root cause is that global previous schemes get merged [here](https://github.com/rails/rails/blob/68b20b6513fe56ca80e4966628c231b4d6113bea/activerecord/lib/active_record/encryption/encryptable_record.rb#L73-L74) but attribute-level previous schemes do not.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: `main`;;;;;
;;;;;
**Ruby version**: any;;;;;
",2024-03-22T01:26:00Z,2024-03-22T01:26:20Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 5511275119, 'node_id': 'LA_kwDNIULPAAAAAUh_Ym8', 'url': 'https://api.github.com/repos/rails/rails/labels/encryption', 'name': 'encryption', 'color': '8D3EA8', 'default': False, 'description': ''}]""";;;;;
"2200888087,Add :variants option to render-related documentation [ci skip],""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
This Pull Request has been created because; I couldn't find the `:variants` option in the API documentation. I noticed it was covered in the guidelines, but it didn't go over that render can intake a singular version of `:variant` and partial rendering should only intake a plural version of the option.;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request adds ;;;;;
- `:variants` documentation to `ActionView::PartialRenderer`;;;;;
- `:variants` and `:variant` to `ActionController::Rendering`;;;;;
 ;;;;;
### Additional information;;;;;
;;;;;
It's not clear to me what areas should also include the as an available option, any insights would be helpful! 🙂 ;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-21T18:30:04Z,2024-03-28T13:54:45Z,[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}, {'id': 3666649, 'node_id': 'MDU6TGFiZWwzNjY2NjQ5', 'url': 'https://api.github.com/repos/rails/rails/labels/actionview', 'name': 'actionview', 'color': 'd7e102', 'default': False, 'description': None}]""";;;;;
"2200784853,form_helper documentation using article instead of post [ci skip],""### Motivation / Background";;;;;
;;;;;
This Pull Request has been created because it will make the form_with documentation clearer.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Documentation previously uses post which is confusing as the methods/verb is also post.;;;;;
;;;;;
Before;;;;;
"`<form action=""""/posts"""" method=""""post"""">`";;;;;
;;;;;
After;;;;;
"`<form action=""""/articles"""" method=""""post"""">`";;;;;
;;;;;
### Method;;;;;
;;;;;
Worked through a new Rails app with scaffold of article and checking the output of the HTML. Other HTML changes make it more authentic:;;;;;
- /> => at the end of the input;;;;;
#NOM?;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [X] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-21T17:31:25Z,2024-04-02T09:59:35Z,[{'id': 3666649, 'node_id': 'MDU6TGFiZWwzNjY2NjQ5', 'url': 'https://api.github.com/repos/rails/rails/labels/actionview', 'name': 'actionview', 'color': 'd7e102', 'default': False, 'description': None}]""";;;;;
"2200750652,fix hex bit strings with leading zeroes in postgresql,""### Motivation / Background";;;;;
;;;;;
Currently when casting a hex string argument for a PostgreSQL `bit` or `bit_varying` column, leading zeroes are discarded. This is unexpected, and differs from the behavior of binary strings.;;;;;
;;;;;
### Detail;;;;;
;;;;;
"This Pull Request ensures leading zeroes are preserved, e.g. assigning a bit string column """"0x5F"""" results in the bit string """"01011111"""" instead of """"1011111"""" being sent to Postgres.";;;;;
;;;;;
### Additional information;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-21T17:14:40Z,2024-03-27T20:30:53Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2200234507,Add ability to modify read timeout in runtime,"" ### Motivation / Background";;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Many different factors can impact the database query execution time from an application's point of view, such as network latency, query execution plan, table data shape, and others. ;;;;;
;;;;;
"Currently, the application can provide a """"hardcoded"""" `read_timeout` value in the database.yml, which helps to cap the maximum time it will take to execute one query.";;;;;
;;;;;
However, it is not uncommon for a web request to have multiple query executions, and multiple slow queries can impact its response time. To mitigate the long response times, our application has a maximum allowed request time budget, which can be exhausted by multiple types of these issues. We would like to control the application wait time dynamically and gradually reduce that as the web request progresses. It will allow us to prevent a query from exhausting the request time budget.;;;;;
;;;;;
### Detail;;;;;
;;;;;
I added the ability to customize the database `read_timeout` property dynamically. It will receive the `read_timeout` as a value or a callable object, and a block. Any connection execution within that block will have the read_timeout replaced by the provided value. For example:;;;;;
;;;;;
```ruby;;;;;
ActiveRecord::Base.with_custom_conn_properties(read_timeout: 1) do;;;;;
  ...;;;;;
  Model.where(...).to_a # The read_timeout will be set to 1s;;;;;
  ...;;;;;
end;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-21T13:41:05Z,2024-03-21T20:39:12Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2199929620,Add `ActiveRecord::Relation#readonly?`,""Indicates whether a relation was marked readonly.";;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
There's currently no documented API to check if a relation is readonly. Workarounds include loading the records and checking those for `readonly?` or using accessing the undocumented `readonly_value`.;;;;;
;;;;;
A Relation could be marked readonly and used as an indication to what should be rendered. This change makes that use case simpler.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Adds `ActiveRecord::Relation#readonly?` which behaves the same as `ActiveRecord::Base#readonly?` for the contained records.;;;;;
;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
"* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included."",2024-03-21T11:30:28Z,2024-03-24T09:48:55Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2198596882,Update oracle connection name to match adapter in tests,""";;;;;
<!--;;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
This Pull Request has been created to enable running the activerecord test suite with the oracle-enhanced adapter post activerecord 7.1.0;;;;;
;;;;;
### Detail;;;;;
;;;;;
https://github.com/rails/rails/pull/48015 (specifically 7572a13af6444abf51720051c6a93d72a7aead0e) adds a check to ensure the connection name matches the adapter name for the test run. For oracle databases, the testing files call the connection `oracle`, but the adapter we use is `oracle_enhanced`, resulting in an error when the tests are run:;;;;;
;;;;;
```;;;;;
bundle exec rake test:oracle TEST=test/cases/base_test.rb;;;;;
"/usr/local/bin/ruby -w -I""""lib:test"""" /usr/local/lib/ruby/gems/3.2.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb """"test/cases/base_test.rb""""";;;;;
Using oracle;;;;;
/app/activerecord/test/support/connection.rb:38:in `connect': The connection name did not match the adapter name. Connection name is 'oracle' and the adapter name is 'oracle_enhanced'. (ArgumentError);;;;;
;;;;;
"      raise ArgumentError, """"The connection name did not match the adapter name. Connection name is '#{connection_name}' and the adapter name is '#{arunit_adapter}'.""""";;;;;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;;;;;
"	from /app/activerecord/test/cases/test_case.rb:248:in `<class:TestCase>'";;;;;
"	from /app/activerecord/test/cases/test_case.rb:20:in `<module:ActiveRecord>'";;;;;
"	from /app/activerecord/test/cases/test_case.rb:16:in `<top (required)>'";;;;;
"	from /app/activerecord/test/cases/helper.rb:8:in `require'";;;;;
"	from /app/activerecord/test/cases/helper.rb:8:in `<top (required)>'";;;;;
"	from /app/activerecord/test/cases/base_test.rb:3:in `require'";;;;;
"	from /app/activerecord/test/cases/base_test.rb:3:in `<top (required)>'";;;;;
"	from /usr/local/lib/ruby/gems/3.2.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb:21:in `require'";;;;;
"	from /usr/local/lib/ruby/gems/3.2.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb:21:in `block in <main>'";;;;;
"	from /usr/local/lib/ruby/gems/3.2.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb:6:in `select'";;;;;
"	from /usr/local/lib/ruby/gems/3.2.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb:6:in `<main>'";;;;;
rake aborted!;;;;;
```;;;;;
;;;;;
This change updates the connection name to be `oracle_enhanced` so it matches the adapter. With these changes I can run;;;;;
```;;;;;
bundle exec rake test:oracle_enhanced TEST=test/cases/base_test.rb;;;;;
```;;;;;
without getting the connection name error.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
I did not rename `activerecord/test/schema/oracle_specific_schema.rb` because the config.example.yml has emulate_oracle_adapter set to true so `oracle_specific_schema` is still the name the LoadSchemaHelper looks for.;;;;;
;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-20T21:25:33Z,2024-03-21T21:45:41Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2198129239,Prevent autosave association with has_one defined on child class,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Adjusts the logic in inverse_polymorphic_association_changed? to determine if a has_one association's polymorphic association should autosave the associated record for a type change.;;;;;
;;;;;
Previously this would see the type as changed every time if the has_one is defined on a child class, since the polymorphic relationship saves the parent class as the *_type value. The new check resolves the correct class name to avoid these extra saves.;;;;;
;;;;;
Fixes #51280;;;;;
;;;;;
### Detail;;;;;
;;;;;
Also confirmed that the new test fails without the code change:;;;;;
;;;;;
```;;;;;
Failure:;;;;;
TestAutosaveAssociationOnAHasOneAssociation#test_should_not_saved_for_unchanged_sti_type_on_polymorphic_association [test/cases/autosave_association_test.rb:1652]:;;;;;
Expected: 2;;;;;
  Actual: 3;;;;;
;;;;;
;;;;;
bin/rails test test/cases/autosave_association_test.rb:1620;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-20T17:31:55Z,2024-03-20T17:33:03Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2196727075,[ci skip] Document `ActiveSupport::Subscriber` in guides,""### Motivation / Background";;;;;
;;;;;
`ActiveSupport::Subscriber` provides a nice way to handle `ActiveSupport::Notifications::Event`. However, there is a lack of guide.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Document how to subscribe event of given namespace using `ActiveSupport::Subscriber`.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [X] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-20T06:04:17Z,2024-03-20T06:05:10Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2196576028,""Replace Order with Book in """"Creating Namespaced Models"""" section of docs for consistency"",""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
This Pull Request has been created because the documentation is improved by consistently using the same model names throughout.;;;;;
https://github.com/rails/rails/pull/51226#discussion_r1527578109;;;;;
;;;;;
### Detail;;;;;
;;;;;
"This Pull Request changes the Active Record Basics Guide """"Creating Namespaced Models"""" section to use Book instead of Order in the examples, consistent with the rest of the document.";;;;;
;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-20T03:00:04Z,2024-03-21T18:34:36Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2196082119,Add ability to prevent access to a database,""### Motivation / Background";;;;;
;;;;;
From discussion: https://discuss.rubyonrails.org/t/proposal-prevent-activerecord-access/85322;;;;;
;;;;;
> I have some methods that I know are being called in loops and these methods will become N+1 DB query situations if a database query is generated in any way. What I’m hoping for is some sort of runtime policy that says “no ActiveRecord access is allowed in here, you must load everything you need first”;;;;;
> ;;;;;
> Here’s another way to put it. If I have some business logic that combines data loading with some kind of pure calculation, it would be nice to have the power, when it is useful, to strongly separate these concerns and be sure the separation remains.;;;;;
> ;;;;;
> This power could be useful for any situation where a hot code path must remain free of queries. Perhaps it could be used to implement a policy to prevent database access during the render phase of an HTTP request.;;;;;
;;;;;
N+1 queries can be a real performance concern. It isn't always immediately obvious what the impacts could be of adding a new query. I wish engineers would be constantly watching the query log as they work. But things can get out of hand quickly, and even if you are watching the wall of queries being logged, N+1s can sometimes disappear into the noise.;;;;;
;;;;;
Also, there are times when I want a pure in-memory algorithm. An API like this would allow me to both express and enforce the intention to not be hitting the database in a branch of code.;;;;;
;;;;;
Just today, I was working with some code that broke a test that asserts for a given controller action, exactly 118 queries are dispatched. This is a terrible test to have, but we have it because we have had real problems with query explosions emerging unexpectedly. I believe strict loading could help, but it would not have prevented all of the problems that led to write and maintain this test.;;;;;
;;;;;
This is indeed a heavy hammer to use. But I don't see an alternative that can achieve the same level of assurance, and the implementation was pretty easy thanks to the prior art of `while_preventing_writes`.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request adds `while_preventing_access` to the public API of ActiveRecord::Base much like was done for `while_preventing_writes` in https://github.com/rails/rails/pull/34505;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-19T21:46:17Z,2024-03-23T06:25:57Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2194293557,`PessimisticLockingTest#test_no_locks_no_wait` gets `ERROR:  cached plan must not change result type`,""Managed to reproduce CI error.";;;;;
https://buildkite.com/rails/rails/builds/105748#018e558b-b895-43cc-aa80-71180e80d01b/1235-1330;;;;;
;;;;;
### Steps to reproduce;;;;;
```ruby;;;;;
git clone https://github.com/rails/rails;;;;;
cd rails/activerecord;;;;;
bundle install;;;;;
bundle exec rake db:postgresql:rebuild;;;;;
"ARCONN=postgresql bin/test test/cases/associations/nested_through_associations_test.rb test/cases/connection_management_test.rb test/cases/migration_test.rb test/cases/locking_test.rb -n """"/^(?:NestedThroughAssociationsTest#(?:test_has_many_through_with_foreign_key_option_on_through_reflection)|ActiveRecord::ConnectionAdapters::ConnectionManagementTest#(?:test_cancel_asynchronous_queries_if_an_exception_is_raised)|MigrationTest#(?:test_instance_based_migration_up)|PessimisticLockingTest#(?:test_no_locks_no_wait))$/"""" --seed 38135";;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
It should pass.;;;;;
;;;;;
### Actual behavior;;;;;
`PessimisticLockingTest#test_no_locks_no_wait` gets `ERROR:  cached plan must not change result type`.;;;;;
;;;;;
```ruby;;;;;
"$ ARCONN=postgresql bin/test test/cases/associations/nested_through_associations_test.rb test/cases/connection_management_test.rb test/cases/migration_test.rb test/cases/locking_test.rb -n """"/^(?:NestedThroughAssociationsTest#(?:test_has_many_through_with_foreign_key_option_on_through_reflection)|ActiveRecord::ConnectionAdapters::ConnectionManagementTest#(?:test_cancel_asynchronous_queries_if_an_exception_is_raised)|MigrationTest#(?:test_instance_based_migration_up)|PessimisticLockingTest#(?:test_no_locks_no_wait))$/"""" --seed 38135";;;;;
Using postgresql;;;;;
"Run options: -n """"/^(?:NestedThroughAssociationsTest#(?:test_has_many_through_with_foreign_key_option_on_through_reflection)|ActiveRecord::ConnectionAdapters::ConnectionManagementTest#(?:test_cancel_asynchronous_queries_if_an_exception_is_raised)|MigrationTest#(?:test_instance_based_migration_up)|PessimisticLockingTest#(?:test_no_locks_no_wait))$/"""" --seed 38135";;;;;
;;;;;
# Running:;;;;;
;;;;;
...#<Thread:0x000078a1a0d27b38 /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:809 run> terminated with exception (report_on_exception is true):;;;;;
/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:915:in `rescue in exec_cache': ERROR:  cached plan must not change result type (ActiveRecord::PreparedStatementCacheExpired);;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:893:in `exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:865:in `execute_and_clear'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb:66:in `internal_exec_query'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:630:in `select'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:222:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:62:in `_query_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:51:in `find_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/statement_cache.rb:150:in `execute'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:434:in `cached_find_by'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:255:in `find'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:788:in `block in test_no_locks_no_wait'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:223:in `block in transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_handling.rb:270:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:222:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:812:in `block in duel'";;;;;
/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:903:in `exec_prepared': PG::FeatureNotSupported: ERROR:  cached plan must not change result type (ActiveRecord::StatementInvalid);;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:903:in `block (2 levels) in exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:1112:in `log'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:902:in `block in exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:997:in `block in with_raw_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:969:in `with_raw_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:898:in `exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:865:in `execute_and_clear'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb:66:in `internal_exec_query'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:630:in `select'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:222:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:62:in `_query_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:51:in `find_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/statement_cache.rb:150:in `execute'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:434:in `cached_find_by'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:255:in `find'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:788:in `block in test_no_locks_no_wait'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:223:in `block in transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_handling.rb:270:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:222:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:812:in `block in duel'";;;;;
/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:903:in `exec_prepared': ERROR:  cached plan must not change result type (PG::FeatureNotSupported);;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:903:in `block (2 levels) in exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:1112:in `log'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:902:in `block in exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:997:in `block in with_raw_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:969:in `with_raw_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:898:in `exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:865:in `execute_and_clear'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb:66:in `internal_exec_query'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:630:in `select'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:222:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:62:in `_query_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:51:in `find_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/statement_cache.rb:150:in `execute'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:434:in `cached_find_by'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:255:in `find'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:788:in `block in test_no_locks_no_wait'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:223:in `block in transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_handling.rb:270:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:222:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:812:in `block in duel'";;;;;
Found 1 leaked connections;;;;;
owner: #<Thread:0x000078a1a0d27ca0 /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:799 sleep>;;;;;
backtrace:;;;;;
"[""""/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:53:in `sleep'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:53:in `wait'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:53:in `ns_wait'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/abstract_lockable_object.rb:47:in `ns_wait_until'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/atomic/event.rb:87:in `block in wait'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:48:in `block in synchronize'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:48:in `synchronize'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:48:in `synchronize'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/atomic/event.rb:84:in `wait'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:804:in `block (2 levels) in duel'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction'"""", """"/home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:223:in `block in transaction'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_handling.rb:270:in `with_connection'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:222:in `transaction'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:801:in `block in duel'""""]";;;;;
;;;;;
E;;;;;
;;;;;
Error:;;;;;
PessimisticLockingTest#test_no_locks_no_wait:;;;;;
ActiveRecord::PreparedStatementCacheExpired: ERROR:  cached plan must not change result type;;;;;
;;;;;
    lib/active_record/connection_adapters/postgresql_adapter.rb:915:in `rescue in exec_cache';;;;;
    lib/active_record/connection_adapters/postgresql_adapter.rb:893:in `exec_cache';;;;;
    lib/active_record/connection_adapters/postgresql_adapter.rb:865:in `execute_and_clear';;;;;
    lib/active_record/connection_adapters/postgresql/database_statements.rb:66:in `internal_exec_query';;;;;
    lib/active_record/connection_adapters/abstract/database_statements.rb:630:in `select';;;;;
    lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all';;;;;
    lib/active_record/connection_adapters/abstract/query_cache.rb:222:in `select_all';;;;;
    lib/active_record/querying.rb:62:in `_query_by_sql';;;;;
    lib/active_record/querying.rb:51:in `find_by_sql';;;;;
    lib/active_record/statement_cache.rb:150:in `execute';;;;;
    lib/active_record/core.rb:434:in `cached_find_by';;;;;
    lib/active_record/core.rb:255:in `find';;;;;
    test/cases/locking_test.rb:788:in `block in test_no_locks_no_wait';;;;;
    lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction';;;;;
    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize';;;;;
    lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction';;;;;
    lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction';;;;;
    lib/active_record/transactions.rb:223:in `block in transaction';;;;;
    lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection';;;;;
    lib/active_record/connection_handling.rb:270:in `with_connection';;;;;
    lib/active_record/transactions.rb:222:in `transaction';;;;;
    test/cases/locking_test.rb:812:in `block in duel';;;;;
;;;;;
Error:;;;;;
PessimisticLockingTest#test_no_locks_no_wait:;;;;;
RuntimeError: Found 1 leaked connection after PessimisticLockingTest#test_no_locks_no_wait;;;;;
    test/cases/test_case.rb:82:in `check_connection_leaks';;;;;
    test/cases/test_case.rb:38:in `after_teardown';;;;;
;;;;;
;;;;;
bin/test test/cases/locking_test.rb:787;;;;;
;;;;;
;;;;;
;;;;;
Finished in 1.057243s, 3.7834 runs/s, 10.4044 assertions/s.;;;;;
4 runs, 11 assertions, 0 failures, 1 errors, 0 skips;;;;;
$;;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: main branch;;;;;
;;;;;
**Ruby version**: ruby 3.3.0 (2023-12-25 revision 5124f9ac75) [x86_64-linux];;;;;
",2024-03-19T08:06:22Z,2024-03-19T08:06:39Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 70310659, 'node_id': 'MDU6TGFiZWw3MDMxMDY1OQ==', 'url': 'https://api.github.com/repos/rails/rails/labels/PostgreSQL', 'name': 'PostgreSQL', 'color': 'fbca04', 'default': False, 'description': None}, {'id': 776781281, 'node_id': 'MDU6TGFiZWw3NzY3ODEyODE=', 'url': 'https://api.github.com/repos/rails/rails/labels/ci%20issues', 'name': 'ci issues', 'color': 'aaafff', 'default': False, 'description': None}]""";;;;;
"2192504341,""add `file_exist?` method for ActiveStorage::Blob, ActiveStorage::Variant, ActiveStorage::VariantWithRecord"",""";;;;;
;;;;;
It's help to check if all it's ok on the service storage;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
This Pull Request has been created because we (@captive-studio) handle a large number of files using ActiveStorage in our application where these files are central to the business.;;;;;
;;;;;
For some time now, we have noticed that certain variants are not being properly saved in the storage (specifically Google Cloud Storage). We want to rectify this situation by retrieving the variants for which the file does not exist in the storage.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes add new `file_exist?` method for ActiveStorage::Blob, ActiveStorage::Variant, ActiveStorage::VariantWithRecord;;;;;
;;;;;
This method will help to check if a file exist on the storage service;;;;;
;;;;;
### Additional information;;;;;
;;;;;
/;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-18T15:17:49Z,2024-03-18T15:17:53Z,[{'id': 664533972, 'node_id': 'MDU6TGFiZWw2NjQ1MzM5NzI=', 'url': 'https://api.github.com/repos/rails/rails/labels/activestorage', 'name': 'activestorage', 'color': 'bfd4f2', 'default': False, 'description': None}]""";;;;;
"2192417334,Enable query log tags by default on development env,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
This can be used to trace troublesome SQL statements back to the application code that generated these statements. I feel like this is a good default value that helps with debugging and code discovery.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-18T14:43:38Z,2024-03-25T02:05:54Z,[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}, {'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2190873649,.eager_load when selecting another column sets the ID incorrectly to a record being eager loaded.,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"  # gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :posts, force: true do |t|;;;;;
    t.integer :first_comment_id;;;;;
    t.integer :last_comment_id;;;;;
  end;;;;;
;;;;;
  create_table :comments, force: true do |t|;;;;;
    t.integer :post_id;;;;;
  end;;;;;
end;;;;;
;;;;;
class Post < ActiveRecord::Base;;;;;
  has_many :comments;;;;;
;;;;;
"  belongs_to :first_comment, class_name: """"Comment""""";;;;;
"  belongs_to :last_comment, class_name: """"Comment""""";;;;;
;;;;;
"  scope :select_another_column, -> { select(""""*"""").select(""""TIME('now') as now"""") }";;;;;
end;;;;;
;;;;;
class Comment < ActiveRecord::Base;;;;;
  belongs_to :post;;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_association_stuff;;;;;
    post = Post.create!;;;;;
    post.first_comment = Comment.create!;;;;;
    post.last_comment = Comment.create!;;;;;
;;;;;
    post.save!;;;;;
;;;;;
    post = Post.find(post.id);;;;;
    post_with_eager_loads = Post.eager_load(:first_comment, :last_comment).select_another_column.find(post.id);;;;;
;;;;;
    assert_equal post.id, post_with_eager_loads.id;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
Expect that IDs are consistent when using .eager_load;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
ID gets set to one of the other tables joined in;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: main;;;;;
;;;;;
**Ruby version**: 3.3.0;;;;;
",2024-03-17T21:28:07Z,2024-03-19T19:38:22Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2190758266,Allow one to set `strict_loading_mode` globally,""### Motivation / Background";;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
I was reading through [this summary of Rails' strict loading](https://jordanhollinger.com/2023/11/11/rails-strict-loading/) and came across this paragraph:;;;;;
;;;;;
> If you’re very brave, you can opt your entire application into strict loading. (Oddly, there doesn’t seem to be an equivalent of :n_plus_one_only here. I can’t imagine using this.);;;;;
;;;;;
In my app, we're setting `strict_loading!(mode: :n_plus_one_only)` on individual records; this paragraph made me realize it didn't have to be this way.;;;;
;;;;;
This Pull Request has been created because currently, `strict_loading_mode` is always set to `:all`. It may be preferable for users to have `:n_plus_one_only` on an individual model, or even on the entire app.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request adds a new class_attribute `:strict_loading_mode`, defaulted to `:all`.  If it's set to `:n_plus_one_only`, that mode is used by default when doing strict loading checks.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
n/a;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-17T16:45:34Z,2024-03-28T22:17:42Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2186612406,Autoloaded classes raise NameError when accessed in parent's on_load hook during load,""This is not a new issue with Rails autoloading, but a challenge I feel when working with Engines (either developing engines as a gem maintainer or consuming engines as an application developer)";;;;;
;;;;;
For example, an Engine may have a setup like this:;;;;;
;;;;;
```ruby;;;;;
module GoodJob;;;;;
  class ApplicationJob < ActiveJob::Base;;;;;
    # some configuration;;;;;
    ActiveSupport.run_load_hooks(:good_job_application_job, self);;;;;
  end;;;;;
;;;;;
  class UtilityOneJob < ApplicationJob; end;;;;
  class UtilityTwoJob < ApplicationJob; end;;;;
  class UtilityThreeJob < ApplicationJob; end;;;;
  # ... and many more;;;;;
end;;;;;
```;;;;;
;;;;;
I give an example of GoodJob, but this is a very analogous situation to other Engines with autoloaded classes/subclasses (models, controllers, etc.); for example Devise, which has a `DeviseController` (with load_hook) that is then subclassed with [a desire to extend](https://github.com/heartcombo/devise/wiki/How-To:-Create-custom-layouts#application--devise-config). ;;;;
;;;;;
I want to be able to allow application developers to extend the subclasses, and I want to defer autoloaded constants as much as possible (ideally not touching Action Controller or Active Model at all until during initialization), and this seems like it should be reasonable:;;;;;
;;;;;
```ruby;;;;;
# config/initializers/good_job.rb;;;;;
;;;;;
ActiveSupport.on_load(:good_job_application_job) do;;;;;
  # Customize a subclass;;;;;
"  GoodJob::UtilityJobOne.queue_name = """"something_custom""""";;;;;
end;;;;;
```;;;;;
;;;;;
This _usually_ works ok, except in the case when the `UtilityJobOne` _being loaded causes ApplicationJob to be loaded for the very first time_, in which case it raises a `uninitialized constant UtilityJobOne (NameError)`. This is because of the autoloading chain:;;;;;
;;;;;
`GoodJob::UtilityJobOne` first must load its parent class `GoodJob::ApplicationJob` for the first time, which triggers the load_hook which itself references `UtilityOneJob` which has not yet completed loading and thus a `NameError` 💥 ;;;;;
;;;;;
There is what I consider a workaround for this which is to use `inherited` (which is triggered _after the subclass constant is loaded), but I find it somewhat complex and wonder if there is a better way, or whether this is something that should be turned into a hook pattern:;;;;;
;;;;;
```ruby;;;;;
# config/initializers/good_job.rb;;;;;
;;;;;
module ConfigureUtilityJob;;;;;
  def inherited(subclass);;;;;
    super;;;;;
"    if subclass.to_s == """"UtilityJobOne""""";;;;;
"      subclass.queue_name = """"something_custom""""";;;;;
    end;;;;;
  end;;;;;
end;;;;;
;;;;;
ActiveSupport.on_load(:good_job_application_job) do;;;;;
  GoodJob::ApplicationJob.extend ConfigureUtilityJob;;;;;
end;;;;;
```;;;;;
;;;;;
"I realize that another solution as a engine maintainer is to add load hooks to every subclass, but that seems onerous, and as an application developer I'd have to convince other engine maintainers to do so (which is totally ok, so long as there isn't a better way I'm missing or a reasonable central interface for modifying autoloaded subclasses)."",2024-03-14T15:06:07Z,2024-03-14T15:07:44Z,[]";;;;;
"2183136951,`ActiveRecord::Migration::check_all_pending!` resets connection pool when in use in other threads,""This might not be a bug per se, but is unexpected behaviour that was exposed in our specific use case.";;;;;
;;;;;
### Steps to reproduce;;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
In production, we have a bunch of custom internal health-checks exposed via a controller endpoint that are pinged every 20s or so, one of which is a check for pending migrations. Up until recently we were using `ActiveRecord::Migration::check_pending!` which took an optional connection argument and would use it to access the migration context (presumably releasing the connection back into the pool immediately after) to check for pending migrations.;;;;;
;;;;;
This method [has been deprecated in favour of `check_all_pending!`](https://github.com/rails/rails/commit/03379d1f599653d100dff9fbf3ce4434a930b915) and [was recently removed on `main`](https://github.com/rails/rails/commit/02f66fe3e25cef2b0dec8bca26e777fe788af35c). To comply with this (since we run against Rails edge) we ended up replacing `check_pending!` with `check_all_pending!` (which doesn't take any arguments) in the respective health-check. After deploying this change we started seeing this error intermittently:;;;;;
;;;;;
```;;;;;
ActiveRecord::ConnectionNotEstablished:  No connection pool for 'ActiveRecord::Base' found.;;;;;
```;;;;;
;;;;;
After some debugging we found that it was due to `check_all_pending!` [using a temporary pool under the hood](https://github.com/rails/rails/blob/0dc84e2e7d942dcaac3bd75414ae55bfad9bb18a/activerecord/lib/active_record/tasks/database_tasks.rb#L542-L549), meaning it would establish a new connection for its checks, then establish another one once done, resetting the connection pool object each time. This meant that other threads (we're currently running `puma` with `3` threads) that attempted to retrieve the current (cached) pool during this time (to then retrieve a connection) would fail to find it and raise here:;;;;;
https://github.com/rails/rails/blob/0dc84e2e7d942dcaac3bd75414ae55bfad9bb18a/activerecord/lib/active_record/connection_adapters/abstract/connection_handler.rb#L224;;;;;
;;;;;
We've considered that maybe this specific health-check setup is a bit unconventional, but given that I can find [some public repos utilising this method the same way](https://github.com/search?q=ActiveRecord%3A%3AMigration.check_all_pending%21+language%3ARuby&type=code&l=Ruby), I thought I'd open this up for discussion to see if there's any chance of changing / extending the implementation or even just warning against its use outside of something like a rake task so others don't run into a similar issue.;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# Ensure `ActiveRecord::Base.configurations.configs_for` returns a config for which a temporary pool is yielded.;;;;;
"ActiveRecord::Base.configurations = { development: { adapter: """"sqlite3"""", database: """":memory:"""" } }";;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_connection_pool_does_not_reset;;;;;
    pool_before = ActiveRecord::Base.connection_pool;;;;;
;;;;;
    ActiveRecord::Migration.check_all_pending!;;;;;
;;;;;
    assert_equal pool_before.object_id, ActiveRecord::Base.connection_pool.object_id;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
<!-- Tell us what should happen -->;;;;;
;;;;;
Connection pool is not reset when checking for pending migrations with `check_all_pending!`.;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
;;;;;
Connection pool is reset when checking for pending migrations with `check_all_pending!`.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: Edge;;;;;
;;;;;
"**Ruby version**: 3.2.2"",2024-03-13T05:17:22Z,2024-03-14T06:03:23Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2182989812,Fix a crash when an  Executor wrapped fork exit.,""Fix #51298";;;;;
;;;;;
forking inside an Execution Wrapper crashes when running the completion callbacks.;;;;;
;;;;;
Rails 7.0 was not Execution wrapping the `runner` command. ;;;;;
Rails 7.2 changed the definition of `active_connection?`, the new definition doesn't contain the bug. ;;;;;
;;;;;
Therefore forking inside a script intended to be run with the `runner` command on 7.1 crashes. (see #51298);;;;;
;;;;;
This PR is targeting `7-1-stable`;;;;;
;;;;;
Edit: The regression test (with the fork) blew up the tests. I removed it, I'll revisit. ;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-13T02:22:58Z,2024-03-23T21:16:44Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2182679064,[ci skip] Undocumented - validations enabled by autosave,""### Motivation / Background";;;;;
;;;;;
Fixes #50807;;;;;
;;;;;
As described in Issue #50807,  validations are enabled by default when the autosave option is set to true. Currently, that behavior is not documented for the `has_one` or `belongs_to` associations.   ;;;;;
;;;;;
### Detail;;;;;
;;;;;
To resolve this issue, the  API documentation has been updated to document the validation behavior when the `autosave: true` option is set in `Activerecord::Associations` for the `has_one` or `belongs_to` associations.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-12T21:09:19Z,2024-03-23T17:25:32Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2182219571,Do not use the alpha version if the major version is released,""This PR changes the active storage dependency version for action text. ";;;;;
",2024-03-12T17:04:15Z,2024-03-12T17:04:19Z,[{'id': 1180817762, 'node_id': 'MDU6TGFiZWwxMTgwODE3NzYy', 'url': 'https://api.github.com/repos/rails/rails/labels/actiontext', 'name': 'actiontext', 'color': '3bc667', 'default': False, 'description': ''}]""";;;;;
"2181685435,Model.insert_all can accept an array of records with separate column names,""### Motivation / Background";;;;;
;;;;;
Expanding the `Model.insert_all` functionality to receive an array containing records and column names separately. This improvement eliminates the need for records to be in the hash format, providing a more streamlined approach, especially useful for handling large datasets when both the order of attributes and their alignment with the table structure are known in advance.;;;;;
;;;;;
```ruby;;;;;
column_names = [:name, :author_id];;;;;
book_batches.each do |book_batch|;;;;;
"	Book.insert_all(book_batch, column_names: column_names)";;;;;
end;;;;;
```;;;;;
;;;;;
This update enables users to provide an array of arrays for the records, while also specifying the column names separately. This enhancement enhances code flexibility and readability, simplifying data insertion without requiring pre-formatting into hashes.;;;;;
;;;;;
### Detail;;;;;
;;;;;
#NOM?;;;;;
#NOM?;;;;;
;;;;;
```ruby;;;;;
Book.insert_all([;;;;;
"  [""""Rework"""", 1],";;;;;
"  [""""Patterns of Enterprise Application Architecture"""", 1]";;;;;
], column_names: [:name, :author_id]);;;;;
```;;;;;
;;;;;
"To showcase the API proposal, I opted for the simplest approach, which involved converting the array of records and column names into a Hash, as it aligns with the existing code."",2024-03-12T13:54:28Z,2024-03-12T13:54:34Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2181555060,Add and document ActionText without_layout reader and writer attributes,""If a site follows an `ActionText` editing form with a preview form prior to record creation, the natural way to set the editor content in the preview form is something like:";;;;;
;;;;;
`<%= hidden_field :message, :content %>`;;;;;
;;;;;
"This however does a `to_s`, which includes the content with the """"trix-content"""" div layout wrapping. This wrapping gets saved, and the final rendering with layout has a double wrapping.";;;;;
;;;;;
A solution is to instead use;;;;;
;;;;;
`<%= hidden_field_tag 'message[content]', @message.content.to_trix_html %>`;;;;;
;;;;;
but a cleaner solution would be to provide a non-wrapped accessor like;;;;;
;;;;;
`<%= hidden_field :message, :content_without_layout %>`;;;;;
;;;;;
"This PR does this. It also fixes the incorrect documentation of `has_rich_text` that [shows `to_s` as producing HTML without layout](https://github.com/rails/rails/blob/main/actiontext/lib/action_text/attribute.rb#L20), documents the `without_layout` variant, and adds a sentence suggesting when each should be used."",2024-03-12T12:55:18Z,2024-03-12T12:55:24Z,""[{'id': 1180817762, 'node_id': 'MDU6TGFiZWwxMTgwODE3NzYy', 'url': 'https://api.github.com/repos/rails/rails/labels/actiontext', 'name': 'actiontext', 'color': '3bc667', 'default': False, 'description': ''}]""";;;;;
"2180953140,Fix exception raised from template should not show compiled code,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Fixes #51090 ;;;;;
;;;;;
This Pull Request has been created to fix exceptions raised from template shows the compiled code.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes `activesupport/lib/active_support/core_ext/erb/util.rb`;;;;;
;;;;;
### Additional information;;;;;
1. In this tokenize method we are not handling the text present after `%>` ;;;;;
2. Updated that method to handle text present at end.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-12T07:52:25Z,2024-03-21T17:49:16Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}]""";;;;;
"2180514773,Add composite key support to `Model.exists?`,""Fix #51295";;;;;
;;;;;
`.exists?` does not support composite primary key because it would [clash with the current expectation when passing an array.](https://github.com/rails/rails/blob/main/activerecord/lib/active_record/relation/finder_methods.rb#L351);;;;;
;;;;;
This PR would make it possible to pass a composite primary key by wrapping it in an array:;;;;;
;;;;;
```ruby;;;;;
CpkModel.exists?([[1,1]]) # as in `CpkModel.exists?([composite_primary_key])`;;;;;
```;;;;;
;;;;;
Incidentally, it would also allow searching with multiple keys without having to use the hash form:;;;;;
;;;;;
```ruby;;;;;
CpkModel.exists?([[1,1], [1,2], [3,1]])  ;;;;;
"RegularModel.exists?([[1,2,3]]) # Even works for non regular models! Generates: `SELECT 1 AS one FROM """"regular_models"""" WHERE """"users"""".""""id"""" IN (1, 2, 3)`";;;;;
``` ;;;;;
;;;;;
;;;;;
## Considerations;;;;;
;;;;;
This is a bit of hack and initially thought of answering #51295 by suggesting using the hash form instead, but after looking at what the hash form would look like for a primary key:;;;;;
;;;;;
```ruby;;;;;
CpkModel.exists?(CpkModel.primary_key => [[1,1]]) # You need to wrap the primary key in an array!;;;;;
```;;;;;
This is quite verbose. So perhaps there is value in this.;;;;;
I did not edit the documentation and changelog yet. Only the code, plus a couple tests. If this diff is deemed valuable I'll add the required edits.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-12T00:57:29Z,2024-03-12T01:06:49Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2179543988,Forked child processes created through rails runner throw error from ActiveRecord when exiting,""In Rails 7.1.3.2, child processes which were created using a fork call throw the following error when they are exiting:";;;;;
;;;;;
```;;;;;
.../activerecord-7.1.3.2/lib/active_record/connection_adapters/abstract/connection_pool.rb:197:in `active_connection?': undefined method `[]' for nil (NoMethodError);;;;;
;;;;;
        @thread_cached_conns[connection_cache_key(current_thread)];;;;;
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;;;;;
```;;;;;
;;;;;
These child processes are created using a fork call which does not take a block. Notably, if a block is passed to the fork call then the error does not occur.;;;;;
;;;;;
### Steps to reproduce;;;;;
```;;;;;
> ruby -v;;;;;
ruby 3.3.0 (2023-12-25 revision 5124f9ac75) [x86_64-linux];;;;;
;;;;;
> rails new fork_child_process -G -M -C -A -J -T ;;;;;
rails (7.1.3.2);;;;;
;;;;;
"> echo """"fork"""" > script.rb"; bundle exec rails runner script.rb;;;;
/home/gpallotta/.gem/gems/activerecord-7.1.3.2/lib/active_record/connection_adapters/abstract/connection_pool.rb:197:in `active_connection?': undefined method `[]' for nil (NoMethodError);;;;;
;;;;;
        @thread_cached_conns[connection_cache_key(current_thread)];;;;;
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;;;;;
        from /home/gpallotta/.gem/gems/activerecord-7.1.3.2/lib/active_record/connection_adapters/abstract/query_cache.rb:45:in `disable_query_cache!';;;;;
"	from /home/gpallotta/.gem/gems/activerecord-7.1.3.2/lib/active_record/query_cache.rb:33:in `block in complete'";;;;;
"	from /home/gpallotta/.gem/gems/activerecord-7.1.3.2/lib/active_record/query_cache.rb:33:in `each'";;;;;
"	from /home/gpallotta/.gem/gems/activerecord-7.1.3.2/lib/active_record/query_cache.rb:33:in `complete'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/execution_wrapper.rb:37:in `before'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:426:in `block in make_lambda'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:202:in `block (2 levels) in halting'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:707:in `block (2 levels) in default_terminator'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:706:in `catch'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:706:in `block in default_terminator'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:203:in `block in halting'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:598:in `block in invoke_before'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:598:in `each'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:598:in `invoke_before'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:109:in `run_callbacks'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/execution_wrapper.rb:143:in `complete'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/execution_wrapper.rb:137:in `complete!'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/execution_wrapper.rb:97:in `wrap'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/commands/runner/runner_command.rb:40:in `perform'";;;;;
"	from /home/gpallotta/.gem/gems/thor-1.3.1/lib/thor/command.rb:28:in `run'";;;;;
"	from /home/gpallotta/.gem/gems/thor-1.3.1/lib/thor/invocation.rb:127:in `invoke_command'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/command/base.rb:178:in `invoke_command'";;;;;
"	from /home/gpallotta/.gem/gems/thor-1.3.1/lib/thor.rb:527:in `dispatch'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/command/base.rb:73:in `perform'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/command.rb:71:in `block in invoke'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/command.rb:149:in `with_argv'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/command.rb:69:in `invoke'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/commands.rb:18:in `<main>'";;;;;
"	from /opt/ruby-3.3.0-1/lib/ruby/3.3.0/bundled_gems.rb:74:in `require'";;;;;
"	from /opt/ruby-3.3.0-1/lib/ruby/3.3.0/bundled_gems.rb:74:in `block (2 levels) in replace_require'";;;;;
"	from /home/gpallotta/.gem/gems/bootsnap-1.18.3/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:30:in `require'";;;;;
"	from bin/rails:4:in `<main>'";;;;;
;;;;;
>;;;;;
```;;;;;
;;;;;
If instead a block is given to the fork call, then no error occurs;;;;;
;;;;;
```;;;;;
"> echo """"fork {}"""" > script.rb"; bundle exec rails runner script.rb;;;;
;;;;;
>;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
The forked child process exits cleanly.;;;;;
;;;;;
### Actual behavior;;;;;
The forked child process exits with an error.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
"**Ruby version**: 3.3.0"",2024-03-11T16:17:12Z,2024-03-13T02:26:53Z,[]";;;;;
"2179242804,Missing Active Record encryption credential when using ActiveRecord::Encryption.without_encryption ,""### Steps to reproduce";;;;;
;;;;;
```ruby;;;;;
class SchluesselBrett < ApplicationRecord;;;;;
   encrypts :key ;;;;;
   def destroy;;;;;
     ActiveRecord::Encryption.without_encryption { super };;;;;
   end;;;;;
end;;;;;
;;;;;
Schluesselbrett.last.destroy;;;;;
```;;;;;
### Expected behavior;;;;;
Destroy should work as there are no hooks that depend on the encrypted column.;;;;;
;;;;;
We are using a custom key_provider that needs the user input of a Smartcard PIN every time an encrypted column is encrypted or decrypted.;;;;;
Destruction of a model should work without decrypting it first so that the PIN is not necessary (we accept the fact that we have to ensure ourselves that no hooks will require the encrypted field to be decrypted).;;;;;
In fact, the NullEncryptor that is used in without_encryption:;;;;;
;;;;;
```ruby;;;;;
        def without_encryption(&block);;;;;
          with_encryption_context encryptor: ActiveRecord::Encryption::NullEncryptor.new, &block;;;;;
        end;;;;;
```;;;;;
;;;;;
does not make use of the default key provider (whose initialization is the cause of the backtrace below) anyway.;;;;;
;;;;;
### Actual behavior;;;;;
```;;;;;
activerecord (7.1.3.2) lib/active_record/encryption/config.rb:43:in `block (2 levels) in <class:Config>';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/context.rb:38:in `build_default_key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/context.rb:25:in `key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/configurable.rb:17:in `key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/scheme.rb:92:in `default_key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/scheme.rb:53:in `key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:15:in `key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:147:in `decryption_options';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:90:in `block in decrypt';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/scheme.rb:69:in `with_context';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:15:in `with_context';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:85:in `decrypt';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:36:in `deserialize';;;;;
activemodel (7.1.3.2) lib/active_model/attribute.rb:175:in `type_cast';;;;;
activemodel (7.1.3.2) lib/active_model/attribute.rb:43:in `value';;;;;
activemodel (7.1.3.2) lib/active_model/attribute_set/builder.rb:43:in `fetch_value';;;;;
activerecord (7.1.3.2) lib/active_record/transactions.rb:421:in `block in restore_transaction_record_state';;;;;
activemodel (7.1.3.2) lib/active_model/attribute_set.rb:98:in `transform_values';;;;;
activemodel (7.1.3.2) lib/active_model/attribute_set.rb:98:in `map';;;;;
activerecord (7.1.3.2) lib/active_record/transactions.rb:420:in `restore_transaction_record_state';;;;;
activerecord (7.1.3.2) lib/active_record/transactions.rb:345:in `rolledback!';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:200:in `block in rollback_records';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:263:in `run_action_on_records';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:199:in `rollback_records';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:527:in `block in rollback_transaction';;;;;
activesupport (7.1.3.2) lib/active_support/concurrency/null_lock.rb:9:in `synchronize';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:520:in `rollback_transaction';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:539:in `rescue in block in within_new_transaction';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:538:in `block in within_new_transaction';;;;;
activesupport (7.1.3.2) lib/active_support/concurrency/null_lock.rb:9:in `synchronize';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:532:in `within_new_transaction';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction';;;;;
activerecord (7.1.3.2) lib/active_record/transactions.rb:361:in `with_transaction_returning_status';;;;;
activerecord (7.1.3.2) lib/active_record/transactions.rb:305:in `destroy';;;;;
```;;;;;
;;;;;
### Proposed solution;;;;;
;;;;;
local workaround is something along the lines of:;;;;;
;;;;;
```ruby;;;;;
module ActiveRecord;;;;;
  module Encryption;;;;;
    module Contexts;;;;;
...;;;;;
      class_methods do;;;;;
....  ;;;;;
        def without_encryption(&block);;;;;
          encryptor = ActiveRecord::Encryption::NullEncryptor.new;;;;;
          key_provider = ActiveRecord::Encryption::NullKeyProvider.new;;;;;
          ActiveRecord::Encryption.with_encryption_context(encryptor:, key_provider:, &block);;;;;
        end;;;;;
;;;;;
...;;;;;
;;;;;
    class NullKeyProvider;;;;;
    end;;;;;
```;;;;;
;;;;;
I'm happy to try to provide a pull request if there is hope that it will be accepted.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**:  3.2.2;;;;;
",2024-03-11T14:14:06Z,2024-04-04T11:55:19Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 126910270, 'node_id': 'MDU6TGFiZWwxMjY5MTAyNzA=', 'url': 'https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps', 'name': 'With reproduction steps', 'color': '009800', 'default': False, 'description': None}, {'id': 5511275119, 'node_id': 'LA_kwDNIULPAAAAAUh_Ym8', 'url': 'https://api.github.com/repos/rails/rails/labels/encryption', 'name': 'encryption', 'color': '8D3EA8', 'default': False, 'description': ''}]""";;;;;
"2179081656,Can't use Model.exists? with composite primary keys,""### Steps to reproduce";;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
require 'bundler/inline';;;;;
;;;;;
gemfile(true) do;;;;;
  source 'https://rubygems.org';;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
  gem 'rails';;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"  # gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
  gem 'sqlite3';;;;;
end;;;;;
;;;;;
require 'active_record';;;;;
require 'minitest/autorun';;;;;
require 'logger';;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
ActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:');;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :posts, force: true, primary_key: %i[user_id account_id] do |t|;;;;;
    t.integer 'user_id', null: false;;;;;
    t.integer 'account_id', null: false;;;;;
  end;;;;;
end;;;;;
;;;;;
class Post < ActiveRecord::Base;;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_association_stuff;;;;;
    Post.create!(user_id: 1, account_id: 1);;;;;
;;;;;
    assert_equal [1, 1], Post.find([1, 1]).id;;;;;
    assert_equal true, Post.exists?([1, 1]);;;;;
  end;;;;;
end;;;;;
;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
```exists?``` should return a boolean if a given row exist for this primary key, like it does for not composite keys.;;;;;
;;;;;
### Actual behavior;;;;;
```;;;;;
NoMethodError: undefined method `include?' for 1:Integer;;;;;
;;;;;
"        elsif statement.include?(""""?"""")";;;;;
                       ^^^^^^^^^;;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/sanitization.rb:167:in `sanitize_sql_array';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/sanitization.rb:37:in `sanitize_sql_for_conditions';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/relation/query_methods.rb:1513:in `build_where_clause';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/relation/query_methods.rb:943:in `where!';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/relation/finder_methods.rb:437:in `construct_relation_for_exists';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/relation/finder_methods.rb:366:in `exists?';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/querying.rb:23:in `exists?';;;;;
    bug_report.rb:40:in `test_association_stuff';;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**:  7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.1;;;;;
",2024-03-11T13:01:58Z,2024-03-20T01:49:50Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}]""";;;;;
"2177925782,Empty embeds when RichText is set to an empty content,""Fix #51269";;;;;
;;;;;
Action Text supports saving a RichText model with empty content. Passing _almost_ empty content (such as a space) flushes the embeds, but passing truly empty content does not. This defies expectations.;;;;;
;;;;;
This change ensures that the embeds are flushed when empty content is passed;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-10T22:05:51Z,2024-03-12T04:41:07Z,[{'id': 1180817762, 'node_id': 'MDU6TGFiZWwxMTgwODE3NzYy', 'url': 'https://api.github.com/repos/rails/rails/labels/actiontext', 'name': 'actiontext', 'color': '3bc667', 'default': False, 'description': ''}]""";;;;;
"2177865633,Using preload with composite keys can cause too many records to be read,""### Steps to reproduce";;;;;
;;;;;
Using `preload` with composite keys can cause more records to be read than are required - consider this test case:;;;;;
;;;;;
```ruby;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  gem """"activerecord"""", """"7.1.3.2""""";;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :nodes, primary_key: [:node_id, :node_version] do |t|;;;;;
    t.integer :node_id;;;;;
    t.integer :node_version;;;;;
  end;;;;;
;;;;;
  create_table :node_tags, primary_key: [:node_id, :node_version, :k], force: true do |t|;;;;;
    t.integer :node_id;;;;;
    t.integer :node_version;;;;;
    t.text :k;;;;;
  end;;;;;
end;;;;;
;;;;;
class Node < ActiveRecord::Base;;;;;
"  has_many :tags, class_name: """"NodeTag"""", query_constraints: [:node_id, :node_version], :inverse_of => :node";;;;;
end;;;;;
;;;;;
class NodeTag < ActiveRecord::Base;;;;;
  belongs_to :node, query_constraints: [:node_id, :node_version], :inverse_of => :tags;;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_preload;;;;;
    node = Node.create(id: [1, 1]);;;;;
"    node.tags.create(k: """"a"""")";;;;;
"    node.tags.create(k: """"b"""")";;;;;
    node = Node.create(id: [1, 2]);;;;;
"    node.tags.create(k: """"c"""")";;;;;
"    node.tags.create(k: """"d"""")";;;;;
    node = Node.create(id: [2, 1]);;;;;
"    node.tags.create(k: """"e"""")";;;;;
"    node.tags.create(k: """"f"""")";;;;;
;;;;;
    nodes = Node.preload(:tags);;;;;
              .where(node_id: 1, node_version: 2);;;;;
              .or(Node.where(node_id: 2, node_version: 1));;;;;
              .order(:node_id, :node_version);;;;;
;;;;;
    assert_equal 2, nodes.size;;;;;
;;;;;
    nodes.each do |node|;;;;;
      assert_equal 2, node.tags.size;;;;;
    end;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
The assertions pass, but if you look at the logged SQL for the preload you see this:;;;;;
;;;;;
```sql;;;;;
"SELECT """"node_tags"""".*";;;;;
"FROM """"node_tags""""";;;;;
"WHERE """"node_tags"""".""""node_id"""" IN (?, ?) AND """"node_tags"""".""""node_version"""" IN (?, ?)";;;;;
```;;;;;
;;;;;
where the bound ID values are 1 and 2 as are the bound version values.;;;;;
;;;;;
So not only will that read the tags for `[1, 2]` and `[2, 1]` as expected but it will also read the tags for `[1, 1]` which are not needed.;;;;;
;;;;;
Those records don't appear to get attached to any node so are presumably being discarded when the preload is matched to the original records.;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
The required records are preloaded.;;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
Extra records are preloaded.;;;;;
;;;;;
### System configuration;;;;;
;;;;;
**Rails version**: 7.1.3.2;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-10T19:14:55Z,2024-03-11T18:14:29Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2177504195,Expire caching when a download fail while proxying in ActiveStorage,""Fix #51284";;;;;
;;;;;
Both Proxy controllers in Active Storage set the caching headers early before streaming. ;;;;;
;;;;;
In some instances (see #51284), it is possible for the file download (from the service to server) to fail before we send the first byte to the client (response not yet committed). ;;;;;
;;;;;
In those instances, this change would invalidate the cache and return a better response status before closing the stream.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-10T03:28:10Z,2024-03-10T06:55:14Z,[{'id': 664533972, 'node_id': 'MDU6TGFiZWw2NjQ1MzM5NzI=', 'url': 'https://api.github.com/repos/rails/rails/labels/activestorage', 'name': 'activestorage', 'color': 'bfd4f2', 'default': False, 'description': None}]""";;;;;
"2175998435,Ensure image_processing is installed with Trix,""Currently if the Gemfile does not contain a commented out line for image_processing, or the line uses single, not double quotes, image_processing will not be installed and Trix will not be able to correctly handle image attachments.";;;;;
;;;;;
This ensures image_processing _is_ installed in those circumstances.;;;;;
;;;;;
<!--;;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
This Pull Request has been created because it is possible for the `bin/rails action_text:install` command to fail to add `image_processing` to the Gemfile if the default comment has been removed, or if the double quotes have been changed to single ones (perhaps by a Rubocop auto-fix).;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes the ActionText install script to more thoroughly ensure `image_processing` is installed.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-08T12:59:20Z,2024-03-08T13:29:29Z,[{'id': 1180817762, 'node_id': 'MDU6TGFiZWwxMTgwODE3NzYy', 'url': 'https://api.github.com/repos/rails/rails/labels/actiontext', 'name': 'actiontext', 'color': '3bc667', 'default': False, 'description': ''}]""";;;;;
"2175983514,ActiveStorage ProxyController sets Cache-Control headers on errors like FileNotFoundError,""### Steps to reproduce";;;;;
Ive observed occasional broken **representation** images on our site. After digging a little into this issue it became clear that the proxy cache in front of our application has cached a broken image. A cache purge always fixed it. ;;;;;
;;;;;
After digging a little deeper i think i found the source. The proxy cache is getting a `cache-control` header instructing it to do so by the ActiveStorage::Representations::ProxyController!;;;;;
;;;;;
Ive created a synthetic test which reproduces it. The response is successful with zero length and cache-control header set. The following test falsely passed!;;;;;
;;;;;
```ruby;;;;;
    ActiveStorage::Service::DiskService.any_instance.expects(:download).raises(ActiveStorage::FileNotFoundError);;;;;
    ;;;;;
"    get active_storage_image_url # """"/rails/active_storage/representations/proxy/...""""";;;;;
;;;;;
    assert_response :ok;;;;;
    assert_equal 'image/png', response.content_type;;;;;
"    assert_equal """"0"""", response.headers['Content-Length']";;;;;
    assert response.headers.key? 'ETag';;;;;
"    assert_equal """"max-age=3155695200, public"""", response.headers['Cache-Control']";;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
On an error like `ActiveStorage::FileNotFoundError` the response should not be successful nor should it instruct caches to cache that empty response.;;;;;
;;;;;
### Actual behavior;;;;;
On an error like `ActiveStorage::FileNotFoundError` the response is still successful (Statuscode: 200) and a cache-control header is instructing caches to cache this empty response.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.0.8;;;;;
;;;;;
**Ruby version**: 3.1.2;;;;;
",2024-03-08T12:51:45Z,2024-03-12T02:56:56Z,[{'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}, {'id': 664533972, 'node_id': 'MDU6TGFiZWw2NjQ1MzM5NzI=', 'url': 'https://api.github.com/repos/rails/rails/labels/activestorage', 'name': 'activestorage', 'color': 'bfd4f2', 'default': False, 'description': None}]""";;;;;
"2175446335,Move callsite for to lease_connection in AR::Sanitization up to `sanitize_sql_array`,""After looking at ways to refactor calls to `lease_connection`, this tiny PR came up for `sanitize_sql_array`";;;;;
"cc @byroot "",2024-03-08T07:24:29Z,2024-03-16T08:42:20Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2175354422,Transform attributes during `ActiveModel::Serialization::JSON#from_json`,""### Motivation / Background";;;;;
;;;;;
The problem;;;;;
---;;;;;
;;;;;
Loading JSON into an Active Model instance with;;;;;
`ActiveModel::Serializers:JSON#from_json` assumes that the property casings will match the class attribute casings. This works well with snake_casing, since idiomatic Ruby methods are snake_cased.;;;;;
;;;;;
When `#from_json` loads JSON properties that are camelCased, it silently ignores them:;;;;;
;;;;;
```ruby;;;;;
class Person;;;;;
  include ActiveModel::Serializers::JSON;;;;;
;;;;;
  attr_accessor :name, :born_on;;;;;
;;;;;
  def attributes=(hash);;;;;
"    hash.each { |key, value| send(""""#{key}="""", value) }";;;;;
  end;;;;;
end;;;;;
;;;;;
payload <<~JSON;;;;;
"  { """"name"""": """"Alice"""", """"bornOn"""": """"2024-03-08"""" }";;;;;
JSON;;;;;
;;;;;
person = Person.new.from_json(payload);;;;;
"person.name     # => """"Alice""""";;;;;
person.born_on  # => nil;;;;;
```;;;;;
;;;;;
### Detail;;;;;
;;;;;
The proposal;;;;;
---;;;;;
;;;;;
This commit proposes extending `#from_json` to accept a block. After the JSON string is decoded (and un-nested from its root, depending on the model's configuration), yield the `Hash` to a block if one is passed as an argument:;;;;;
;;;;;
```ruby;;;;;
payload <<~JSON;;;;;
"  { """"name"""": """"Alice"""", """"bornOn"""": """"2024-03-08"""" }";;;;;
JSON;;;;;
;;;;;
person = Person.new.from_json(payload) { _1.deep_transform_keys!(&:underscore) };;;;;
"person.name     # => """"Alice""""";;;;;
"person.born_on  # => """"2024-03-08""""";;;;;
```;;;;;
;;;;;
Supporting a block can be useful for context-specific overrides. If a class needs to provide a default transformation, it can override `#from_json`:;;;;;
;;;;;
```ruby;;;;;
class PersonFromCamelCaseAPI < Person;;;;;
  def from_json(*, &block);;;;;
    default_transform = proc { _1.deep_transform_keys!(&:underscore) };;;;;
;;;;;
    super(*, &(block || defaul_transform));;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
Without built-in support for transforming camelCased properties into snake_cased attributes, callers are responsible decoding the JSON themselves. In addition to the key transformations, they're also responsible for re-creating both the JSON decoding *and* the configurable root un-nesting provided by `#from_json`:;;;;;
;;;;;
```ruby;;;;;
payload <<~JSON;;;;;
"  { """"name"""": """"Alice"""", """"bornOn"""": """"2024-03-08"""" }";;;;;
JSON;;;;;
;;;;;
attributes = ActiveSupport::JSON.decode(payload);;;;;
attributes.deep_transform_keys!(&:underscore);;;;;
person = Person.new(attributes);;;;;
"person.name     # => """"Alice""""";;;;;
"person.born_on  # => """"2024-03-08""""";;;;;
;;;;;
nested_payload <<~JSON;;;;;
"  { """"person"""": { """"name"""": """"Alice"""", """"bornOn"""": """"2024-03-08"""" } }";;;;;
JSON;;;;;
;;;;;
attributes = ActiveSupport::JSON.decode(nested_payload);;;;;
attributes.deep_transform_keys!(&:underscore);;;;;
"person = Person.new(attributes[""""person""""])";;;;;
"person.name     # => """"Alice""""";;;;;
"person.born_on  # => """"2024-03-08""""";;;;;
```;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-08T06:18:38Z,2024-03-08T06:20:19Z,[{'id': 107190, 'node_id': 'MDU6TGFiZWwxMDcxOTA=', 'url': 'https://api.github.com/repos/rails/rails/labels/activemodel', 'name': 'activemodel', 'color': '00E5FF', 'default': False, 'description': None}]""";;;;;
"2174963549,Unnecessary auto save is triggered for polymorphic has_one defined in child class using single-table inheritance,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
This bug is directly related to https://github.com/rails/rails/issues/44986.;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :pictures, force: true do |t|;;;;;
    t.references :imageable, polymorphic: true;;;;;
  end;;;;;
;;;;;
  create_table :employees, force: true do |t|;;;;;
    t.string :type;;;;;
    t.string :name;;;;;
  end;;;;;
end;;;;;
;;;;;
class Picture < ActiveRecord::Base;;;;;
;;;;;
  belongs_to :imageable, polymorphic: true, optional: true;;;;;
;;;;;
  after_save :count_saves;;;;;
;;;;;
  def count_saves;;;;;
    @count ||= 0;;;;;
    @count += 1;;;;;
  end;;;;;
;;;;;
end;;;;;
;;;;;
class Employee < ActiveRecord::Base;;;;;
;;;;;
end;;;;;
;;;;;
class CaliforniaEmployee < Employee;;;;;
;;;;;
  has_one :picture, as: :imageable;;;;;
;;;;;
end;;;;;
;;;;;
class ArizonaEmployee < Employee;;;;;
;;;;;
  has_one :picture, as: :imageable;;;;;
;;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
;;;;;
  def test_association_not_saved_on_update;;;;;
    picture = Picture.create!;;;;;
;;;;;
"    cali_employee = CaliforniaEmployee.create!(name: """"Cali"""", picture: picture)";;;;;
;;;;;
"    cali_employee.update!(name: """"Cali Fornia"""")";;;;;
;;;;;
"    assert_equal """"Employee"""", picture.imageable_type";;;;;
    assert_equal cali_employee.id, picture.imageable_id;;;;;
;;;;;
    # Saves on create of picture and create of employee;;;;;
    assert_equal 2, picture.instance_variable_get(:@count);;;;;
  end;;;;;
;;;;;
  def test_association_saved_on_actual_model_change;;;;;
    picture = Picture.create!;;;;;
;;;;;
"    CaliforniaEmployee.create!(name: """"Cali"""", picture: picture)";;;;;
"    az_employee = ArizonaEmployee.create!(name: """"Arizona"""")";;;;;
;;;;;
    az_employee.update!(picture: picture);;;;;
;;;;;
"    assert_equal """"Employee"""", picture.imageable_type";;;;;
    assert_equal az_employee.id, picture.imageable_id;;;;;
;;;;;
    # Saves on create of picture, create of cali employee, and update to az employee;;;;;
    assert_equal 3, picture.instance_variable_get(:@count);;;;;
  end;;;;;
;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
<!-- Tell us what should happen -->;;;;;
;;;;;
There is no reason to trigger a save on the Picture record when updating a field on CaliforniaEmployee, since the picture record is already correctly pointing at the existing Employee.;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
;;;;;
`inverse_polymorphic_association_changed?` is returning true for this use case causing a subsequent autosave to be triggered on Picture, leading to a failure in both test cases:;;;;;
;;;;;
```;;;;;
Failure:;;;;;
BugTest#test_association_not_saved_on_update [rails-issue.rb:73]:;;;;;
Expected: 2;;;;;
  Actual: 3;;;;;
;;;;;
Failure:;;;;;
BugTest#test_association_saved_on_actual_model_change [rails-issue.rb:85]:;;;;;
Expected: 3;;;;;
  Actual: 4;;;;;
```;;;;;
;;;;;
### Additional Context;;;;;
;;;;;
This appears to specifically fail when the has_one is defined on a child class using Single-table Inheritance. If the `has_one` in the test case above is moved up to the `Employee` model, then the expectation will pass.;;;;;
;;;;;
The issue appears to be here: https://github.com/rails/rails/blob/83702d64c80637cc0debc3917c3419d327f8ee1b/activerecord/lib/active_record/autosave_association.rb#L495-L497.;;;;;
;;;;;
That currently reads the class for the record from the `foreign_type` and then attempts to convert it to the right class for polymorphic relationships, but I believe this is unnecessary, since it already would have been converted to the correct type when set.;;;;;
;;;;;
Instead `reflection.active_record` should actually be updated to use the `polymorphic_name` otherwise we risk looking at the wrong model name that would be ultimately saved.;;;;;
;;;;;
Updating line 497 to this gets these test cases passing for me:;;;;;
;;;;;
```;;;;;
reflection.active_record.polymorphic_name != class_name;;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2, main;;;;;
;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-07T22:52:04Z,2024-03-18T17:47:48Z,[]
2173610664,Fix redundant resource_route Invocations in scaffold generator,### Motivation / Background";;;;;
;;;;;
This PR comes form [this comment](https://github.com/rails/rails/pull/50335#pullrequestreview-1776597506). The rails generate scaffold command triggers the resource_route hook twice.;;;;;
;;;;;
```;;;;;
% bin/rails generate scaffold Post name:string;;;;;
      invoke  active_record;;;;;
      create    db/migrate/20240303140443_create_posts.rb;;;;;
      create    app/models/post.rb;;;;;
      invoke    test_unit;;;;;
      create      test/models/post_test.rb;;;;;
      create      test/fixtures/posts.yml;;;;;
      invoke  resource_route;;;;;
       route    resources :posts;;;;;
      invoke  scaffold_controller;;;;;
      create    app/controllers/posts_controller.rb;;;;;
      invoke    erb;;;;;
      create      app/views/posts;;;;;
      create      app/views/posts/index.html.erb;;;;;
      create      app/views/posts/edit.html.erb;;;;;
      create      app/views/posts/show.html.erb;;;;;
      create      app/views/posts/new.html.erb;;;;;
      create      app/views/posts/_form.html.erb;;;;;
      create      app/views/posts/_post.html.erb;;;;;
      invoke    resource_route;;;;;
      invoke    test_unit;;;;;
      create      test/controllers/posts_controller_test.rb;;;;;
      create      test/system/posts_test.rb;;;;;
      invoke    helper;;;;;
      create      app/helpers/posts_helper.rb;;;;;
      invoke      test_unit;;;;;
      invoke    jbuilder;;;;;
      create      app/views/posts/index.json.jbuilder;;;;;
      create      app/views/posts/show.json.jbuilder;;;;;
      create      app/views/posts/_post.json.jbuilder;;;;;
```;;;;;
;;;;;
Despite setting the --skip-routes option, which is a feature of the ScaffoldControllerGenerator designed to prevent route generation, the command still produces routes.;;;;;
;;;;;
```;;;;;
% bin/rails g scaffold Post name:string --skip-routes;;;;;
      invoke  active_record;;;;;
      create    db/migrate/20240306035406_create_posts.rb;;;;;
      create    app/models/post.rb;;;;;
      invoke    test_unit;;;;;
      create      test/models/post_test.rb;;;;;
      create      test/fixtures/posts.yml;;;;;
      invoke  resource_route;;;;;
       route    resources :posts;;;;;
      invoke  scaffold_controller;;;;;
      create    app/controllers/posts_controller.rb;;;;;
      invoke    erb;;;;;
      create      app/views/posts;;;;;
      create      app/views/posts/index.html.erb;;;;;
      create      app/views/posts/edit.html.erb;;;;;
      create      app/views/posts/show.html.erb;;;;;
      create      app/views/posts/new.html.erb;;;;;
      create      app/views/posts/_form.html.erb;;;;;
      create      app/views/posts/_post.html.erb;;;;;
      invoke    resource_route;;;;;
      invoke    test_unit;;;;;
      create      test/controllers/posts_controller_test.rb;;;;;
      create      test/system/posts_test.rb;;;;;
      invoke    helper;;;;;
      create      app/helpers/posts_helper.rb;;;;;
      invoke      test_unit;;;;;
      invoke    jbuilder;;;;;
      create      app/views/posts/index.json.jbuilder;;;;;
      create      app/views/posts/show.json.jbuilder;;;;;
      create      app/views/posts/_post.json.jbuilder;;;;;
```;;;;;
;;;;;
### Detail;;;;;
Following three parts of the code are related to multiple invocation of resource_route.;;;;;
;;;;;
- `hook_for :resource_route` within the ResourceGenerator, from which the ScaffoldGenerator inherits;;;;;
- `class_option :resource_route` in ScaffoldGenerator;;;;;
- `hook_for :resource_route` in ScaffoldControllerGenerator which is invoked by `hook_for :scaffold_controller` in ScaffoldGenerator;;;;;
;;;;;
The resource_route hook within ScaffoldGenerator has been removed with remove_hook_for to ensure that the hook is called exclusively within the scaffold_controller hook.;;;;;
The `class_option :resource_route, type: :boolean` has also been removed. Despite the removal of the resource_route hook in ScaffoldGenerator, invoking `class_option :resource_route` was still indirectly triggering resource_route.;;;;;
This occurred due to a combination of the following reasons:;;;;;
;;;;;
- generator classes, which inherit from Thor::Group, execute all defined public instance methods upon command execution.;;;;;
- the hook_for method utilizes invoke_from_option, a method defined in Thor::Group to dynamically defines an invoke_from_option_* method at runtime, which persists even if remove_hook_for is called.;;;;;
  - https://github.com/rails/thor/blob/a43d92fad7ebd77d359b7b96eb3db8a73ef9057c/lib/thor/group.rb#L124;;;;;
- the invoke_from_option_* method returns early when the option isn't available but `class_option :resource_route` in ScaffoldGeneratore makes the option available and Rails sets the resource_route option as default.;;;;;
  - https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/railties/lib/rails/generators.rb#L56;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-07T11:11:06Z,2024-03-30T06:24:07Z,[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2173181848,Kebabcase puma-dev configuration suggestion in bin/seutp,""Following up on #51266. Trying to make sure the suggested `puma-dev` setup introduced in #51088 works out of the box.";;;;;
;;;;;
Creating a fresh app with `rails new --main AppName` (or any multi-word app name) will still give us the error message:;;;;;
;;;;;
![image](https://github.com/rails/rails/assets/986290/7dd53909-8566-45ac-960c-84b58f3526a9);;;;;
;;;;;
"This PR simply kebabcases the `puma-dev` symlink suggested in `bin/setup`, making it work without additional configuration."",2024-03-07T07:40:07Z,2024-03-07T07:40:11Z,""[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2172885664,Add escape_html_entities option to JSON encoder,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
This Pull Request has been created because I sometimes want to override the global `Encoding.escape_html_entities_in_json` option for specific call sites.;;;;;
;;;;;
Where I work, we tend to embed JSON in HTML, so the default html entity escaping is appreciated. But there are some cases where we'd like to turn it off.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes ActiveSupport's JSON encoding code to accept an optional flag for whether or not to escape HTML entities (`escape_html_entities`). If not supplied, the existing global configuration flag will be used instead.;;;;;
;;;;;
The idea is to make the following possible:;;;;;
;;;;;
```ruby;;;;;
class MyController < ApplicationController;;;;;
  def index;;;;;
    render json: { some: '<data>' }, escape_html_entities: false;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->;;;;;
Sorry to show up with a code change out of the blue. I did a weird monkey patch like this in our codebase at work to solve a problem, and it seemed easy to upstream so I'm submitting this PR just in case. No hard feelings if it doesn't seem reasonable.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [ x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [ x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
;;;;;
",2024-03-07T03:49:36Z,2024-03-07T03:49:40Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}]""";;;;;
"2172771713,Enable Hash#compact_blank inside ActiveSupport::LogSubscriber,""### Motivation / Background";;;;;
Using ActiveSupport::LogSubscriber#color inside a custom log subscriber causes NoMethodError.;;;;;
;;;;;
### Detail;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  gem """"activesupport""""";;;;;
end;;;;;
;;;;;
"require """"active_support""""";;;;;
;;;;;
class TestLogSubscriber < ActiveSupport::LogSubscriber;;;;;
  attach_to :test;;;;;
;;;;;
  def hi(event);;;;;
    info(color(event.payload[:message], GREEN));;;;;
  end;;;;;
;;;;;
  private;;;;;
    def log_exception(name, e);;;;;
      super;;;;;
      raise e;;;;;
    end;;;;;
end;;;;;
;;;;;
ActiveSupport::LogSubscriber.logger = ActiveSupport::Logger.new(STDOUT);;;;;
"ActiveSupport::Notifications.instrument(""""hi.test"""", message: """"Hello!"""")";;;;;
```;;;;;
;;;;;
```;;;;;
/rails/activesupport/lib/active_support/log_subscriber.rb:193:in `mode_from': undefined method `compact_blank' for an instance of Hash (NoMethodError);;;;;
    ;;;;;
      modes = MODES.values_at(*options.compact_blank.keys);;;;;
                                      ^^^^^^^^^^^^^^;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
I have encountered this while using kredis locally, like;;;;;
;;;;;
```;;;;;
$ cd kredis;;;;;
$ bin/console;;;;;
"irb(main):001> Kredis.string """"mystring""""";;;;;
"Could not log """"meta.kredis"""" event. NoMethodError: undefined method `compact_blank' for an instance of Hash";;;;;
```;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-07T01:39:16Z,2024-03-11T23:11:21Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}]""";;;;;
"2172603548,ActionText::RichText attachments not cleaned up when content made empty,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails""""";;;;;
;;;;;
  gem 'debug';;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"  # gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record/railtie""""";;;;;
"require """"active_storage/engine""""";;;;;
"require """"action_text/engine""""";;;;;
"require """"tmpdir""""";;;;;
;;;;;
class TestApp < Rails::Application;;;;;
  config.load_defaults Rails::VERSION::STRING.to_f;;;;;
;;;;;
  config.root = __dir__;;;;;
"  config.hosts << """"example.org""""";;;;;
  config.eager_load = false;;;;;
"  config.session_store :cookie_store, key: """"cookie_store_key""""";;;;;
"  config.secret_key_base = """"secret_key_base""""";;;;;
;;;;;
  config.logger = Logger.new($stdout);;;;;
  Rails.logger  = config.logger;;;;;
;;;;;
  config.active_storage.service = :local;;;;;
  config.active_storage.service_configurations = {;;;;;
    local: {;;;;;
      root: Dir.tmpdir,;;;;;
"      service: """"Disk""""";;;;;
    };;;;;
  };;;;;
end;;;;;
;;;;;
"ENV[""""DATABASE_URL""""] = """"sqlite3::memory:""""";;;;;
;;;;;
Rails.application.initialize!;;;;;
;;;;;
"require ActiveStorage::Engine.root.join(""""db/migrate/20170806125915_create_active_storage_tables.rb"""").to_s";;;;;
"require ActionText::Engine.root.join(""""db/migrate/20180528164100_create_action_text_tables.rb"""").to_s";;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  CreateActiveStorageTables.new.change;;;;;
  CreateActionTextTables.new.change;;;;;
;;;;;
  create_table :users, force: true;;;;;
end;;;;;
;;;;;
class User < ActiveRecord::Base;;;;;
  has_rich_text :description;;;;;
end;;;;;
;;;;;
"require """"minitest/autorun""""";;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_rich_text_embed_behaviour;;;;;
    attached = ActiveStorage::Blob.create_and_upload!(;;;;;
      io: ::StringIO.new('dummy'),;;;;;
"      filename: 'dummy.txt""""',";;;;;
      content_type: 'text/plain',;;;;;
    );;;;;
;;;;;
"    user = User.create!(description: ActionText::Content.new(""""hello"""").append_attachables(attached))";;;;;
;;;;;
    assert_equal 1, user.description.embeds.size;;;;;
;;;;;
    user.description = ActionText::Content.new('');;;;;
;;;;;
    user.save;;;;;
;;;;;
    assert_empty user.description.embeds;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
When the body of an ActionText::RichText object is set to the empty string.  I would expect attachments to be cleaned up.;;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
ActiveStorage attachments `ActionText::RichText.embeds` are retained until the body is modified to contain some data ;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: Rails 7.1.3.2 [source code is unchanged on mainline](https://github.com/rails/rails/blob/2fa3294618eba90e095020620ca9584190c2ec8e/actiontext/app/models/action_text/rich_text.rb#L55) ;;;;;
;;;;;
**Ruby version**: ruby 3.2.3;;;;;
",2024-03-06T23:13:33Z,2024-03-12T02:56:38Z,[{'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}, {'id': 1180817762, 'node_id': 'MDU6TGFiZWwxMTgwODE3NzYy', 'url': 'https://api.github.com/repos/rails/rails/labels/actiontext', 'name': 'actiontext', 'color': '3bc667', 'default': False, 'description': ''}]""";;;;;
"2171578747,ActionCable::Channel::Broadcasting.serialize_broadcasting leads to unintentional very wide broadcast,""### Steps to reproduce";;;;;
Please consider the following code:;;;;;
;;;;;
```ruby;;;;;
class User < ApplicationRecord;;;;;
  # ...;;;;;
end;;;;;
;;;;;
class Foo;;;;;
  include ActiveModel::Model;;;;;
;;;;;
  def initialize(user:, type:);;;;;
    @user = user;;;;;
    @type = type.to_s;;;;;
  end;;;;;
;;;;;
  def self.find(foo_id);;;;;
"    id, type = foo_id.split("""":"""", 2)";;;;;
    new(user: User.find(id), type: type);;;;;
  end;;;;;
;;;;;
  def id;;;;;
"    """"#{@user.id}:#{type}""""";;;;;
  end;;;;;
;;;;;
  # ... more methods that make Foo actually useful;;;;;
end;;;;;
;;;;;
class FooChannel < ApplicationCable::Channel;;;;;
  def subscribed;;;;;
    foo = Foo.find(params[:foo_id]);;;;;
    authorize foo, :subscribe? # (Pundit);;;;;
    stream_for foo;;;;;
  end;;;;;
;;;;;
  def self.notify_patch(foo);;;;;
"    payload = { event: :patched, id: foo.id, type: """"Foo"""" }";;;;;
    broadcast_to(foo, payload);;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
It is possible to subscribe to patch-events for instances of Foo.;;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
So what happens is that we will fetch the `foo`. This is successful; no exception is raised. We then call `authorize` to see if the `current_user` may subscribe to events on this channel for this resource. `authorize` will raise an exception if it is not allowed; in this example it doesn't; we're on the happy path. And after that we call `stream_for` which **seems** to work fine... We can subscribe and we can call `notify_patch` to send our events.;;
;;;;;
"But there is a subtle issue with this code. `stream_for` has called `broadcasting_for` to generate a unique ID for the stream, but that ID appears to be `""""FooChannel:nil""""` which is really not unique at all!";;;;;
;;;;;
`broadcast_to` also calls `broadcasting_for` returning the same not-so-unique ID. The result is that **every `FooChannel.notify_patch`-event** gets broadcasted to **all `FooChannel`-subscribers**.;;;;;
;;;;;
The reason for this is easy to find:;;;;;
[`broadcasting_for`](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/actioncable/lib/action_cable/channel/broadcasting.rb#L24) calls [`serialize_broadcasting`](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/actioncable/lib/action_cable/channel/broadcasting.rb#L29) which in turn calls [`to_param`](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/actioncable/lib/action_cable/channel/broadcasting.rb#L36) on our `foo`-object. Our foo-object isn't persisted, or in other words: `foo#persisted?` implemented by [`ActiveModel::API#persisted?`](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/activemodel/lib/active_model/api.rb#L95) returns `false`. This makes `foo.to_param` implemented by [`ActiveModel::Conversion#to_param`](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/activemodel/lib/active_model/conversion.rb#L90) return `nil`.;;;;;
;;;;;
Quick solutions for this are easy to produce:;;;;;
;;;;;
1. We could update our implementation of `persisted?`;;;;;
;;;;;
```ruby;;;;;
class Foo;;;;;
  def persisted?;;;;;
    @user.persisted?;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
2. we could also call `stream_for foo.id` and `broadcast_to(foo.id, payload)`;;;;;
3. we could also rewrite `Foo#to_param`;;;;;
4. etcetera.;;;;;
;;;;;
What's *not* easy is figuring out that you are in fact broadcasting all events to everyone.  We gave it some thought but we didn't come up with a solid solution that would prevent this from happening again with the next channel. (`BarChannel` obviously 😄). It's really easy to make the same mistake again and it's not easy to detect if you do.;;;;;
;;;;;
The root cause, from one point of view, is that fetching and authorization are ultimately dependent on an `id`, but that streaming uses `#to_param`. If it could call `#id` instead this would not have happened; but it can't, because `stream_for(model, callback = nil, coder: nil, &block)` basically allows anything as its `model`-parameter. Is this intentional?;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-06T13:57:46Z,2024-03-06T13:57:46Z,[]
2170621291,Default Active Storage strict loading to strict_loading_by_default,### Motivation / Background";;;;;
;;;;;
While Active Storage supports strict loading, it [defaults to false](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/activestorage/lib/active_storage/attached/model.rb#L106). This can be problematic in applications that enforce strict loading by default. It can be assumed that `strict_loading_by_default` includes Active Storage attachments, leading to n+1 issues.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes the default of the `strict_loading` keyword parameter for `has_one_attached` and  `has_many_attached` to use the model's `strict_loading_by_default` to create a consistent developer experience.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-06T04:39:05Z,2024-03-06T04:39:09Z,[{'id': 664533972, 'node_id': 'MDU6TGFiZWw2NjQ1MzM5NzI=', 'url': 'https://api.github.com/repos/rails/rails/labels/activestorage', 'name': 'activestorage', 'color': 'bfd4f2', 'default': False, 'description': None}]""";;;;;
"2170562786,Add support for pattern matching for parameters,""### Motivation / Background";;;;;
;;;;;
I have some RESTful endpoints where it makes sense to pattern match params to deal with different shape of incoming payloads, as illustrated in this endpoint:;;;;;
;;;;;
```ruby;;;;;
def create;;;;;
  case params;;;;;
  in interview_time_availability: { interview_time_id:, person_id: };;;;;
    @interview_time_availabilities.create! interview_time_id:, person_id:;;;;;
  in interview_time: { id: };;;;;
    @students.each do |student|;;;;;
      student.interview_time_availabilities.create interview_time_id: id;;;;;
    end;;;;;
  end;;;;;
;;;;;
  redirect_to students_interview_time_availabilities_path;;;;;
end;;;;;
```;;;;;
;;;;;
### Detail;;;;;
;;;;;
This PR adds a `deconstruct_keys(keys)` method on `StrongParameters` that called `to_unsafe_h` for pattern matching:;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [X] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-06T03:36:54Z,2024-03-11T16:19:18Z,[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}]""";;;;;
"2170466905,has_many relation with joins adding redundant inverse inner join,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
Have the following set of related models, and use the `reverse_dependencies` relation. Observe (via the inline comments in the test case below) that there is an unnecessary/redundant join;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
#!/usr/bin/env ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile do;;;;;
"  source """"https://rubygems.org""""";;;;;
  ;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
  ;;;;;
"  gem """"rails"""", """"~> 7.1.0""""";;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"# gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
  ;;;;;
"  gem """"sqlite3""""";;;;;
  ;;;;;
"  gem 'anbt-sql-formatter', require: """"anbt-sql-formatter/formatter""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :rubygems, force: true do |t|;;;;;
  end;;;;;
  ;;;;;
  create_table :versions, force: true do |t|;;;;;
    t.belongs_to :rubygem;;;;;
    t.integer :position;;;;;
    t.boolean :indexed;;;;;
  end;;;;;
  ;;;;;
  create_table :gem_downloads, force: true do |t|;;;;;
    t.belongs_to :rubygem;;;;;
    t.belongs_to :version, null: true;;;;;
    t.integer :count;;;;;
  end;;;;;
  ;;;;;
  create_table :dependencies, force: true do |t|;;;;;
    t.belongs_to :rubygem;;;;;
    t.belongs_to :version;;;;;
  end;;;;;
end;;;;;
;;;;;
class Rubygem < ActiveRecord::Base;;;;;
  has_many :incoming_dependencies, lambda {;;;;;
                                      joins(:version).where(versions: { indexed: true, position: 0 });;;;;
"                                    }, class_name: """"Dependency"""", inverse_of: :rubygem";;;;;
  has_many :reverse_dependencies, through: :incoming_dependencies, source: :version_rubygem;;;;;
  ;;;;;
  has_many :versions;;;;;
  ;;;;;
  has_many :incoming_dependencies_no_join, lambda {;;;;;
                                      where(versions: { indexed: true, position: 0 });;;;;
"                                    }, class_name: """"Dependency"""", inverse_of: :rubygem";;;;;
  has_many :reverse_dependencies_no_join, through: :incoming_dependencies_no_join, source: :version_rubygem;;;;;
end;;;;;
;;;;;
class Dependency < ActiveRecord::Base;;;;;
  belongs_to :rubygem, optional: true;;;;;
  belongs_to :version;;;;;
  has_one :version_rubygem, through: :version, source: :rubygem;;;;;
end;;;;;
;;;;;
class Version < ActiveRecord::Base;;;;;
  belongs_to :rubygem, touch: true;;;;;
"  has_many :dependencies, -> { order(""""rubygems.name ASC"""").includes(:rubygem) }, dependent: :destroy, inverse_of: :version";;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_assoc_1;;;;;
    rubygem1 = Rubygem.create!;;;;;
    v1 = Version.create!(indexed: true, position: 0, rubygem: rubygem1);;;;;
    rubygem2 = Rubygem.create!;;;;;
    v2 = Version.create!(indexed: true, position: 0, rubygem: rubygem2);;;;;
    d = v2.dependencies.create!(rubygem: rubygem1);;;;;
    ;;;;;
    puts Rails.version;;;;;
    ;;;;;
    # SELECT;;;;;
"    #   """"rubygems"""" . *";;;;;
    #   FROM;;;;;
"    #   """"rubygems""""";;;;;
"    #   INNER JOIN """"versions""""";;;;;
"    #     ON """"rubygems"""".""""id"""" = """"versions"""".""""rubygem_id""""";;;;;
"    #   INNER JOIN """"dependencies""""";;;;;
"    #     ON """"versions"""".""""id"""" = """"dependencies"""".""""version_id""""";;;;;
"    #   INNER JOIN """"versions"""" """"versions_dependencies""""";;;;;
"    #     ON """"versions_dependencies"""".""""id"""" = """"dependencies"""".""""version_id""""";;;;;
    #   WHERE;;;;;
"    #   """"dependencies"""".""""rubygem_id"""" = ?";;;;;
"    #   AND """"versions"""".""""indexed"""" = ?";;;;;
"    #   AND """"versions"""".""""position"""" = ?";;;;;
      ;;;;;
    puts mu_pp(rubygem1.reverse_dependencies.arel);;;;;
    ;;;;;
    assert_equal [rubygem2], rubygem1.reverse_dependencies;;;;;
    assert_equal rubygem1.reverse_dependencies_no_join, rubygem1.reverse_dependencies;;;;;
    ;;;;;
    # Failure:;;;;;
    # BugTest#test_assoc_1 [Untitled.rb:118]:;;;;;
    # --- expected;;;;;
    # +++ actual;;;;;
    # @@ -109,6 +109,53 @@;;;;;
    #           #<ActiveRecord::TypeCaster::Map:0xXXXXXX;;;;;
    #           @klass=;;;;;
    #           Dependency(id: integer, rubygem_id: integer, version_id: integer)>>,;;;;;
"    # +               name=""""version_id"""">>>>,";;;;;
    # +        #<Arel::Nodes::InnerJoin:0xXXXXXX;;;;;
    # +         @left=;;;;;
    # +          #<Arel::Nodes::TableAlias:0xXXXXXX;;;;;
    # +           @left=;;;;;
    # +            #<Arel::Table:0xXXXXXX;;;;;
    # +             @klass=;;;;;
    # +              Version(id: integer, rubygem_id: integer, position: integer, indexed: boolean),;;;;;
"    # +             @name=""""versions"""",";;;;;
    # +             @table_alias=nil,;;;;;
    # +             @type_caster=;;;;;
    # +              #<ActiveRecord::TypeCaster::Map:0xXXXXXX;;;;;
    # +               @klass=;;;;;
    # +                Version(id: integer, rubygem_id: integer, position: integer, indexed: boolean)>>,;;;;;
"    # +           @right=""""versions_dependencies"""">,";;;;;
    # +         @right=;;;;;
    # +          #<Arel::Nodes::On:0xXXXXXX;;;;;
    # +           @expr=;;;;;
    # +            #<Arel::Nodes::Equality:0xXXXXXX;;;;;
    # +             @left=;;;;;
    # +              #<struct Arel::Attributes::Attribute;;;;;
    # +               relation=;;;;;
    # +                #<Arel::Nodes::TableAlias:0xXXXXXX;;;;;
    # +                 @left=;;;;;
    # +                  #<Arel::Table:0xXXXXXX;;;;;
    # +                   @klass=;;;;;
    # +                    Version(id: integer, rubygem_id: integer, position: integer, indexed: boolean),;;;;;
"    # +                   @name=""""versions"""",";;;;;
    # +                   @table_alias=nil,;;;;;
    # +                   @type_caster=;;;;;
    # +                    #<ActiveRecord::TypeCaster::Map:0xXXXXXX;;;;;
    # +                     @klass=;;;;;
    # +                      Version(id: integer, rubygem_id: integer, position: integer, indexed: boolean)>>,;;;;;
"    # +                 @right=""""versions_dependencies"""">,";;;;;
"    # +               name=""""id"""">,";;;;;
    # +             @right=;;;;;
    # +              #<struct Arel::Attributes::Attribute;;;;;
    # +               relation=;;;;;
    # +                #<Arel::Table:0xXXXXXX;;;;;
    # +                 @klass=;;;;;
    # +                  Dependency(id: integer, rubygem_id: integer, version_id: integer),;;;;;
"    # +                 @name=""""dependencies"""",";;;;;
    # +                 @table_alias=nil,;;;;;
    # +                 @type_caster=;;;;;
    # +                  #<ActiveRecord::TypeCaster::Map:0xXXXXXX;;;;;
    # +                   @klass=;;;;;
    # +                    Dependency(id: integer, rubygem_id: integer, version_id: integer)>>,;;;;;
"    #         name=""""version_id"""">>>>]>,";;;;;
    #   @wheres=;;;;;
    #     [#<Arel::Nodes::And:0xXXXXXX;;;;;
    # @@ -213,6 +260,8 @@;;;;;
"    #     ON """"rubygems"""".""""id"""" = """"versions"""".""""rubygem_id""""";;;;;
"    #   INNER JOIN """"dependencies""""";;;;;
"    #     ON """"versions"""".""""id"""" = """"dependencies"""".""""version_id""""";;;;;
"    # +    INNER JOIN """"versions"""" """"versions_dependencies""""";;;;;
"    # +      ON """"versions_dependencies"""".""""id"""" = """"dependencies"""".""""version_id""""";;;;;
    #   WHERE;;;;;
"    #   """"dependencies"""".""""rubygem_id"""" = ?";;;;;
"    #   AND """"versions"""".""""indexed"""" = ?";;;;;
      ;;;;;
    assert_equal rubygem1.reverse_dependencies_no_join.arel.ast, rubygem1.reverse_dependencies.arel.ast;;;;;
  end;;;;;
  ;;;;;
;;;;;
  def test_assoc_2;;;;;
    rubygem1 = Rubygem.create!;;;;;
    v1 = Version.create!(indexed: true, position: 0, rubygem: rubygem1);;;;;
    rubygem2 = Rubygem.create!;;;;;
    v2 = Version.create!(indexed: true, position: 0, rubygem: rubygem2);;;;;
    d = v2.dependencies.create!(rubygem: rubygem1);;;;;
    ;;;;;
    assert_equal [d], rubygem1.incoming_dependencies;;;;;
    # shows that the joins is necessary;;;;;
    assert_raises(ActiveRecord::StatementInvalid) { rubygem1.incoming_dependencies_no_join.to_a };;;;;
  end;;;;;
  ;;;;;
  def mu_pp(obj);;;;;
    case obj;;;;;
    when Arel::Nodes::SelectStatement;;;;;
      rule = AnbtSql::Rule.new;;;;;
      rule.keyword = AnbtSql::Rule::KEYWORD_UPPER_CASE;;;;;
"      rule.kw_multi_words << """"INNER JOIN""""";;;;;
"      rule.kw_nl_x << """"INNER JOIN""""";;;;;
"      rule.indent_string = """"  """"";;;;;
      ;;;;;
"      [""""AST:"""", obj.pretty_inspect, """"SQL:"""",";;;;;
"        AnbtSql::Formatter.new(rule).format(obj.to_sql)].join(""""\n\n"""")";;;;;
    else;;;;;
      obj.pretty_inspect;;;;;
    end;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
"The additional join should not be added, since it's an inner join and the `""""versions"""".""""id"""" = """"dependencies"""".""""version_id""""` restriction guarantees it does not add any additional filtering";;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
"There is an unused join to `""""versions"""" """"versions_dependencies""""`";;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.3.0;;;;;
",2024-03-06T01:49:42Z,2024-03-06T01:49:42Z,[]
2169291575,ActiveRecord::Encryption is encrypting/filtering other similar named attributes,### Steps to reproduce";;;;;
;;;;;
#NOM?;;;;;
```bash;;;;;
  bin/rails g model User first_name last_name email other_first_name;;;;;
  bin/rails db:migrate;;;;;
```;;;;;
#NOM?;;;;;
```ruby;;;;;
User.encrypts(:first_name);;;;;
```;;;;;
;;;;;
#NOM?;;;;;
```ruby;;;;;
"user = User.new(first_name: """"Hello"""", last_name: """"World"""", other_first_name: """"Hi"""")";;;;;
;;;;;
# This outputs;;;;;
"=> #<User:0x000000010c5ea648 id: nil, first_name: """"[FILTERED]"""", last_name: """"World"""", email: nil, other_first_name: """"[FILTERED]"""", created_at: nil, updated_at: nil>";;;;;
;;;;;
# Encrypted attributes only has :first_name in the set;;;;;
User.encrypted_attributes;;;;;
=> <Set: {:first_name}>;;;;;
```;;;;;
"<img width=""""654"""" alt=""""Screenshot 2024-03-05 at 7 21 18 PM"""" src=""""https://github.com/rails/rails/assets/27268721/bbb18517-a068-4982-97ea-39cbd5f492a5"""">";;;;;
;;;;;
### Expected behavior;;;;;
- `other_first_name` should not be [FILTERED];;;;;
;;;;;
### Actual behavior;;;;;
- `other_first_name` is `[FILTERED]`;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: `Edge`;;;;;
;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-05T13:52:33Z,2024-04-06T06:49:55Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}, {'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}]""";;;;;
"2168115785,Raise on `in_batches` used on a relation with unpersisted records,""Prior https://github.com/rails/rails/pull/48876 using `in_batches` on a relation with unpersisted records would work but new records will not be included in the iteration. ";;;;;
;;;;;
Currently using `in_batches` on a loaded relation with unpersisted records will fail when we try to sort records by `id` as new records don't have `id` set and comparison with `nil` fails.;;;;;
;;;;;
Since both raising an ambiguous comparison error or implicitly skipping new records seem sub-option we are proposing to raise a clear error to let application explicitly decide whether it needs to iterate on a loaded relation in slices (i.e. `each_slice`) or explicitly drop / save the un-persisted record and continue using `in_batches` ;;;;;
;;;;;
"cc: @garyhtou "",2024-03-05T01:52:09Z,2024-03-14T06:55:50Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2168018086,QueryAttributes treated as strings in exec_query,""### Steps to reproduce";;;;;
;;;;;
I have a library [dynamic_records](https://github.com/LukeClancy/dynamic-records-meritfront) that uses exec_query alongside QueryAttributes to write sql. Recently I updated rails, pg and psql to a recent version and found that exec_query no longer works as expected.;;;;;
;;;;;
exec_query seems to be converting all parameters into strings. I do not believe this is expected functionality.;;;;;
;;;;;
```ruby;;;;;
value = 1;;;;;
type = ActiveRecord::Type::Integer.new;;;;;
qa = ActiveRecord::Relation::QueryAttribute.new('int_input', value, type);;;;;
"x = ActiveRecord::Base.connection.exec_query(""""select $1"""", 'query name', [qa])";;;;;
out_v = x.rows.first.first;;;;;
;;;;;
"puts """"value: #{out_v.inspect}, class: #{out_v.class.to_s}""""";;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
"value: 1, class: Integer""""";;;;;
;;;;;
### Actual behavior;;;;;
"value \""""1\"""", class: String""""";;;;;
;;;;;
### System configuration;;;;;
ruby 3.2.2p53;;;;;
rails (7.1.3.2);;;;;
activemodel (= 7.1.3.2);;;;;
activerecord (= 7.1.3.2);;;;;
pg (1.5.6);;;;;
;;;;;
"psql (PostgreSQL) 16.2 (Ubuntu 16.2-1.pgdg22.04+1)"",2024-03-05T00:02:57Z,2024-03-05T23:37:09Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2167901158,Unexpected behaviour for CTE joins when CTE has same name as a relation,""### Steps to reproduce";;;;;
;;;;;
We are big users of CTEs and have been using [vlado/activerecord-cte](/vlado/activerecord-cte) for many years now. While trying to upgrade to Rails 7.1, we came across this situation which previously worked in Vlado's extension (stripped down code follows):;;;;;
;;;;;
```ruby;;;;;
class Task < ApplicationRecord;;;;;
  has_many :project_resources;;;;;
  has_many :projects, through: :project_resources;;;;;
end;;;;;
;;;;;
class ProjectResource < ApplicationRecord;;;;;
  belongs_to :resource, polymorphic: true;;;;;
  belongs_to :project;;;;;
end;;;;;
;;;;;
class Project < ApplicationRecord;;;;;
  has_many :project_resources;;;;;
  has_many :tasks, through: :project_resources, source: :resource, source_type: 'Task';;;;;
end;;;;;
;;;;;
Project.with(tasks: Task.active).joins(:tasks);;;;;
```;;;;;
;;;;;
With the extension, this would produce SQL like the following:;;;;;
;;;;;
```sql;;;;;
WITH tasks AS (;;;;;
  SELECT tasks.*;;;;;
  FROM tasks;;;;;
  WHERE active;;;;;
);;;;;
  SELECT projects.*;;;;;
  FROM projects;;;;;
  JOIN project_resources ON project_resources.resource_type = 'Task' AND project_resources.project_id = projects.id;;;;;
  JOIN tasks ON tasks.id = project_resources.resource_id;;;;;
```;;;;;
;;;;;
With the Rails 7.1 CTE joins, this produces the following:;;;;;
;;;;;
```sql;;;;;
WITH tasks AS (;;;;;
  SELECT tasks.*;;;;;
  FROM tasks;;;;;
  WHERE active;;;;;
);;;;;
  SELECT projects.*;;;;;
  FROM projects;;;;;
  JOIN tasks ON tasks.project_id = projects.id;;;;;
```;;;;;
;;;;;
Which is an invalid SQL query, as `project_id` doesn't exist on `tasks` but rather exists on the `project_resources` relation which sits in between `Task` and `Project`. This only happens when the CTE name is the same as an association. For instance, this does not change the join conditions:;;;;;
;;;;;
```ruby;;;;;
Project.with(filtered_tasks: Task.active).joins(:tasks);;;;;
```;;;;;
;;;;;
Produces;;;;;
;;;;;
```sql;;;;;
WITH filtered_tasks AS (;;;;;
  SELECT tasks.*;;;;;
  FROM tasks;;;;;
  WHERE active;;;;;
);;;;;
  SELECT projects.*;;;;;
  FROM projects;;;;;
  JOIN project_resources ON project_resources.resource_type = 'Task' AND project_resources.project_id = projects.id;;;;;
  JOIN tasks.id = project_resources.resource_id;;;;;
```;;;;;
;;;;;
Where the join conditions are retained as expected. (The `filtered_tasks` relation isn't joined here, of course, but the point is is that the `:tasks` join itself is unaffected by the `#with` call.);;;;;
;;;;;
Masking a table name in a CTE is a very useful capability, but it's not really possible if masking the table impacts the joins. ;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
I would expect that the joins would not be affected if the relation alias in the `WITH` query is masking an actual relation.;;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
The join condition should remain unaffected in the case of the CTE alias being the same as a relation name.;;;;;
;;;;;
### System configuration;;;;;
;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.3.0;;;;;
;;;;;
### Potential Fix;;;;;
;;;;;
After playing with it a bit, the following appears to satisfy all of our unit tests for our CTEs:;;;;;
;;;;;
```diff;;;;;
diff --git a/activerecord/lib/active_record/relation/query_methods.rb b/activerecord/lib/active_record/relation/query_methods.rb;;;;;
index 5d63709c3a..f17ed6b562 100644;;;;;
#NOM?;;;;;
#NOM?;;;;;
@@ -1625,7 +1625,7 @@ def build_from;;;;;
 ;;;;;
       def select_named_joins(join_names, stashed_joins = nil, &block);;;;;
         cte_joins, associations = join_names.partition do |join_name|;;;;;
-          Symbol === join_name && with_values.any? { _1.key?(join_name) };;;;;
+          Symbol === join_name && with_values.any? { _1.key?(join_name) } && !reflections[join_name.to_s];;;;;
         end;;;;;
 ;;;;;
         cte_joins.each do |cte_name|;;;;;
```;;;;;
;;;;;
This does not appear to break any existing ActiveRecord tests, so if there is interest in using this I can write up a patch that includes tests.;;;;;
",2024-03-04T22:28:36Z,2024-04-06T22:44:52Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2165733298,[Fix #50118] `:prepend` option not working with `run_after_transaction_callbacks_in_order_defined` config,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Fixes #50118.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Ensures that the `:prepend` option for after transaction callbacks is respected when `config.run_after_transaction_callbacks_in_order_defined = true`. This allows prepending certain `after_commit` and `after_rollback` callbacks while still running the rest in the order defined on the model.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->;;;;;
;;;;;
In addition to the tests here there is also [this script](https://github.com/rails/rails/issues/50118#issuecomment-1975502684) which I tested against.;;;;;
;;;;;
cc @ghiculescu;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-04T01:36:20Z,2024-03-04T05:20:42Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2165611366,[Fix #51242] Rework in_batches(use_ranges: true) to be more efficient,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
Fixes https://github.com/rails/rails/issues/51242;;;;;
;;;;;
In ActiveRecord 7.1, a new option was added to [ActiveRecord::Batches#in_batches](https://api.rubyonrails.org/classes/ActiveRecord/Batches.html#method-i-in_batches), `use_ranges: true`, that enables a more efficient way to generate queries from the provided scope for each batch.;;;;;
;;;;;
The resulting queries use ranges to select record ids, e.g. `WHERE id > 10000 AND id <= 20000` instead of passing a possibly very long list of ids in an `IN` clause, e.g. `IN (10000, 10001, [...,] 19999, 20000)`.;;;;;
;;;;;
This option was implemented in https://github.com/rails/rails/pull/45414.;;;;;
;;;;;
The implementation of `use_ranges: true` relies on the already implemented strategy to select all ids from the range (needed for `use_ranges: false`), when generating the scope for each batch.;;;;;
;;;;;
The typical SQL query to generate a scope for a batch is (example with batches of 10k records):;;;;;
;;;;;
```sql;;;;;
"SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
```;;;;;
;;;;;
But subsequently, all these ids but the last one are discarded:;;;;;
;;;;;
https://github.com/rails/rails/blob/v7.1.3.2/activerecord/lib/active_record/relation/batches.rb#L379-L380;;;;;
;;;;;
**This method wastes resources in the database (CPU, I/O), in transit (bandwidth) and in the Ruby process (RAM).**;;;;;
;;;;;
This Pull Request is a proposal to save these resources by implementing **an additional optimisation**.;;;;;
;;;;;
### Detail;;;;;
;;;;;
The description below applies only to the use of `in_batches` **with** the option `use_ranges: true`.;;;;;
;;;;;
Instead of returning all the ids for each batch, we use `OFFSET` to search for the last id in the next batch and return just one id, e.g.;;;;;
;;;;;
```diff;;;;;
  -- queries for all batches but the last (before/after);;;;;
"- SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
"+ SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 1 OFFSET 9999";;;;;
```;;;;;
;;;;;
There is one downside, however.;;;;;
;;;;;
Our `OFFSET`-based query won't be able to return the last id if the next batch is smaller than the limit or if there's no next batch. We always need one additional query to get the size and last id of the very last batch. We use the same query as before the optim for that purpose:;;;;;
;;;;;
```diff;;;;;
  -- queries for the last batch (before/after);;;;;
"- SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
"+ SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 1 OFFSET 9999";;;;;
"+ SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
```;;;;;
;;;;;
Unless we only have a handful of small batches, this strategy is a winner overall, as it reduces the time and network resources spent generating batches, as shown by the benchmark below.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
#### Benchmark;;;;;
;;;;;
Let's reuse the benchmark from the description of https://github.com/rails/rails/pull/45414, i.e. the same `users` table with `10M` records, but with two modifications:;;;;;
;;;;;
* Batches of 10k records instead of 1k;;;;;
* No call to `batch.count` on each batch since we are measuring only on the time and resources needed to generate the scopes, not to use them.;;;;;
;;;;;
Here is the code used:;;;;;
;;;;;
```sql;;;;;
CREATE TABLE users (id bigserial PRIMARY KEY, val integer DEFAULT 0);;;;;
INSERT INTO users SELECT i FROM generate_series(1, 10000000) AS i;;;;;
```;;;;;
;;;;;
```ruby;;;;;
start = Process.clock_gettime(Process::CLOCK_MONOTONIC);;;;;
;;;;;
count = 0;;;;;
User.in_batches(of: 10_000) do |batch|;;;;;
  count += 1  # previously: batch.count, but we don't want to trigger any other queries in this benchmark;;;;;
end;;;;;
;;;;;
"puts """"Count = #{count}""""";;;;;
elapsed = Process.clock_gettime(Process::CLOCK_MONOTONIC) - start;;;;;
"puts """"Elapsed: #{elapsed}s""""";;;;;
```;;;;;
;;;;;
The benchmark is executed on a single machine (a recent macbook), with a round-trip-time < 1ms.;;;;;
;;;;;
The network (I/O) stats are obtained by comparing the result of this command before/after a benchmark run:;;;;;
;;;;;
```;;;;;
docker stats --no-stream postgres --format 'table {{.NetIO}}';;;;;
```;;;;;
;;;;;
**Here are the results:**;;;;;
;;;;;
| Batching method                      | Duration | Network (I/O)     |;;;;;
|--------------------------------------|---------:|------------------:|;;;;;
| in_batches(use_ranges: true)         |    5.6 s.  |   &nbsp;&nbsp;1.2 MB / &nbsp;&nbsp;180 MB   |;
| in_batches(use_ranges: true) + optim from this PR |     2.3 s.  |   &nbsp;&nbsp;< 0.5 MB /  < 0.2 MB   |;;;
;;;;;
In this benchmark, we managed to **generate scopes for batches `x2.4` times faster and with `x900` times less bandwidth**. These results will of course typically vary with the batch size used, and the network speed.;;;;;
;;;;;
The absolute values may not seem like huge gains, but I'm considering using `in_batches(use_ranges: true)` on tables with over 3 billion records, where this benchmark would show a saving of at least `16+ minutes` and `52.7 GB` of bandwidth (+ the database resources needed to extract/send this traffic).;;;;;
;;;;;
#### Other strategies considered;;;;;
;;;;;
Using `OFFSET` is not be the only way to achieve the same kind of optimisation.;;;;;
;;;;;
For example, we could consider using a strategy based on the calculation of the maximum id + batch size for each batch (details folded below).;;;;;
;;;;;
<details>;;;;;
  <summary>Using a CTE</summary>;;;;;
<br />;;;;;
We could use a CTE like this one:;;;;;
;;;;;
```sql;;;;;
"WITH """"batch_ids"""" AS (";;;;;
    -- same query as today;;;;;
"    SELECT """"users"""".""""id"""" FROM """"users"""" WHERE (id > 10000) ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
);;;;;
SELECT COUNT(id) AS last_batch_size, MAX(id) AS last_batch_id FROM batch_ids;;;;;
```;;;;;
;;;;;
"This would be advantageous, as we would not have to use that """"extra"""" query for the last batch as we did above.";;;;;
;;;;;
Nevertheless, using a CTE would have the following downsides:;;;;;
;;;;;
1. CTEs are not supported yet by all RDBMS supported by Active Record (MySQL < 8.0);;;;;
"2. To my knowledge, ActiveRecord does not provide any way to easily generate a query with two distinct calculations such as a count and a maximum. The """"manual"""" workarounds for this could be complicated.";;;;;
;;;;;
For the record, the query above can be generated with:;;;;;
;;;;;
```ruby;;;;;
User.connection.select_one(;;;;;
  User;;;;;
    .with(batch_ids: User.select('id').where('id > 10000').order(:id).limit(10000));;;;;
    .from('batch_ids');;;;;
    .select('COUNT(id) AS last_batch_size', 'MAX(id) AS last_batch_id');;;;;
);;;;;
```;;;;;
</details>;;;;;
;;;;;
;;;;;
<details>;;;;;
  <summary>Using a subquery</summary>;;;;;
<br />;;;;;
We could use a subquery like this one:;;;;;
;;;;;
```sql;;;;;
SELECT;;;;;
    COUNT(id) AS last_batch_size, MAX(id) AS last_batch_id;;;;;
FROM (;;;;;
    -- same query as today;;;;;
"    SELECT """"users"""".""""id"""" FROM """"users"""" WHERE (id > 10000) ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
) subquery;;;;;
```;;;;;
;;;;;
Even better than the CTE version because this would be compatible with all RDBMS supported by ActiveRecord.;;;;;
;;;;;
For the record, the query above can be generated with:;;;;;
;;;;;
```ruby;;;;;
User.connection.select_one(;;;;;
  User.select('COUNT(id) AS last_batch_size', 'MAX(id) AS last_batch_id').from(;;;;;
    User.select('id').where('id > 10000').order(:id).limit(10000);;;;;
  );;;;;
);;;;;
```;;;;;
;;;;;
But to support all sorts of primary keys (including composite) and multiple calculations in a single query, I suspect some complicated work is required in Active Record. If you think this is feasible at a reasonable cost, please provide some guidance 🙏 ;;;;;
</details>;;;;;
;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-03T23:02:55Z,2024-04-06T22:48:12Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2229968422,Improve ActionCable redis config example [skip ci],""While using `{}` inside yaml files is valid and will be correctly parsed, it looks strange and not idiomatic."",2024-04-07T21:32:04Z,2024-04-07T21:32:08Z,""[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2229766221,Skip ActiveStorage previewer tests if required tools are unavailable,""These tests require certain tools to be available, if they aren't these tests will fail. Skip instead."",2024-04-07T13:14:48Z,2024-04-07T13:14:53Z,""[{'id': 664533972, 'node_id': 'MDU6TGFiZWw2NjQ1MzM5NzI=', 'url': 'https://api.github.com/repos/rails/rails/labels/activestorage', 'name': 'activestorage', 'color': 'bfd4f2', 'default': False, 'description': None}]""";;;;;
"2229284323,Remove usage of `OpenStruct`,""Follow up to https://github.com/rails/rails/pull/51491#issuecomment-2037429653.";;;;;
;;;;;
"There was one more error regarding the missing `require """"ostruct""""` after that PR merge (https://buildkite.com/rails/rails/builds/106158#018eaee1-7e2b-4e8a-9876-8d3c358d5576), so maybe we can just remove its usage instead?";;;;;
;;;;;
"cc @byroot "",2024-04-06T14:58:05Z,2024-04-06T18:57:07Z,""[{'id': 107188, 'node_id': 'MDU6TGFiZWwxMDcxODg=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionmailer', 'name': 'actionmailer', 'color': '8B00FC', 'default': False, 'description': None}, {'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}, {'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}, {'id': 3666649, 'node_id': 'MDU6TGFiZWwzNjY2NjQ5', 'url': 'https://api.github.com/repos/rails/rails/labels/actionview', 'name': 'actionview', 'color': 'd7e102', 'default': False, 'description': None}, {'id': 123812746, 'node_id': 'MDU6TGFiZWwxMjM4MTI3NDY=', 'url': 'https://api.github.com/repos/rails/rails/labels/activejob', 'name': 'activejob', 'color': '5319e7', 'default': False, 'description': None}]""";;;;;
"2229169236,Don't buffer things that shouldn't be buffered.,""Assigning `ActionDispatch::Response` to `self.response` causes the response body to be buffered (and potentially evaluated multiple times).";;;;;
;;;;;
```ruby;;;;;
class StreamingController < ApplicationController;;;;;
  def simple;;;;;
    body = Enumerator.new do |enumerator|;;;;;
"      enumerator << """"."""" * 1024";;;;;
      ;;;;;
      100.times do |i|;;;;;
"        enumerator << """"This is line #{i}\n""""";;;;;
        sleep 0.1;;;;;
      end;;;;;
    end;;;;;
;;;;;
    # Works, puma, falcon, Rails 7.1;;;;;
"    # self.response = Rack::Response[200, {""""content-type"""" => """"text/plain""""}, body]";;;;;
;;;;;
    # Doesn't work because the response is buffered:;;;;;
"    self.response = ActionDispatch::Response.new(200, {""""content-type"""" => """"text/plain""""}, body)";;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
In both Puma and Falcon, the response is buffered without this change.;;;;;
;;;;;
"cc @willcosgrove "",2024-04-06T09:53:30Z,2024-04-06T10:08:35Z,""[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}]""";;;;;
"2229046933,[Fix #40109] Incorrect joins for polymorphic `has_many through:` with association scope,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Fixes https://github.com/rails/rails/issues/40109;;;;;
;;;;;
### Detail;;;;;
;;;;;
Updates `ActiveRecord::Reflection::PolymorphicReflection#join_scopes` to not apply the previous reflection's join scopes if it's a through reflection.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-06T03:10:42Z,2024-04-06T07:14:24Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2228498012,add navbar highlighting to guides [ci skip],""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
@jathayde @AmandaPerino This Pull Request has been created to add the highlighting to the navigation bar. ;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request adds on scroll event to control highlighting and css rules for the for highlight. ;;;;;
;;;;;
Right now there are comments in the css labeling the parts that draw the highlight and the square because I wasn't sure it would be obvious what the pseudo-elements were for, but I can remove them if you want. ;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-05T17:27:03Z,2024-04-07T15:34:07Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2228287663,UnrecognizedCommandError can be corrected and retried,""### Motivation / Background";;;;;
;;;;;
"This is a follow up to https://github.com/rails/rails/pull/50941. """"Did you mean?"""" style errors were introduced in rails/rails@2530160 for unrecognized commands. With this change, we give the user the option to retry with the corrected command name - instead of needing to retype and rerun the command.";;;;;
;;;;;
### Detail;;;;;
;;;;;
We iterate through all the possible commands returned by `DidYouMean::SpellChecker` and give the user the option to rerun the suggested correction.;;;;;
;;;;;
```;;;;;
 ➜  myapp git:(main) bin/rails vershen;;;;;
"Unrecognized command """"vershen""""";;;;;
;;;;;
Did you mean?  version [Yn] y;;;;;
Rails 7.2.0.alpha;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-05T15:19:49Z,2024-04-05T22:31:25Z,[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2228096494,Improve accessibility,""### Motivation / Background";;;;;
;;;;;
As requested by @AmandaPerino, this PR aims to improve the accessibility of the guides. It continues on the work in #51341 #51372 #51385 and #51444. It also addresses whatever wasn't addressed from https://github.com/rails/rails/pull/51341#issuecomment-2007717282.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Each commit in the PR has a descriptive title and often a message why the change was made, which I recommend we keep when merging instead of squashing it. Screenshots are listed below. A few of the commits that introduce fixes or features are listed here:;;;;;
;;;;;
* [Add label and accessible content](https://github.com/rails/rails/commit/4f2b25ba54d82bc897fb33f681214f5bf05cb0bd) ;;;;;
  ;;;;;
  Having a select element without a label outside a form isn't directly problematic, but the text Version is the label of the select and should act as such.;;;;;
;;;;;
  Because the select element is set up to browse to a different page which loses the current focus position, users must be instructed about this context change. It would be much better to display this content to everyone, but having this for screenreaders only is better than not having it at all.;;;;;
;;;;;
* [Fix accessible text for voice commands](https://github.com/rails/rails/commit/1863e5590cecac6ecfd0c4c031f1c4c967d0d768) ;;;;;
  ;;;;;
  Using the title attribute means some screenreaders will not be able to show the expanded accessible text at all, but using aria-label loses the hover text currently available.;;;;;
;;;;;
  If the title attribute is still used, the accessible label should start with the same content as the visible label. This is necessary for most voice operated tooling which only match starting text.;;;;;
;;;;;
"  Having """"Return"""" as the start of the accessible label and """"Guides"""" as the start of the visible label means in most cases users that rely on voice commands will not be able to browse here.";;;;;
;;;;;
* [Add landmarks to all guide pages](https://github.com/rails/rails/commit/9669f4be012f34488d52e16d0b6e40a11399e414) ;;;;;
  ;;;;;
  Landmarks such as header, section, footer, article, and the main content landmark help navigating when using assistive tooling.;;;;;
;;;;;
  Since each guide is a self-contained article, a header section with the guide introduction and navigation, a footer section which is not part of the content but a call to action, and the rest can be clearly separated, landmarks here are appropriate.;;;;;
;;;;;
* [Make back-to-top work without JavaScript](https://github.com/rails/rails/commit/b33278c01384a7612d0adf2270456718181b5acb) ;;;;;
;;;;;
  By doing feature detection on animation timeline CSS, the graceful degradation can take care of the visibility of the back-to-top button. In case no JavaScript is available, it should always be shown.;;;;;
;;;;;
* [Enable back-to-top without JavaScript](https://github.com/rails/rails/commit/430f27c959f0df30b6baeea3d688d8fa5448f842) ;;;;;
;;;;;
  And add an accessible label to the button. It would be better to just show the text back to top underneath the arrow, but this change is again better than not having it at all.;;;;;
;;;;;
* [Consistent scrolling behaviour respecting pref](https://github.com/rails/rails/commit/f2ae0318736a286a13d896cad8527bd2d1443c50) ;;;;;
;;;;;
  Use the preference to detect if a user wants reduced motion and if not enable smooth scrolling. This takes care of the back-to-top smooth scrolling, and also adds it to anchor links. If this is unwanted, the change can be reverted and a matchmedia check should be done in JavaScript instead before smooth scrolling;;;;;
;;;;;
* [Add skip links to quickly navigate past navs](https://github.com/rails/rails/commit/653b292ac26b2df59ebeb44fc9415ebc8130243b) ;;;;;
  ;;;;;
  Skip links are a common practice to allow keyboard and other users to skip past large blocks of content that are present on every page, which in this case are the secondary navigation at the top,;;;;;
the version selector, and the chapter navigation.;;;;;
;;;;;
  The skip links only show when focused.;;;;;
;;;;;
* [Wrap tables to make them responsive](https://github.com/rails/rails/commit/e2cfe8fdfccfcb47aec2f358b0badab79c817981);;;;;
;;;;;
* [Make back-to-top link to skip link](https://github.com/rails/rails/commit/ad966a42de9e166ab33026b28fc8dda64f5fbdd1) ;;;;;
;;;;;
  This allow screen readers to announce something, because linking to an empty fragment or the body element doesn't announce anything useful.;;;;;
;;;;;
* [Add branded selectable color](https://github.com/rails/rails/commit/2557614d872629462e354b2bd1536736aa2077be) ;;;;;
;;;;;
  Fixes selecting text in dark mode and brands it for both modes.;;;;;
;;;;;
* [Make more info and guides index accessible](https://github.com/rails/rails/commit/f9eaeb18d8c5712ae0f2edf351ff9829c996bf78) ;;;;;
;;;;;
  * Adds aria-controls, which binds the control to the content.;;;;;
  * Adds aria-expanded, which signals the current expansion state.;;;;;
  * Adds focus handling, which focuses the first link or the button;;;;;
    depending on the expansion state.;;;;;
  * Adds keyboard closing for the more info button.;;;;;
  * Adds outside click tracking to close the expanded content.;;;;;
  * Fixes the more info button to not be focusable.;;;;;
;;;;;
* [Fix dark mode for guide selector](https://github.com/rails/rails/commit/9c4cfd00492a2bd55db9ed5b5a9a616a962c153a);;;;;
;;;;;
* [Add accessible label for guide navigator](https://github.com/rails/rails/commit/93f9819c62890301f398e752b6083c9d2c9f6c40);;;;;
;;;;;
### Additional information;;;;;
;;;;;
Please note that this PR doesn't necessarily make the guides completely accessible and we should continue to improve on this, but this gets us (a big) part of the way there, together with the changes that were already made prior.;;;;;
;;;;;
| Before | After |;;;;;
| ------ | ----- |;;;;;
"| You could not focus the selector pressing """"Version"""" | ![a11y-focusable-label-version](https://github.com/rails/rails/assets/1964376/58f5d1a7-a6ef-47e2-86ac-6e1e0288a18c) |";;;;;
| The element (version selector) was broken if JavaScript was disabled | ![a11y-no-js-desktop](https://github.com/rails/rails/assets/1964376/0a93871b-c55a-4f9b-a524-86f6024f39b7) |;;;;;
| The element (version selector) was broken if JavaScript was disabled | ![a11y-no-js-mobile](https://github.com/rails/rails/assets/1964376/5075e1ac-c888-496e-8fa4-4f9066d6aa43) |;;;;;
| ![a11y-before-table-wrap](https://github.com/rails/rails/assets/1964376/29e41733-60ce-4933-9d4f-36a9fad972e8) | ![a11y-after-table-wrap](https://github.com/rails/rails/assets/1964376/303818b1-d3af-45e3-9ea7-08121c91f04c) |;;;;;
| You could not skip past the secondary top navigation | ![a11y-main-skip-link](https://github.com/rails/rails/assets/1964376/8d2c1af0-7575-4089-8e89-e7cfb42c8975) |;;;;;
| You could not skip past the chapter navigation | ![a11y-chapter-skip-link](https://github.com/rails/rails/assets/1964376/87cccb26-f7ae-4ae9-a382-145d6cbd963e) |;;;;;
| ![a11y-selectable-text-before](https://github.com/rails/rails/assets/1964376/e9e9b56f-08de-45d8-955f-c7884b33a387) | ![a11y-selectable-text](https://github.com/rails/rails/assets/1964376/c938bbde-54ee-480b-b295-6a91bdd8c7e7) |;;;;;
| There was no label indicating what the select does | ![a11y-guide-selector](https://github.com/rails/rails/assets/1964376/cfaf0501-516b-4ad3-bc30-d77701f01164) |;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [X] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-05T13:53:30Z,2024-04-07T15:35:24Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2226955930,Handle path_params gracefully when a user sends `?path_params=string`,""In some cases it's possible for `path_params` to be passed into `url_for` by an end-user of a rails app. Kaminari currently triggers this.";;;;;
;;;;;
"It's also currently inconvenient to write a test to ensure this doesn't happen. Passing `path_params: """"string""""` in a functional test crashes the test runner. (see [this example in a rails bug report template](https://github.com/rails/rails/compare/main...martinemde:rails:bug-report-path-params) that crashes.)";;;;;
;;;;;
A string value will cause a 500 error in rails internals. A hash `?path_params[inject]=string` can be used to inject a path_param into the url generation. However, I don't believe there is any vulnerability since path_params are lower priority than actual params and get ignored when there are no matches. Also, given that the very similar #39616 did not raise alarm bells, I'm not considering this a vulnerability. Still, it is probably good to scrub this key. A vulnerability once existed for a similar problem: https://github.com/advisories/GHSA-r5jw-62xg-j433;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
I was trying to fix a 500 caused by a security scan of rubygems.org. An unknown researcher sent a huge list of params to many pages, snipped here:;;;;;
;;;;;
![image](https://github.com/rails/rails/assets/989/84f481a9-dfc5-40dd-93e9-1ccacd445489);;;;;
;;;;;
This caused at least two 500 errors on rubygems.org, a minor annoyance but enough to potentially page someone on-call.;;;;;
;;;;;
I tracked the actual issue down to kaminari for which I opened https://github.com/kaminari/kaminari/pull/1123.;;;;;
;;;;;
While I think that this should be fixed in kaminari, I also think rails should fix this because it is somewhat difficult to write a test to ensure that this key is handled well. (see bug report template linked at top) ;;;;;
;;;;;
This PR also saves one hash allocation and one merge for every URL generate that doesn't have a `path_params:` key (most of them?), but the `option = option.dup` might negate most of the benefit (it could be reconfigured to save that dup, most likely).;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes `ActionDispatch::Journey::Formatter#generate` to only extract and merge path_params when it is a hash.;;;;;
;;;;;
This PR does not address in any way filtering `path_params`. I believe kaminari should do this. However, this addresses the crash when path_params is not a Hash and makes most url generations slightly more efficient. ;;;;;
;;;;;
### Additional information;;;;;
;;;;;
This is very similar to another fix by my colleague @simi submitted to rails, #39616, which I think also deserves attention for the same reason, if it is still applicable to current rails code.;;;;;
;;;;;
I'm also patching this on rubygems.org in the meantime so we don't get needless 500s.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [X] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-05T04:01:48Z,2024-04-05T16:48:09Z,[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}]""";;;;;
"2226911350,Use ActionController::TestCase in bug_report_template/action_controller.rb,""### Motivation / Background";;;;;
;;;;;
This Pull Request has been created because I was trying to submit a bug report and had to spend time getting the bug report template to work more like a functional test in rails.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes `guides/bug_report_template/action_controller.rb` to draw a route and use `ActionController::TestCase` to make testing easier.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-05T03:32:15Z,2024-04-05T03:32:49Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2226602219,Should Active Model's `ImmutableString` type observe the `limit` parameter?,""TL";DR: should `attribute :foobar, :string, limit: 30` chop the value to 30 characters?;;;;
;;;;;
`ActiveModel::Type::String` inherits;;;;;
`ActiveModel::Type::ImmutableString` inherits;;;;;
 `ActiveModel::Type::Value`  which accepts three `limit, scale, precision` options [but lets the base type decide what to do with them](https://api.rubyonrails.org/classes/ActiveModel/Type/Value.html#method-c-new).;;;;;
;;;;;
I was wondering whether it would make sense for the string types to interpret `limit` as a max length and chop on `cast` or `serialize`. I've got some custom initializer code at the moment which does:;;;;;
;;;;;
```rb;;;;;
class ActiveModel::Type::String;;;;;
  def cast(value);;;;;
    if @limit;;;;;
      super(value.to_s.first(@limit));;;;;
    else;;;;;
      super;;;;;
    end;;;;;
  end;;;;;
end;;;;;
 ```;;;;;
;;;;;
Which reuses the `ImmutableString#cast` logic and chops the value, not great but works well, well enough to ask the question here.;;;;;
;;;;;
What do people think? Happy to submit a PR if we can agree it's nice to have.;;;;;
;;;;;
"NOTE: `ActiveModel::Type::Integer` interprets `limit` as [the number of bytes to store the integer with](https://api.rubyonrails.org/classes/ActiveModel/Type/Integer.html), which makes the option a bit confusing. However, a `t.string :column_name, limit: 42` will effectively [limit the length of that string column in Active Record](https://api.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_column)."",2024-04-04T22:07:58Z,2024-04-06T06:57:37Z,""[{'id': 107190, 'node_id': 'MDU6TGFiZWwxMDcxOTA=', 'url': 'https://api.github.com/repos/rails/rails/labels/activemodel', 'name': 'activemodel', 'color': '00E5FF', 'default': False, 'description': None}]""";;;;;
"2224752118,Update Filter Attributes to perform exact matches instead of Fuzzy matches,""### Motivation / Background";;;;;
;;;;;
This Pull Request has been created because of a bug mentioned in #51254 wherein encrypting one attribute in a model filters out other similar matching attributes in inspect.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This PR makes the following changes:;;;;;
- Updates `filter_attributes` to exact regex matches instead of fuzzy matching;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-04T07:52:45Z,2024-04-06T12:55:46Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}, {'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2224488321,Fix textdecorator specificity on hovering in index [ci skip],""In the guides index section, the text-decorator and color are not showing properly on hovering. And the issue is causing because of the higher specificity. ";;;;;
![Screenshot 2024-04-04 at 10 26 58 AM](https://github.com/rails/rails/assets/22231095/2c36b760-594c-43c9-9991-f6318e279d4c);;;;;
;;;;;
![Screenshot 2024-04-04 at 10 17 39 AM](https://github.com/rails/rails/assets/22231095/03381990-fa57-4ce4-8d20-288477265470);;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request fixes the hovering style issue.;;;;;
![Screenshot 2024-04-04 at 9 06 11 AM](https://github.com/rails/rails/assets/22231095/7b34dec4-9f69-416a-b46b-172408e811df);;;;;
;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
;;;;;
cc/ @jathayde ;;;;;
",2024-04-04T04:50:13Z,2024-04-07T15:36:37Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2224165865,Add a Date decoder to the pg adapter ,""Fix #51448";;;;;
;;;;;
Add a Date decoder to the pg adapter to type cast dates at the connection level;;;;;
;;;;;
This would type cast columns of type `date` to ruby `Date` when running a raw query through `ActiveRecord::Base.connection.select_all`.;;;;;
;;;;;
Before:;;;;;
;;;;;
```ruby;;;;;
"ActiveRecord::Base.connection.select_value(""""select '2024-01-01'::date"""").class ";;;;;
#=> String;;;;;
```;;;;;
;;;;;
After:;;;;;
```ruby;;;;;
"ActiveRecord::Base.connection.select_value(""""select '2024-01-01'::date"""").class ";;;;;
#=>  Date ;;;;;
```;;;;;
;;;;;
;;;;;
While I don't think we'd want to to set a type cast expectation at this level (not all adapters have dates), this would brings the PG adapter to parity (for dates) with the Mysql2 adapter. ;;;;;
;;;;;
We already convert timestamp, it would makes sense to also convert dates. ;;;;;
;;;;;
I wasn't sure if I should add a test. I am thinking that a test sets an expectation about type casting at the adapter level. ;;;;;
This changes a public API, albeit a pretty low level one, but it seems like we don't test the other types either. I removed timestamps + float/numeric and all tests still pass. ;;;;;
;;;;;
I added a message in the changelog entry to make sure it doesn't burn anyone. ;;;;;
;;;;;
Unsure if we should merge this. Impact radius is large, but after digging into it and running the tests, it looks pretty benign.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-04T00:27:33Z,2024-04-04T00:29:16Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2224128597,Trix toolbar doesn't render correctly with Propshaft,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
;;;;;
```bash;;;;;
# In bash, get a new rails app setup using propshaft;;;;;
bin/rails new . -a propshaft;;;;;
bin/rails generate scaffold post title:string body:text;;;;;
;;;;;
# Install Action Text:;;;;;
bin/rails action_text:install;;;;;
bundle install;;;;;
bin/rails db:migrate;;;;;
;;;;;
#  post body is rich text;;;;;
cat << EOF > app/models/post.rb;;;;;
class Post < ApplicationRecord;;;;;
  has_rich_text :body;;;;;
end;;;;;
EOF;;;;;
;;;;;
# ensure it's a rich_text_area in the form;;;;;
sed -i 's/<%= form.text_area :body %>/<%= form.rich_text_area :body %>/' app/views/posts/_form.html.erb;;;;;
;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
http://localhost:3000/posts/new should render the text area with Trix toolbar.;;;;;
;;;;;
Here is what renders if I follow all the same steps above, but instead of `bin/rails new . -a propshaft`, just using `bin/rails new .`:;;;;;
;;;;;
![image](https://github.com/rails/rails/assets/1312348/e53bc1e9-a793-410d-a7cd-a779e10faa31);;;;;
;;;;;
;;;;;
;;;;;
### Actual behavior;;;;;
The toolbar is just HTML buttons.;;;;;
;;;;;
![image](https://github.com/rails/rails/assets/1312348/521a03ca-e8fe-4cd2-9bfa-adbc24f716e1);;;;;
;;;;;
I cannot figure out how to get it working in Propshaft.;;;;;
;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.3.0;;;;;
",2024-04-03T23:45:27Z,2024-04-04T15:31:10Z,[]
2224104767,Use devcontainer features for optional dependencies,### Motivation / Background";;;;;
;;;;;
We have created our own features for optional Rails dependencies needed for active storage, postgres and mysql. Features provide a bit better ergonomics for adding or removing these from the devcontainer, and previously we were always installing these dependencies via the devcontainer's dockerfile, whether the app was using them or not.;;;;;
;;;;;
### Detail;;;;;
;;;;;
With this change, when we generate the app, we just add the features we need to the `devcontainer.json`. And also, we swap features in and out as need when doing `db:system:change`.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-03T23:15:11Z,2024-04-03T23:31:28Z,[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2223710666,Don't preload Selenium browser when remote,""### Motivation / Background";;;;;
Fixes #50827 ;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request stops the preloading of the Selenium browser when the browser is remote.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] NA - Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] NA - CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-03T19:09:14Z,2024-04-03T19:20:04Z,[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}]""";;;;;
"2223231248,`validates_associated` does not work with `accepts_nested_attributes_for` for `has_many` associations,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
I have a model like this:;;;;;
```ruby;;;;;
class OrderLine < ApplicationRecord;;;;;
  has_many :order_line_resources;;;;;
  accepts_nested_attributes_for :order_line_resources;;;;;
  validates_associated :order_line_resources;;;;;
end;;;;;
```;;;;;
Which is associated to this model:;;;;;
```ruby;;;;;
class OrderLineResource < ApplicationRecord;;;;;
  belongs_to :order_line;;;;;
  validates :order_line_id, uniqueness: { scope: :resource_id };;;;;
end;;;;;
```;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
However, if I write something like this:;;;;;
```ruby;;;;;
order_line.update!(order_line_resources_attributes: [{ resource_id: 1 }, { resource_id: 1 }]);;;;;
```;;;;;
"I receive an error triggered by my unique index on database level: `ActiveRecord::RecordNotUnique: PG::UniqueViolation: ERROR:  duplicate key value violates unique constraint """"idx_order_line_resources_order_line_id_resource_id""""` but not the validation error I was expecting.";;;;;
;;;;;
### Expected behavior;;;;;
<!-- Tell us what should happen -->;;;;;
I would like to get a validation error from ActiveRecord directly (`ActiveRecord::RecordInvalid`) and not by my pg database.;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
The error is triggered on database level, so my app raises `ActiveRecord::RecordNotUnique: PG::UniqueViolation`;;;;;
;;;;;
### System configuration;;;;;
**Rails version**:;;;;;
7.1.3.2;;;;;
;;;;;
**Ruby version**:;;;;;
3.3.0;;;;;
;;;;;
I hope everything is clear! 🙂 ;;;;;
"Thanks a lot for your help and keep up the good work, Rails team, you're doing an amazing job! ✨ "",2024-04-03T15:24:52Z,2024-04-04T08:40:58Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 126910270, 'node_id': 'MDU6TGFiZWwxMjY5MTAyNzA=', 'url': 'https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps', 'name': 'With reproduction steps', 'color': '009800', 'default': False, 'description': None}]""";;;;;
"2223118248,""Fix """"no anonymous block parameter"""" in ruby 3.1"",""### Motivation / Background";;;;;
;;;;;
On;;;;;
ruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [x86_64-linux-gnu] (e.g. Ubuntu 23.10), simple rails commands fail with;;;;;
`no anonymous block parameter`:;;;;;
;;;;;
```;;;;;
vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:38:in `require': vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:190: no anonymous block parameter (SyntaxError);;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:38:in `<class:AbstractAdapter>';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:31:in `<module:ConnectionAdapters>';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:15:in `<module:ActiveRecord>';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:14:in `<top (required)>';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb:3:in `require';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb:3:in `<top (required)>';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters.rb:100:in `require';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters.rb:100:in `resolve';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/database_configurations/database_config.rb:18:in `adapter_class';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/database_configurations/database_config.rb:26:in `validate!';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract/connection_handler.rb:268:in `resolve_pool_config';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract/connection_handler.rb:116:in `establish_connection';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_handling.rb:53:in `establish_connection';;;;;
        from repro.rb:20:in `<main>';;;;;
;;;;;
```;;;;;
;;;;;
One file repro:;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
require 'bundler';;;;;
Bundler.configure;;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
;;;;;
```;;;;;
;;;;;
This Pull Request has been created to fix this issue.;;;;;
;;;;;
### Detail;;;;;
;;;;;
"I do not know why this triggers """"no anonymous block parameter"""", as the parameter is clearly there.";;;;;
It was introduced when a named parameter was added, without the named parameter the error does not occur.;;;;;
However, converting to a named block parameter fixes this issue.;;;;;
",2024-04-03T14:36:24Z,2024-04-06T19:34:45Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2221347874,ActiveSupport::OrderedOptions#respond_to?(:call) true - breaking check for callable objects,""`ActiveSupport::OrderedOptions` returns `true` for `.respond_to?(:call)`, which breaks various duck-type approach to detect callable objects. Example is pretty popular [carrierwave-aws gem](https://github.com/carrierwaveuploader/carrierwave-aws/?tab=readme-ov-file#usage) which checks if one of the options is callable by checking `respond_to?(:call)`. ";;;;;
There is no reason to return true for any possible key. OpenStruct also returns 'nil` for non-existing keys, but `respond_to?` only returns `true` for existing keys.;;;;;
On the other hand someone did it on purpose, otherwise why implement `respond_to_missing?` as hard-coded `true`, so I'm not sure if there was no higher design here.;;;;;
### Steps to reproduce;;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
```;;;;;
ActiveSupport::OrderedOptions.new.respond_to?(:call) # => true;;;;;
ActiveSupport::InheritableOptions.new.respond_to?(:call) # => true;;;;;
```;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails""""";;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"  # gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
end;;;;;
;;;;;
"require """"active_support""""";;;;;
"require """"active_support/core_ext/object/blank""""";;;;;
"require """"minitest/autorun""""";;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_ordered_options_respond_to;;;;;
    assert ActiveSupport::OrderedOptions.new.update(aaa: 1).respond_to?(:aaa);;;;;
    refute ActiveSupport::OrderedOptions.new.respond_to?(:call);;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
<!-- Tell us what should happen -->;;;;;
ActiveSupport::OrderedOptions.new.respond_to?(:call) # => should return false;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
ActiveSupport::OrderedOptions.new.respond_to?(:call) # => returns true;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.0.8.1;;;;;
**Ruby version**: 3.0.4;;;;;
",2024-04-02T19:59:36Z,2024-04-07T12:45:38Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}]""";;;;;
"2219772792,counter_cache doesn't work with composite PKs (revisited),""In the past I opened issue [#50968](https://github.com/rails/rails/issues/50968) about `counter_cache` not working with composite PKs. The corresponding PR fixed the error, but I still have a case in my codebase where I still get a different error.";;;;;
;;;;;
### Steps to reproduce;;;;;
;;;;;
Unfortunately I was not able to reproduce this with a script, so the script below does NOT reproduce the error. In any case, I am attaching it is because this is my mapping. The difference between my codebase and the script below is that I am running against Postgres, however I don't see how that could play a role.;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :test_background_check_requests, force: true do |t|;;;;;
    t.integer :candidate_id;;;;;
    t.integer :account_id;;;;;
    t.string :name;;;;;
  end;;;;;
;;;;;
  create_table :test_candidates, force: true, primary_key: %i[candidate_id account_id] do |t|;;;;;
    t.integer :candidate_id;;;;;
    t.integer :account_id;;;;;
    t.integer :test_background_check_requests_count;;;;;
    t.string :name;;;;;
  end;;;;;
end;;;;;
;;;;;
class TestCandidate < ActiveRecord::Base;;;;;
  self.primary_key = %i[candidate_id account_id];;;;;
  has_many :test_background_check_requests, query_constraints: [:candidate_id, :account_id], inverse_of: :test_candidate;;;;;
end;;;;;
;;;;;
class TestBackgroundCheckRequest < ActiveRecord::Base;;;;;
  belongs_to :test_candidate, counter_cache: true, query_constraints: [:candidate_id, :account_id];;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_association_stuff;;;;;
"    test_candidate = TestCandidate.create!(candidate_id: 1, account_id: 1, name: """"Foo Barson"""")";;;;;
"    test_candidate.test_background_check_requests.create!(candidate_id: 1, account_id: 1, name: """"Background check request 1"""")";;;;;
;;;;;
    assert_equal 1, TestBackgroundCheckRequest.count;;;;;
    assert_equal 1, test_candidate.reload.test_background_check_requests_count;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
I was expecting the creation to take place correctly, and the counter to increase.;;;;;
;;;;;
### Actual behavior;;;;;
I am getting the following exception:;;;;;
;;;;;
```;;;;;
"Minitest::UnexpectedError: ArgumentError: Expected corresponding value for [""""id"""", """"account_id""""] to be an Array";;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:82:in `block (2 levels) in expand_from_hash';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:81:in `map';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:81:in `block in expand_from_hash';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:79:in `each';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:79:in `flat_map';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:79:in `expand_from_hash';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:25:in `build_from_hash';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/query_methods.rb:1526:in `build_where_clause';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/query_methods.rb:943:in `where!';;;;;
    activerecord (7.1.3.2) lib/active_record/counter_cache.rb:115:in `update_counters';;;;;
    activerecord (7.1.3.2) lib/active_record/locking/optimistic.rb:182:in `update_counters';;;;;
    activerecord (7.1.3.2) lib/active_record/persistence.rb:974:in `increment!';;;;;
    activerecord (7.1.3.2) lib/active_record/locking/optimistic.rb:64:in `increment!';;;;;
    activerecord (7.1.3.2) lib/active_record/callbacks.rb:436:in `increment!';;;;;
    activerecord (7.1.3.2) lib/active_record/associations/has_many_association.rb:100:in `update_counter';;;;;
    activerecord (7.1.3.2) lib/active_record/associations/has_many_association.rb:122:in `delete_or_nullify_all_records';;;;;
    activerecord (7.1.3.2) lib/active_record/associations/collection_association.rb:161:in `delete_all';;;;;
    activerecord (7.1.3.2) lib/active_record/associations/collection_proxy.rb:475:in `delete_all';;;;;
    test/services/candidates/copier_base_test.rb:602:in `block in <class:CopierBaseTest>';;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: ;;;;;
7.1.3.2 (branch `7-1-stable`);;;;;
;;;;;
**Ruby version**: ;;;;;
3.2.2;;;;;
",2024-04-02T07:31:16Z,2024-04-03T22:56:59Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 1071962662, 'node_id': 'MDU6TGFiZWwxMDcxOTYyNjYy', 'url': 'https://api.github.com/repos/rails/rails/labels/more-information-needed', 'name': 'more-information-needed', 'color': 'bfdadc', 'default': False, 'description': 'When reporter needs to provide more information'}]""";;;;;
"2219541327,[Fix #51463] Raise an error when invalid `:on` or `:except` options are given to `#resource` or `#resources`,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Fixes https://github.com/rails/rails/issues/51463.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Raises an `ArgumentError` when a `ActionDispatch::Routing::Mapper::Resources::Resource` is initalized with `:on` or `:except` options that aren't default (index, create, new, show, update, and destroy) actions .;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
See my comment below as to why this seems like more changes than it needs to be.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-02T04:30:58Z,2024-04-04T09:38:53Z,[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}]""";;;;;
"2219534455,`#resource` and `#resources` fail quietly and succeed quietly when invalid arguments are passed to `:only` and `:except` options respectively,""This came up when pairing with a dev who is newish to Rails. They assumed that passing a custom action argument to `:only` when using `#resources` would auto-magically define a route for it with some defaults. Reading the examples in the documentation for these methods, it's not clear (especially to beginners) what all the accepted arguments for these options are, [there are only examples using default actions](https://www.rubydoc.info/docs/rails/ActionDispatch%2FRouting%2FMapper%2FResources:resources).";;;;;
;;;;;
I think it would be beneficial if an error was raised if invalid arguments are passed in.;;;;;
;;;;;
### Steps to reproduce;;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
end;;;;;
;;;;;
"require """"action_controller/railtie""""";;;;;
;;;;;
class TestApp < Rails::Application;;;;;
  config.root = __dir__;;;;;
"  config.hosts << """"example.org""""";;;;;
"  config.secret_key_base = """"secret_key_base""""";;;;;
;;;;;
  config.logger = Logger.new($stdout);;;;;
  Rails.logger  = config.logger;;;;;
end;;;;;
;;;;;
"require """"minitest/autorun""""";;;;;
"require """"rack/test""""";;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  include Rack::Test::Methods;;;;;
;;;;;
  def test_invalid_resources_only_option;;;;;
    assert_raises(ArgumentError) do # ❌ fails quietly, no routes generated;;;;;
      app.routes.draw do;;;;;
        resources :posts, only: :foo;;;;;
      end;;;;;
;;;;;
      # => routes: [];;;;;
"      Rails.logger.info(""""routes: #{app.routes.routes.map { |r| r.defaults[:action] }}"""")";;;;;
    end;;;;;
  end;;;;;
;;;;;
  def test_invalid_resources_except_option;;;;;
    assert_raises(ArgumentError) do # ❌ succeeds quietly, all default routes generated;;;;;
      app.routes.draw do;;;;;
        resources :posts, except: :foo;;;;;
      end;;;;;
;;;;;
"      # => routes: [""""index"""", """"create"""", """"new"""", """"edit"""", """"show"""", """"update"""", """"update"""", """"destroy""""]";;;;;
"      Rails.logger.info(""""routes: #{app.routes.routes.map { |r| r.defaults[:action] }}"""")";;;;;
    end;;;;;
  end;;;;;
;;;;;
  private;;;;;
    def app;;;;;
      Rails.application;;;;;
    end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
<!-- Tell us what should happen -->;;;;;
;;;;;
Passing invalid options to `:only` or `:except` should raise an error with an informative message.;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
;;;;;
Passing invalid options to `:only` fails quietly and no routes are generated.;;;;;
Passing invalid arguments to `:except` succeeds quietly and all default routes are generated (index, create, new, show, update, and destroy).;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: Edge;;;;;
;;;;;
"**Ruby version**: 3.3.0"",2024-04-02T04:24:01Z,2024-04-02T11:17:11Z,[]";;;;;
"2219354900,Fix inline habtm fixtures for tables with composite primary keys,Fixes https://github.com/rails/rails/issues/51461.,2024-04-02T00:43:32Z,2024-04-02T00:43:37Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2218168973,Composite PKs break fixture loading for many-to-many associations,""### Steps to reproduce";;;;;
;;;;;
Copy the following fixture files in a directory:;;;;;
;;;;;
**posts.yml**;;;;;
```yaml;;;;;
one:;;;;;
"    title: """"My first post""""";;;;;
    account_id: 1;;;;;
    labels: one, two;;;;;
```;;;;;
**labels.yml**;;;;;
```yaml;;;;;
one:;;;;;
"    text: """"Label 1""""";;;;;
two:;;;;;
"    text: """"Label 2""""";;;;;
```;;;;;
;;;;;
and use them here:;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails""""";;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"  # gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
;;;;;
  create_table :posts, force: true, primary_key: %i[id account_id] do |t|;;;;;
    t.integer :id;;;;;
    t.integer :account_id;;;;;
    t.string :title;;;;;
  end;;;;;
;;;;;
  create_table :posts_labels, force: true do |t|;;;;;
    t.integer :post_id;;;;;
    t.integer :account_id;;;;;
    t.references :label, foreign_key: true;;;;;
  end;;;;;
;;;;;
  create_table :labels, force: true do |t|;;;;;
    t.string :text;;;;;
  end;;;;;
end;;;;;
;;;;;
class Post < ActiveRecord::Base;;;;;
  self.primary_key = %i[id account_id];;;;;
  has_many :posts_labels;;;;;
  has_many :labels, through: :posts_labels;;;;;
end;;;;;
;;;;;
class PostsLabel < ActiveRecord::Base;;;;;
  belongs_to :post, query_constraints: [:post_id, :account_id];;;;;
  belongs_to :label;;;;;
end;;;;;
;;;;;
class Label < ActiveRecord::Base;;;;;
  has_many :posts_labels;;;;;
  has_many :posts, through: :posts_labels;;;;;
end;;;;;
;;;;;
# Load the fixtures into the database (update the directory);;;;;
"ActiveRecord::FixtureSet.create_fixtures(""""/fixtures-directory/"""", %w[posts labels])";;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_association_stuff;;;;;
    assert_equal 1, Post.count;;;;;
    assert_equal 2, Label.count;;;;;
    assert_equal 2, Post.first.labels.count # Fails here;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
According to the documentation of [ActiveRecord::FixtureSet](https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html), the fixture for the intermediate many-to-many table [can be skipped](https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html#:~:text=Let%E2%80%99s%20make%20the%20HABTM%20fixture%20go%20away.).;;;;;
;;;;;
### Actual behavior;;;;;
The fixtures are not loaded correctly. These are the sql statements for the fixtures (notice the `null`):;;;;;
;;;;;
```sql;;;;;
"DELETE FROM """"posts""""";;;;;
"DELETE FROM """"posts_labels""""";;;;;
"DELETE FROM """"labels""""";;;;;
"INSERT INTO """"posts"""" (""""id"""", """"account_id"""", """"title"""") VALUES (980190962, 1, 'My first post')";;;;;
"INSERT INTO """"posts_labels"""" (""""post_id"""", """"label_id"""") VALUES (NULL, 980190962)";;;;;
"INSERT INTO """"posts_labels"""" (""""post_id"""", """"label_id"""") VALUES (NULL, 298486374)";;;;;
"INSERT INTO """"labels"""" (""""id"""", """"text"""") VALUES (980190962, 'Label 1')";;;;;
"INSERT INTO """"labels"""" (""""id"""", """"text"""") VALUES (298486374, 'Label 2')";;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: `7.1.3.2`;;;;;
;;;;;
**Ruby version**: `3.2.2`;;;;;
",2024-04-01T12:30:45Z,2024-04-02T06:41:43Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 126910270, 'node_id': 'MDU6TGFiZWwxMjY5MTAyNzA=', 'url': 'https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps', 'name': 'With reproduction steps', 'color': '009800', 'default': False, 'description': None}]""";;;;;
"2217292282,New print styles and generator to add to build,""";;;;;
"<img width=""""958"""" alt=""""Screenshot 2024-03-31 at 8 43 35 PM"""" src=""""https://github.com/rails/rails/assets/2223/995815e6-1d34-4550-b49c-c7a78e213cc1"""">";;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
This updates print CSS to be more inline with the overall style. The sidebar is inlined (same as mobile), and content is 100%. Previous code in the launch from boilerplate has been struck or integrated better.;;;;;
;;;;;
* Links show in text after the original link text;;;;;
* Border line around code and copy button are removed;;;;;
* Print is now generated from SCSS to CSS via the generator that builds the other CSS files ;;;;;
;;;;;
### Additional information;;;;;
;;;;;
Some browsers will override backgrounds on print;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-01T00:58:28Z,2024-04-01T14:57:32Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2217108029,Add `touch` option to `#update_columns` and `#update_column` methods,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
I've created this Pull Request because not all ActiveRecord persistence methods affect timestamps or have a touch option. This can be problematic, especially when there is some ETL processing that relies on the `updated_at` timestamps instead of copying the whole table. For instance, if someone uses `#update_columns` for performance reasons, it may result in lost updates. This is particularly an issue for `#update_column`. If a user wants to keep timestamps current, they have to explicitly call the `#touch` method after using `#update_column`.;;;;;
;;;;;
Examples:;;;;;
```ruby;;;;;
# we don't want to perform any callbacks or validations here so use #update_columns;;;;;
current_user.update_columns(;;;;;
  last_ip: request.remote_ip,;;;;;
  updated_at: Time.current # but we still want to keep track of the last changes, so have to provide a timestamp explicitly;;;;;
);;;;;
```;;;;;
;;;;;
```ruby;;;;;
current_user.update_column(:last_ip, request.remote_ip);;;;;
current_user.touch;;;;;
```;;;;;
;;;;;
Rails discussion: https://discuss.rubyonrails.org/t/proposal-add-touch-option-for-update-columns-update-column/85388;;;;;
;;;;;
### Detail;;;;;
;;;;;
This PR adds a `touch` option to the `#update_columns` and `#update_column` methods.;;;;;
The option allows to update `updated_at`/`updated_on` attributes with ;;;;;
;;;;;
```ruby;;;;;
    person.update_columns(name: 'John Doe', touch: true);;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-31T17:50:27Z,2024-04-03T09:44:15Z,[{'id': 107190, 'node_id': 'MDU6TGFiZWwxMDcxOTA=', 'url': 'https://api.github.com/repos/rails/rails/labels/activemodel', 'name': 'activemodel', 'color': '00E5FF', 'default': False, 'description': None}, {'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2216178575,Action Cable Guide - add Transmit method,""### Motivation / Background";;;;;
;;;;;
I was exploring making use of Action Cables for a project I was working on, and didn't find any mention of the `transmit` method of channels, which allows you to transmit data to the specific subscriber that initiated the interaction.;;;;;
;;;;;
As someone relatively new to Rails and entirely new to Action Cables I spun my wheels for a bit trying to figure out how interactions like this should be handled, and I was surprised to see the method wasn't even mentioned in the guide on Action Cables.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Documentation PR;;;;;
;;;;;
This Pull Request updates the Action Cable guide to add information on the existence of the `transmit` method, allowing channels to send data to a specific subscriber.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-30T03:23:34Z,2024-03-31T05:19:57Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2215236766,Postgresql date type is not properly typecasted when using direct SQL queries like select_all,""When using direct SQL query, the date is not properly typecasted on Postgresql:";;;;;
```;;;;;
"> ActiveRecord::Base.connection.select_all(""""  SELECT '2024-01-01'::date """")";;;;;
   (0.5ms)    SELECT '2024-01-01'::date;;;;;
  ↳ config/initializers/local.rb:52:in `sa';;;;;
=> #<ActiveRecord::Result:0x0000000115516010;;;;;
 @column_types=;;;;;
  {0=>#<ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Date:0x0000000116a5acf0 @limit=nil, @precision=nil, @scale=nil, @timezone=nil>,;;;;;
"   """"date""""=>#<ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Date:0x0000000116a5acf0 @limit=nil, @precision=nil, @scale=nil, @timezone=nil>},";;;;;
" @columns=[""""date""""],";;;;;
 @hash_rows=nil,;;;;;
" @rows=[[""""2024-01-01""""]]>";;;;;
```;;;;;
;;;;;
### Notes;;;;;
;;;;;
* The column type seems to be recognized correctly, but typecast is not applied;;;;;
* SQLite seems to generate even worth result like `2024` as integer.;;;;;
* Timestamp doesn't have this problem;;;;;
;;;;;
### Reproduce;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
require 'bundler/inline';;;;;
;;;;;
gemfile(true) do;;;;;
  source 'https://rubygems.org';;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
  gem 'rails';;;;;
;;;;;
  gem 'pg';;;;;
  # gem 'sqlite3';;;;;
end;;;;;
;;;;;
require 'active_record';;;;;
require 'minitest/autorun';;;;;
require 'logger';;;;;
;;;;;
# `CREATE DATABASE rails_51428_test;`;;;;
ActiveRecord::Base.establish_connection(adapter: 'postgresql', database: 'rails_test');;;;;
# ActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:');;;;;
ActiveRecord::Base.logger = Logger.new($stdout);;;;;
;;;;;
;;;;;
class DateTest < Minitest::Test;;;;;
  def test_stuff;;;;;
    value = ActiveRecord::Base.connection.select_value(;;;;;
"      """"select cast('2024-01-01' as date)""""";;;;;
    );;;;;
    assert_equal Date.new(2024, 01, 01), value;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
```;;;;;
Expected: Mon, 01 Jan 2024;;;;;
"  Actual: """"2024-01-01""""";;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3;;;;;
;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-29T12:13:51Z,2024-04-05T17:17:41Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 70310659, 'node_id': 'MDU6TGFiZWw3MDMxMDY1OQ==', 'url': 'https://api.github.com/repos/rails/rails/labels/PostgreSQL', 'name': 'PostgreSQL', 'color': 'fbca04', 'default': False, 'description': None}]""";;;;;
"2214734569,Fix an error for `apply_rubocop_autocorrect_after_generate!` with `--pretend`,""## Motivation / Background";;;;;
;;;;;
An issue was identified where an error occurs when executing `apply_rubocop_autocorrect_after_generate!` with `--pretend` option, according to feedback from https://github.com/rubocop/rubocop-rails/pull/1263.;;;;;
;;;;;
## Details;;;;;
;;;;;
This PR fixes the following error when executing `apply_rubocop_autocorrect_after_generate!` with `--pretend` option:;;;;;
;;;;;
```console;;;;;
$ bin/rails g migration create_users -p;;;;;
```;;;;;
;;;;;
### Before;;;;;
;;;;;
An `Errno::ENOENT` error occurs:;;;;;
;;;;;
```console;;;;;
invoke  active_record;;;;;
create    db/migrate/20240329060627_create_users.rb;;;;;
/Users/koic/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/bundler/gems/rails-8e46af8c9396/railties/lib/rails/configuration.rb:138:in;;;;;
`system': No such file or directory - bin/rubocop (Errno::ENOENT);;;;;
```;;;;;
;;;;;
### After;;;;;
;;;;;
No errors.;;;;;
;;;;;
## Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-29T06:17:20Z,2024-03-30T10:23:42Z,[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2214519753,Remove node_modules from the final image,,2024-03-29T02:55:34Z,2024-04-01T03:46:51Z,""[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2214042050,Emit deprecation warning about inverse_of inference only for valid reflections,""### Motivation / Background";;;;;
;;;;;
This is a small follow-up to https://github.com/rails/rails/pull/50883. ;;;;;
;;;;;
As we went through all deprecation warnings while we run Rails edge with;;;;;
```ruby;;;;;
config.active_record.automatically_invert_plural_associations = false;;;;;
```;;;;;
we realised that we had warnings for an inferred reflection that would be wrong to infer. Digging deeper into whether this meant that enabling `automatically_invert_plural_associations` would actually mean we'd have completely wrong values in the collection of the inferred association, we realised that no, the reflection was correctly not inferred. However, the warning was emitted regardless. ;;;;;
;;;;;
This happens because the deprecation warning is emitted without checking whether the found `reflection` is valid. The warning says that the inverse association could have been automatically inferred but wasn't because `automatically_invert_plural_associations` is disabled. However, this is not true, because later on, when we check whether the reflection is valid, we see it's not, and end up returning `nil`.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This pull request just adds the `valid_inverse_reflection?(reflection)` condition to determine whether the deprecation warning needs to happen. That already checks that `reflection` is truthy. ;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-28T20:11:38Z,2024-03-29T06:35:20Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2213953232,Make it possible to opt-out of sending Link header in `preload_link_tag`,""This commit adds a `preload_links_header` option to `preload_link_tag` to disable sending of the Link header in the HTTP response.";;;;;
;;;;;
Currently `ActionView::Helpers::AssetTagHelper.preload_links_header` only controls whether `javascript_include_tag` and `stylesheet_link_tag` send the Link header, but there is no way to control the behavior of `preload_link_tag`. We could just check that variable, but existing applications might be relying on `preload_link_tag` to add the header. Users also might want control over this on a per call basis.;;;;;
;;;;;
Closes #51436;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-28T19:18:46Z,2024-03-28T21:03:36Z,[{'id': 3666649, 'node_id': 'MDU6TGFiZWwzNjY2NjQ5', 'url': 'https://api.github.com/repos/rails/rails/labels/actionview', 'name': 'actionview', 'color': 'd7e102', 'default': False, 'description': None}]""";;;;;
"2213933174,Bump mysql2 to fix build error with mysql-client 8.3,""### Motivation / Background";;;;;
;;;;;
This fixes bundle install when using the latest version of mysql-client, 8.3;;;;;
;;;;;
### Detail;;;;;
;;;;;
<details>;;;;;
<summary>Sample installation log</summary>;;;;;
;;;;;
```;;;;;
bundle install;;;;;
Fetching gem metadata from https://rubygems.org/.........;;;;;
Installing mysql2 0.5.5 with native extensions;;;;;
Gem::Ext::BuildError: ERROR: Failed to build gem native extension.;;;;;
;;;;;
    current directory: /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/mysql2-0.5.5/ext/mysql2;;;;;
/Users/josh/.rbenv/versions/3.3.0/bin/ruby extconf.rb;;;;;
checking for rb_absint_size()... yes;;;;;
checking for rb_absint_singlebit_p()... yes;;;;;
checking for rb_gc_mark_movable()... yes;;;;;
checking for rb_wait_for_single_fd()... yes;;;;;
checking for rb_enc_interned_str() in ruby.h... yes;;;;;
-----;;;;;
Using --with-openssl-dir=/opt/homebrew/opt/openssl@3;;;;;
-----;;;;;
-----;;;;;
Using mysql_config at /opt/homebrew/bin/mysql_config;;;;;
-----;;;;;
checking for mysql.h... yes;;;;;
checking for errmsg.h... yes;;;;;
checking for SSL_MODE_DISABLED in mysql.h... yes;;;;;
checking for SSL_MODE_PREFERRED in mysql.h... yes;;;;;
checking for SSL_MODE_REQUIRED in mysql.h... yes;;;;;
checking for SSL_MODE_VERIFY_CA in mysql.h... yes;;;;;
checking for SSL_MODE_VERIFY_IDENTITY in mysql.h... yes;;;;;
checking for MYSQL.net.vio in mysql.h... yes;;;;;
checking for MYSQL.net.pvio in mysql.h... no;;;;;
checking for MYSQL_DEFAULT_AUTH in mysql.h... yes;;;;;
checking for MYSQL_ENABLE_CLEARTEXT_PLUGIN in mysql.h... yes;;;;;
checking for SERVER_QUERY_NO_GOOD_INDEX_USED in mysql.h... yes;;;;;
checking for SERVER_QUERY_NO_INDEX_USED in mysql.h... yes;;;;;
checking for SERVER_QUERY_WAS_SLOW in mysql.h... yes;;;;;
checking for MYSQL_OPTION_MULTI_STATEMENTS_ON in mysql.h... yes;;;;;
checking for MYSQL_OPTION_MULTI_STATEMENTS_OFF in mysql.h... yes;;;;;
checking for my_bool in mysql.h... no;;;;;
-----;;;;;
Don't know how to set rpath on your system, if MySQL libraries are not in path mysql2 may not load;;;;;
-----;;;;;
-----;;;;;
Setting libpath to /opt/homebrew/Cellar/mysql/8.3.0/lib;;;;;
-----;;;;;
creating Makefile;;;;;
;;;;;
current directory: /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/mysql2-0.5.5/ext/mysql2;;;;;
make DESTDIR\= sitearchdir\=./.gem.20240328-28015-xyw7df sitelibdir\=./.gem.20240328-28015-xyw7df clean;;;;;
;;;;;
current directory: /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/mysql2-0.5.5/ext/mysql2;;;;;
make DESTDIR\= sitearchdir\=./.gem.20240328-28015-xyw7df sitelibdir\=./.gem.20240328-28015-xyw7df;;;;;
compiling client.c;;;;;
In file included from client.c:15:;;;;;
./mysql_enc_name_to_ruby.h:43:1: warning: a function definition without a prototype is deprecated in all versions of C and is;;;;;
not supported in C2x [-Wdeprecated-non-prototype];;;;;
mysql2_mysql_enc_name_to_rb_hash (str, len);;;;;
^;;;;;
./mysql_enc_name_to_ruby.h:86:1: warning: a function definition without a prototype is deprecated in all versions of C and is;;;;;
not supported in C2x [-Wdeprecated-non-prototype];;;;;
mysql2_mysql_enc_name_to_rb (str, len);;;;;
^;;;;;
client.c:1438:3: error: call to undeclared function 'mysql_ssl_set'; ISO C99 and later do not support implicit function;;;;
declarations [-Wimplicit-function-declaration];;;;;
  mysql_ssl_set(wrapper->client,;;;;;
  ^;;;;;
client.c:1438:3: note: did you mean 'mysql_close'?;;;;;
/opt/homebrew/Cellar/mysql/8.3.0/include/mysql/mysql.h:797:14: note: 'mysql_close' declared here;;;;;
void STDCALL mysql_close(MYSQL *sock);;;;;
             ^;;;;;
2 warnings and 1 error generated.;;;;;
make: *** [client.o] Error 1;;;;;
;;;;;
make failed, exit code 2;;;;;
;;;;;
Gem files will remain installed in /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/mysql2-0.5.5 for inspection.;;;;;
Results logged to;;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/extensions/arm64-darwin-23/3.3.0/mysql2-0.5.5/gem_make.out;;;;;
;;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:125:in `run';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:51:in `block in make';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:43:in `each';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:43:in `make';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/ext_conf_builder.rb:42:in `build';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:193:in `build_extension';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:227:in `block in build_extensions';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:224:in `each';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:224:in `build_extensions';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/installer.rb:852:in `build_extensions';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/rubygems_gem_installer.rb:76:in;;;;;
`build_extensions';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/rubygems_gem_installer.rb:28:in;;;;;
`install';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/source/rubygems.rb:205:in `install';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/installer/gem_installer.rb:54:in;;;;;
`install';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/installer/gem_installer.rb:16:in;;;;;
`install_from_spec';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/installer/parallel_installer.rb:132:in;;;;;
`do_install';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/installer/parallel_installer.rb:123:in;;;;;
`block in worker_pool';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/worker.rb:62:in `apply_func';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/worker.rb:57:in `block in;;;;;
process_queue';;;;;
  <internal:kernel>:187:in `loop';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/worker.rb:54:in `process_queue';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/worker.rb:90:in `block (2 levels) in;;;;;
create_threads';;;;;
;;;;;
An error occurred while installing mysql2 (0.5.5), and Bundler cannot continue.;;;;;
;;;;;
In Gemfile:;;;;;
  mysql2;;;;;
```;;;;;
;;;;;
</details>;;;;;
;;;;;
### Additional information;;;;;
;;;;;
- [GitHub Issue in mysql2](https://github.com/brianmario/mysql2/issues/1346);;;;;
- [0.5.6 release notes listing the fix](https://github.com/brianmario/mysql2/releases/tag/0.5.6);;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] n/a - Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] n/a - CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-28T19:05:52Z,2024-03-28T19:55:23Z,[]
2213880505,Disable send_preload_links_header outright,### Steps to reproduce";;;;;
;;;;;
Suppose you have a partial like this:;;;;;
;;;;;
```haml;;;;;
= cache([ActionController::Base.asset_host], expires_in: 1.minute) do;;;;;
    = preload_link_tag(path_to_stylesheet('application');;;;;
```;;;;;
;;;;;
If the partial is not cached, then `preload_link_tag` will call `send_preload_links_header`, which modifies the `Link` HTTP header.;;;;;
;;;;;
However, if the partial is cached, then the `Link` HTTP header is not sent.;;;;;
;;;;;
This is a surprising side effect of caching `preload_link_tag`. I was surprised that `send_preload_links_header` is even called in the first place.;;;;;
;;;;;
https://github.com/rails/rails/pull/48405 lowered the max header size from 8K to 1000 bytes, but I think Rails should go farther than that: provide an option to disable this sending altogether, perhaps as an argument to `preload_link_tag`. For example:;;;;;
;;;;;
```diff;;;;;
diff --git a/actionview/lib/action_view/helpers/asset_tag_helper.rb b/actionview/lib/action_view/helpers/asset_tag_helper.rb;;;;;
index 11528eb33d..0dd3ff517a 100644;;;;;
#NOM?;;;;;
#NOM?;;;;;
@@ -325,6 +325,7 @@ def preload_link_tag(source, options = {});;;;;
"         crossorigin = """"anonymous"""" if crossorigin == true || (crossorigin.blank? && as_type == """"font"""")";;;;;
         integrity = options[:integrity];;;;;
         nopush = options.delete(:nopush) || false;;;;;
+        send_link_header = options.key?(:preload_links_header) ? options.delete(:preload_links_header) : true;;;;;
"         rel = mime_type == """"module"""" ? """"modulepreload"""" : """"preload""""";;;;;
 ;;;;;
         link_tag = tag.link(**{;;;;;
@@ -341,7 +342,7 @@ def preload_link_tag(source, options = {});;;;;
"         preload_link += """"";" integrity=#{integrity}"""" if integrity";;;;
"         preload_link += """"";" nopush"""" if nopush";;;;
 ;;;;;
-        send_preload_links_header([preload_link]);;;;;
+        send_preload_links_header([preload_link]) if send_link_header;;;;;
 ;;;;;
         link_tag;;;;;
       end;;;;;
diff --git a/actionview/test/template/asset_tag_helper_test.rb b/actionview/test/template/asset_tag_helper_test.rb;;;;;
index f0c8a10f57..cd6cdd8925 100644;;;;;
#NOM?;;;;;
#NOM?;;;;;
@@ -628,6 +628,13 @@ def test_should_set_preload_early_hints_with_rel_modulepreload;;;;;
     end;;;;;
   end;;;;;
 ;;;;;
#NOM?;;;;;
#NOM?;;;;;
"+      preload_link_tag(""""http://example.com/all.js"""", type: """"module"""", preload_links_header: false)";;;;;
"+      assert_nil @response.headers[""""Link""""]";;;;;
#NOM?;;;;;
#NOM?;;;;;
+;;;;;
   def test_should_set_preload_links_with_integrity_hashes;;;;;
     with_preload_links_header do;;;;;
"       stylesheet_link_tag(""""http://example.com/style.css"""", integrity: """"sha256-AbpHGcgLb+kRsJGnwFEktk7uzpZOCcBY74+YBdrKVGs"""")";;;;;
```;;;;;
;;;;;
",2024-03-28T18:33:40Z,2024-03-28T21:07:42Z,[{'id': 3666649, 'node_id': 'MDU6TGFiZWwzNjY2NjQ5', 'url': 'https://api.github.com/repos/rails/rails/labels/actionview', 'name': 'actionview', 'color': 'd7e102', 'default': False, 'description': None}, {'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}]""";;;;;
"2213548177,[RF-DOCS] Action View Overview Guide [ci-skip],""## Motivation / Background";;;;;
;;;;;
This Pull Request is for updating and improving the Action View Overview guide. ;;;;;
;;;;;
Note: This guide was intertwined with a different guide (Layouts and Rendering) with duplicate content and overlapping concepts. A follow-on PR will focus on the other guide and then we will do a pass over both guides together.;;;;;
;;;;;
## Details;;;;;
;;;;;
#NOM?;;;;;
#NOM?;;;;;
#NOM?;;;;;
#NOM?;;;;;
;;;;;
## Testing;;;;;
;;;;;
- [x] Run `guides:generate`;;;;;
- [x] Run `guides:lint` ;;;;;
"- [x] Run rubocop on code samples"",2024-03-28T15:41:52Z,2024-04-06T01:04:57Z,""[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2213456024,[Bug][ActiveRecord] #count(:all) on grouped query should clear ORDER BY if it clears SELECT,""### Steps to reproduce";;;;;
;;;;;
"Build a query that uses `.count(:all)` and `.group(...)` with a custom `.select(""""... AS alias"""")` and a `.order(:alias)`";;;;;
;;;;;
It seems ActiveRecord when calling `.count(:all)` will remove from the SELECT the `alias` column and everything else but the primary key, however it keeps the `ORDER BY alias`. To execute `COUNT(...)`, the `ORDER BY` is kind of irrelevant, it should probably be removed.;;;;;
;;;;;
ActiveRecord seems to already clear ORDER BY for some specific scenario as seen here: https://github.com/rails/rails/blob/main/activerecord/lib/active_record/relation/calculations.rb#L240 however in my scenario, the `has_include(...)` returns false and goes straight to `perform_calculation(operation, column_name)`;;;;;
;;;;;
Here https://github.com/rails/rails/blob/main/activerecord/lib/active_record/relation/calculations.rb#L536 select values are redefined, maybe we should simply add;;;;;
;;;;;
```;;;;;
relation.order_values = [];;;;;
```;;;;;
;;;;;
;;;;;
**Test code**;;;;;
;;;;;
Note: It ain't specific to Postgres. Error is present with SQLite too.;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
# Toggle this to test with SQLite;;;;;
use_postgres = false;;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", """"7.1.3.2""""";;;;;
;;;;;
"  gem """"database_cleaner""""";;;;;
;;;;;
  if use_postgres;;;;;
"    gem """"pg""""";;;;;
  else ;;;;;
"    gem """"sqlite3""""";;;;;
  end;;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
"require """"database_cleaner""""";;;;;
;;;;;
if use_postgres;;;;;
"  ActiveRecord::Base.establish_connection(adapter: """"postgresql"""", host: """"localhost"""", database: """"dev"""", username: """"dev"""",";;;;;
"  password: """"dev"""", port: 5437)";;;;;
else;;;;;
"  ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
end;;;;;
;;;;;
ActiveRecord::Base.logger = Logger.new($stdout);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :conversations, force: true do |t| # rubocop:disable Style/SymbolProc;;;;;
    t.timestamps;;;;;
  end;;;;;
;;;;;
  create_table :messages, force: true do |t|;;;;;
    t.references :conversation;;;;;
    t.timestamps;;;;;
  end;;;;;
end;;;;;
;;;;;
class Conversation < ActiveRecord::Base # rubocop:disable Rails/ApplicationRecord;;;;;
  has_many :messages, dependent: :destroy;;;;;
end;;;;;
;;;;;
class Message < ActiveRecord::Base # rubocop:disable Rails/ApplicationRecord;;;;;
  belongs_to :conversation;;;;;
end;;;;;
;;;;;
DatabaseCleaner.strategy = :truncation;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  class SuccessException < StandardError; end;;;;
;;;;;
  def setup;;;;;
    DatabaseCleaner.start;;;;;
    Conversation.create!.tap do |conversation|;;;;;
      Message.create!(conversation: conversation);;;;;
      Message.create!(conversation: conversation);;;;;
      Message.create!(conversation: conversation);;;;;
    end;;;;;
  end;;;;;
  ;;;;;
  def teardown;;;;;
    DatabaseCleaner.clean;;;;;
  end;;;;;
;;;;;
  def assert_not_raise(&block);;;;;
    assert_raises(SuccessException) do;;;;;
      block.call;;;;;
      raise SuccessException;;;;;
    end;;;;;
  end;;;;;
;;;;;
  def sql_now;;;;;
"    if ActiveRecord::Base.connection_db_config.adapter == """"sqlite3""""";;;;;
"      """"DATE('NOW')""""";;;;;
    else;;;;;
"      """"NOW()""""";;;;;
    end;;;;;
  end;;;;;
;;;;;
  def base_query;;;;;
    Conversation;;;;;
            .select(;;;;;
"              """"conversations.*"""",";;;;;
"              """"COUNT(messages.id) AS messages_count"""",";;;;;
"              """"#{sql_now} AS last_activity_at""""";;;;;
            );;;;;
            .left_joins(:messages);;;;;
            .group(:id);;;;;
  end;;;;;
;;;;;
  def test_it_should_work_with_aliased_order_by;;;;;
"    query = base_query.order(""""last_activity_at DESC"""")";;;;;
;;;;;
    assert_not_raise { query.count(:all) };;;;;
  end;;;;;
;;;;;
  def test_it_demonstrates_that_non_aliased_order_by_work;;;;;
"    query = base_query.order(Arel.sql(""""#{sql_now} DESC""""))";;;;;
;;;;;
;;;;;
    assert_not_raise { query.count(:all) };;;;;
  end;;;;;
;;;;;
  def test_without_order_by_it_always_work;;;;;
"    query = base_query # .order(""""last_activity_at DESC"""")";;;;;
;;;;;
    assert_not_raise { query.count(:all) };;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
This query should work;;;;;
;;;;;
```ruby;;;;;
    Conversation;;;;;
            .select(;;;;;
"              """"conversations.*"""",";;;;;
"              """"COUNT(messages.id) AS messages_count"""",";;;;;
"              """"NOW() AS last_activity_at""""";;;;;
            );;;;;
            .left_joins(:messages);;;;;
            .order(:last_activity_at);;;;;
            .group(:id);;;;;
```;;;;;
;;;;;
Expected query;;;;;
;;;;;
```;;;;;
SELECT ;;;;;
"  COUNT(*) AS """"count_all"""", ";;;;;
"  """"conversations"""".""""id"""" AS """"conversations_id"""" ";;;;;
"FROM """"conversations"""" ";;;;;
"LEFT OUTER JOIN """"messages"""" ON """"messages"""".""""conversation_id"""" = """"conversations"""".""""id"""" ";;;;;
"GROUP BY """"conversations"""".""""id""""";;;;;
;;;;;
#NOM?;;;;;
#NOM?;;;;;
```;;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
```;;;;;
"ActiveRecord::StatementInvalid <""""PG::UndefinedColumn: ERROR:  column \""""last_activity_at\"""" does not exist";;;;;
;;;;;
SELECT ;;;;;
"  COUNT(*) AS """"count_all"""", ";;;;;
"  """"conversations"""".""""id"""" AS """"conversations_id"""" ";;;;;
"FROM """"conversations"""" ";;;;;
"LEFT OUTER JOIN """"messages"""" ON """"messages"""".""""conversation_id"""" = """"conversations"""".""""id"""" ";;;;;
"GROUP BY """"conversations"""".""""id""""";;;;;
ORDER BY last_activity_at DESC;;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.0.0;;;;;
",2024-03-28T14:59:27Z,2024-04-02T15:15:35Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2210141203,[RF-DOCS] Action View Helpers Documentation [ci-skip],""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
This Pull Request has been created to provide clarity to the Action View Helpers guide.;;;;;
;;;;;
### Detail;;;;;
;;;;;
;;;;;
Here are some notes on what has changed:;;;;;
;;;;;
Some notes:;;;;;
;;;;;
- AssetTagHelper talks about a bunch of *_tag helpers, but also some of them mention *_url and *_path helpers. (which live in AssetUrlHelper). Those are helpful to know, but less frequently used I think. It's also incomplete (some mention it, others don't, *_tag helpers have their *_url/*_path counterparts, or use the basic `asset_path/url`.) I don't think it's worth expanding with all these variants, I'd rather remove the individual ones, and if we want to mention, we can maybe bundle them together within the same subsection instead, or just as examples of the related *_tag sections.;;;;;
- The cache helper could use some more info. I don't think it's worth linking to the Fragments API, but rather to the [fragments caching piece of the caching guide](https://edgeguides.rubyonrails.org/caching_with_rails.html#fragment-caching), where it goes into more details. The example could also be expanded to show something that at least gets a record as an example too.;;;;;
- `content_for` could perhaps benefit from showing `content_for?` in the example, somehow.;;;;;
- We do not want to show any form helpers here, just link to the specific guide, but we can maybe make that paragraph clearer.;;;;;
- `escape_javascript` could use an example (not the one that's on the API as it seems very jquery-related... maybe some other example of embedding some Ruby in JS or something);;;;;
- mention of `rails-html-sanitizer` could be linked.;;;;;
"- """"NB: The output may still contain unescaped '<', '>', '&' characters and confuse browsers."""" should be a note?";;;;;
- UrlHelper could have a few extra items like `current_page?` and `mail_to`, which can be commonly used. (no need to show each and every method, just the most common ones);;;;;
- CsrfHelper seems unnecessary to explain here. (we don't add CspHelper for instance... not sure we need to get into those, can probably skip them.);;;;;
- We could have a section on `TextHelper` mentioning things like `simple_format`, `truncate`, `excerpt`, maybe some other(s). (again, not everything, just the most commonly used ones);;;;;
- We could have a section on `TagHelper` mentioning `content_tag` and `tag`.;;;;;
;;;;;
- Updated the 'what you will know section';;;;;
#NOM?;;;;;
#NOM?;;;;;
#NOM?;;;;;
#NOM?;;;;;
- Added more clarity to `capture` and `content_for`;;;;;
#NOM?;;;;;
#NOM?;;;;;
#NOM?;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-27T08:14:18Z,2024-04-04T09:42:14Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2209113208,Fix PostgreSQL `include` indexes with keyword column names,Fixes #51428.,2024-03-26T19:13:53Z,2024-03-27T16:01:54Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2208982733,Problem with field named timestamp and index with include,""### Steps to reproduce";;;;;
;;;;;
"When you have a field named """"timestamp"""" and want to add an index including this field, the schema is generated with escape characters, making it impossible to run the load schema";;;;;
;;;;;
```ruby;;;;;
class ChangeIndexStatusToEvent < ActiveRecord::Migration[7.1];;;;;
  def change;;;;;
    add_index :events, [:status, :name, :app_id], name: 'index_events_on_status_name_app_id', include: [:id, :timestamp];;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
This schema is generated when running the migrate above:;;;;;
;;;;;
```ruby;;;;;
"t.index [""""status"""", """"name"""", """"app_id"""", """"timestamp""""], name: """"index_events_on_status_name_app_id"""", include: [""""id"""", """"\""""timestamp\""""""""]";;;;;
```;;;;;
;;;;;
Test case:;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
require 'bundler/inline';;;;;
;;;;;
gemfile(true) do;;;;;
  source 'https://rubygems.org';;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
  gem 'rails';;;;;
;;;;;
  gem 'pg';;;;;
end;;;;;
;;;;;
require 'active_record';;;;;
require 'minitest/autorun';;;;;
require 'logger';;;;;
;;;;;
# `CREATE DATABASE rails_51428_test;`;;;;
ActiveRecord::Base.establish_connection(adapter: 'postgresql', database: 'rails_51428_test');;;;;
ActiveRecord::Base.logger = Logger.new($stdout);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :events, force: true do |t|;;;;;
    t.decimal :amount, precision: 10, scale: 0, default: 0, null: false;;;;;
    t.datetime :timestamp;;;;;
  end;;;;;
;;;;;
  add_index :events, [:amount], name: 'index_events_on_timestamp', include: [:timestamp];;;;;
end;;;;;
;;;;;
ActiveRecord::SchemaDumper.dump;;;;;
;;;;;
class Event < ActiveRecord::Base; end;;;;
;;;;;
class EventTest < Minitest::Test;;;;;
  def test_stuff;;;;;
    assert_equal 0, Event.count;;;;;
    Event.create!(amount: 1);;;;;
    assert_equal 1, Event.count;;;;;
;;;;;
    # Note: this fails silently. I later discovered that neither this nor;;;;;
    # `ActiveRecord::Tasks::DatabaseTasks.load_schema_current(:ruby, ENV['SCHEMA'])`;;;;;
    # fail. See comments below.;;;;;
    puts `rails db:schema:load`;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
"I am not sure if the word """"timestamp"""" is reserved for the system, but I started having this problem after upgrading the rails version from 7.0.3 to 7.1.0";;;;;
;;;;;
;;;;;
### Expected behavior;;;;;
"Don't escape the characters at include in index or add this explanation to take care to use field named """"timestamp"""" in Rails Guide.";;;;;
;;;;;
### Actual behavior;;;;;
"Using field named """"timestamp"""" and adding index with this field in include, results in the schema with escaped characters, making it impossible to run the load schema.";;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.0;;;;;
;;;;;
**Ruby version**: 3.3.0;;;;;
",2024-03-26T18:15:15Z,2024-03-27T20:46:42Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 70310659, 'node_id': 'MDU6TGFiZWw3MDMxMDY1OQ==', 'url': 'https://api.github.com/repos/rails/rails/labels/PostgreSQL', 'name': 'PostgreSQL', 'color': 'fbca04', 'default': False, 'description': None}, {'id': 126910270, 'node_id': 'MDU6TGFiZWwxMjY5MTAyNzA=', 'url': 'https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps', 'name': 'With reproduction steps', 'color': '009800', 'default': False, 'description': None}]""";;;;;
"2208080356,Request session id unavailable when streaming HTML,""The default Content Security Policy nonce generator returns the `request.session.id`, but this isn’t available when streaming an HTML response.";;;;;
;;;;;
### Steps to reproduce;;;;;
1. Enable the default Content Security Policy by uncommenting the code generated in `config/initializers/content_security_policy.rb`;;;;;
2. Stream an HTML response form a controller;;;;;
;;;;;
**Content Security Policy Config:**;;;;;
```ruby;;;;;
Rails.application.configure do;;;;;
  config.content_security_policy do |policy|;;;;;
    policy.default_src :self, :https;;;;;
    policy.font_src    :self, :https, :data;;;;;
    policy.img_src     :self, :https, :data;;;;;
    policy.object_src  :none;;;;;
    policy.script_src  :self, :https;;;;;
    policy.style_src   :self, :https;;;;;
  end;;;;;
;;;;;
  config.content_security_policy_nonce_generator = ->(request) { request.session.id };;;;;
  config.content_security_policy_nonce_directives = %w(script-src style-src);;;;;
end;;;;;
```;;;;;
;;;;;
**Example controller:**;;;;;
;;;;;
```ruby;;;;;
class DashboardController < ApplicationController;;;;;
  def index;;;;;
"    headers[""""X-Accel-Buffering""""] = """"no""""";;;;;
"    headers[""""Cache-Control""""] = """"no-transform""""";;;;;
"    headers[""""Last-Modified""""] = Time.now.httpdate";;;;;
"    headers[""""Content-Type""""] = """"text/html";" charset=utf-8""""";;;;
;;;;;
    self.response_body = Enumerator.new do |buffer|;;;;;
"      buffer << """"<html><head><title>Dashboard</title></head><body>""""";;;;;
"      buffer << """"<h1>Dashboard</h1>""""";;;;;
"      buffer << """"<p>Welcome to the dashboard</p>""""";;;;;
"      buffer << """"</body></html>""""";;;;;
    end;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behaviour;;;;;
The Content Security Policy headers should include a nonce based on the session id.;;;;;
;;;;;
```;;;;;
Content-Security-Policy: default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src 'none'; script-src 'self' https: 'nonce-2c3f06bf498ed7295cc4612bdc7ad90e'; style-src 'self' https: 'nonce-2c3f06bf498ed7295cc4612bdc7ad90e'
```;;;;;
;;;;;
### Actual behaviour;;;;;
The Content Security Policy headers do not include a nonce.;;;;;
;;;;;
```;;;;;
Content-Security-Policy: default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src 'none'; script-src 'self' https:; style-src 'self' https:
```;;;;;
;;;;;
### Workaround;;;;;
As a workaround, you can set a session attribute and remove it before setting the `response_body`.;;;;;
;;;;;
```ruby;;;;;
session[:foo] = 1;;;;;
session.delete(:foo);;;;;
```;;;;;
;;;;;
This seems to get the session into a state where it has an `id`.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
"**Ruby version**: 3.3.0"",2024-03-26T12:13:22Z,2024-03-26T12:14:52Z,[]";;;;;
"2206546795,Add Active Model `Collection` attribute type,""### Summary";;;;;
;;;;;
One case that is not yet covered by the current standard types is for attributes that represent a collection of multiple values. For example, one might need to represent a subset of strings as a list in a single attribute; or even an entire group of associated models that are all embedded in a named collection. ;;;;
;;;;;
;;;;;
This PR aims to implement a new Collection type.;;;;;
It subclasses the base Value class and overrides the necessary methods so casting and serialization work for an array of objects that are themselves valid for one of the types in the Registry. This ensures that each element of the collection can be cast and serialized individually by delegating the operation to the appropriate type instance.;;;;;
;;;;;
Collection serializes itself as a JSON array on the database. For casting, it attempts to convert values to a Ruby array.;;;;;
;;;;;
Methods:;;;;;
;;;;;
- `type`: returns the :collection symbol.;;;;;
- `serializable?`: checks if the given value is an array containing only elements in which are all serializable for the collection type. It will instantiate the type passed during its own initialization and call serializable? for each element.;;;;;
- `serialize`: returns a JSON string of an array with all elements serialized by the collection type.;;;;;
- `deserialize`: expects a JSON array string and converts it into a Ruby array with each element deserialized by the collection type.;;;;;
- `cast`: converts the given array into a normalized collection of cast values. It will map the given array to a new one in which each element is cast into a new value by the collection type.;;;;;
- `changed_in_place?`: Accepts raw serialized value, deserializes it and checks if any of the elements of the collections were mutated according to the collection type method of the same name.;;;;;
- `assert_valid_value`: checks if all elements of the given array are accepted by the collection type method of the same name.;;;;;
;;;;;
;;;;;
;;;;;
### Other Information;;;;;
;;;;;
This change also introduces additional `Value#valid_value?` method that is supposed to separate the assertion, which raises an exception from a boolean check that can be reused in other places. This way new types won't have to override the whole `assert_valid_value` method if they want to keep the default error message.;;;;;
;;;;;
Let me know if this change should be implemented in a separate PR. I decided to keep it in this PR for better readability of the change but definitely willing to extract it and have a discussion is a different PR. Thanks!;;;;;
;;;;;
### Documentation;;;;;
;;;;;
Currently only the class itself is covered with documentation. But we have plans to cover public methods as well.;;;;;
Either in this PR, in a separate one or perhaps as part of the https://github.com/rails/rails/pull/44306;;;;;
;;;;;
"Original PR #44324"",2024-03-25T19:38:19Z,2024-04-03T17:01:06Z,""[{'id': 107190, 'node_id': 'MDU6TGFiZWwxMDcxOTA=', 'url': 'https://api.github.com/repos/rails/rails/labels/activemodel', 'name': 'activemodel', 'color': '00E5FF', 'default': False, 'description': None}]""";;;;;
"2206478011,Add `Model` type to Active Model attributes,""### Summary";;;;;
;;;;;
The new Model type handles all operations on conversion around model representations, from POROs to hashes and database string/JSON columns.;;;;;
;;;;;
Attributes that are specified as the Model type are required to also specify a class name, which will be used to cast the given values into model instances. On the database serialization side, the model is represented as a JSON, with its `AttributeSet` being serialized by the types of each respective attribute.;;;;;
;;;;;
;;;;;
;;;;;
### Docs:;;;;;
;;;;;
`type`: returns the :model symbol.;;;;;
;;;;;
`serializable?`: checks if the given value is an instance of the model class that this type was initialized with, returning false otherwise.;;;;;
;;;;;
`serialize`: returns a string with the JSON representation of the given model attributes. It achieves that by calling values_for_database in the model’s AttributeSet, and converts the hash received into a JSON string.;;;;;
;;;;;
`deserialize`: this method expects a JSON string, supposed to be a serialized set of attributes of a model instance. It proceeds to convert the JSON into a Ruby hash, and then instantiates a new model of the appropriate class name with the Ruby hash as its attributes. The mass assignment will allow each attribute to be deserialized accordingly and stored in the instance’s attribute set.;;;;;
;;;;;
`cast`: receives a value that is either a hash of attributes or a model instance. It then instantiates a new model based on the class name with the given attributes. This means that if a model is passed, a new instance with the same attribute values will be returned, but not the exact same object.;;;;;
;;;;;
`changed_in_place?`: Accepts a raw serialized attribute set, deserializes it and compares it with the given model instance. If the deserialized model’s attribute set is equal to the given model’s attribute set, returns true, or false otherwise.;;;;;
;;;;;
`assert_valid_value`: this method checks if the given value can be cast to the model class. It takes either a model or a hash of attributes. If the model is not the same class as the type’s class name, or if the given hash contains keys that do not belong to the class's attribute set, it raises an error.;;;;;
;;;;;
### Other Information;;;;;
;;;;;
`attributes_for_database` was copied from ;;;;;
https://github.com/rails/rails/blob/caced273937cf61c9ed2056877e0c3cd6a6b6577/activerecord/lib/active_record/attribute_methods/before_type_cast.rb#L70;;;;;
with an intention to only exist in Active Model, but kept in both places for simplicity of this PR;;;;;
;;;;;
"Original PR #44380"",2024-03-25T19:02:28Z,2024-03-25T21:39:48Z,""[{'id': 107190, 'node_id': 'MDU6TGFiZWwxMDcxOTA=', 'url': 'https://api.github.com/repos/rails/rails/labels/activemodel', 'name': 'activemodel', 'color': '00E5FF', 'default': False, 'description': None}]""";;;;;
"2204627024,Fix `destroy_async` job for owners with composite primary keys,""Currently, `DestroyAssociationAsyncJob` does not work when we have an owner with a composite primary key. ";;;;;
"This PR fixes that."",2024-03-24T23:55:18Z,2024-03-24T23:56:54Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2203991751,ActiveSupport::Cache.expand_cache_key sometimes returns falsely same key in parallel tests,""### Steps to reproduce";;;;;
Thats the hard part here! I still didnt figure out how to reproduce it safely. ;;;;;
What i can tell is that this does not happen when i execute a single testcase. It also doesnt happen when i set parallel workers to `1`.;;;;;
;;;;;
When parallel workers is set to `processors` and all tests are executed via `rails test`, the following test is breaking repeatedly:;;;;;
```ruby;;;;;
"      it """"returns updated records omitting cache and returning new etag"""" do";;;;;
"        get """"/apis/v1/me/tickets""""";;;;;
        assert_valid_json_response;;;;;
;;;;;
"        assert_changes ->{ last_response.headers[""""etag""""] } do";;;;;
          travel 1.second;;;;;
          tickets(:multi).touch;;;;;
;;;;;
"          get """"/apis/v1/me/tickets""""";;;;;
          assert_valid_json_response;;;;;
        end;;;;;
      end;;;;;
```;;;;;
The etag header is calculated basically via this line of code which i also found out to return the same **wrong key**. The `updated_at` on the record `tickets(:multi)` changes, but the underlying query fetching the `max(tickets.updated_at)` seem to return an older timestamp? At least the timestamp in the key remains the same.;;;;;
```;;;;;
ActiveSupport::Cache.expand_cache_key current_user.tickets.visible;;;;;
```;;;;;
The visible scope: ;;;;;
```;;;;;
"scope :visible, -> { joins(:admittances).where(tickets: {hidden: false}).merge(Admittance.visible).group(""""tickets.id"""")}";;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
The etag header should change in the same way whether i execute a single test or all together without flakiness. ;;;;;
;;;;;
### Actual behavior;;;;;
The etag header **remains equal** which is wrong. But this happens only when executing all tests parallelized which is kinda flaky.;;;;;
;;;;;
### Notes;;;;;
I found out that changing the scope implementation from `group` to `distinct` fixes it:;;;;;
```;;;;;
"scope :visible, -> { joins(:admittances).where(tickets: {hidden: false}).merge(Admittance.visible).select(""""distinct on (#{table_name}.id) #{table_name}.*"""")}";;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.2;;;;;
;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-23T18:20:10Z,2024-03-27T09:26:49Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}]""";;;;;
"2203763430,Ignore destroyed records in CollectionAssociation#empty?,""Fix: https://github.com/rails/rails/issues/51388";;;;;
;;;;;
This commit isn't in a mergeable state, it's just to better understand the issue at hand. There is likely similar issues in other methods and it would need some tests.;;;;;
;;;;;
",2024-03-23T08:08:02Z,2024-03-23T08:08:09Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2203250382,Expose @association as a reader in ActiveRecord_Associations_CollectionProxy,""This makes it possible to reflect on associations. For example, Blog.first.posts.association.owner would show that the blog is the owner of the association.";;;;;
;;;;;
## Why?;;;;;
;;;;;
I have a link helper in my Rails app that reflects on associations, like this: `show(@blog.posts)`. Currently I can't reflect on that association unless I access a private instance variable:;;;;;
;;;;;
```ruby;;;;;
"@blog.posts.instance_variable_get(""""@association"""").target";;;;;
```;;;;;
;;;;;
This commit exposes the `@association` object in a public API so I can reflect on associations.;;;;;
",2024-03-22T20:22:30Z,2024-03-26T21:13:58Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2202930057,`ActiveRecord::Suppressor` not working on associations that are loaded via `inverse_of` on unsaved records,""### Steps to reproduce";;;;;
This issue comes from [this comment](https://github.com/rails/rails/pull/50284#issuecomment-2004506200), and started happening after #50284. @rafaelfranca confirmed this behaviour (outlined by @andrewyoo) is intended:;;;;;
;;;;;
```ruby;;;;;
Loading development environment (Rails 7.2.0.alpha);;;;;
umami(dev)> u = User.new;;;;;
=> ;;;;;
#<User:0x000000012c399b30;;;;;
...;;;;;
umami(dev)> s = Shift.new user: u;;;;;
=> #<Shift:0x0000000129e31d98 id: nil, user_id: nil>;;;;;
umami(dev)> s.user;;;;;
=> ;;;;;
#<User:0x000000012c399b30>;;;;;
umami(dev)> u.shifts;;;;;
=> [#<Shift:0x0000000129e31d98 id: nil, user_id: nil>];;;;;
```;;;;;
;;;;;
However, this has the side effect of breaking `ActiveRecord::Suppressor` if you happen to modify the association owner outside the suppression block. Here's a minimal reproduction script:;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
"require """"debug""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
ActiveRecord::Base.has_many_inversing = true;;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :events, force: true do |t|;;;;;
    t.string :action, limit: 255;;;;;
    t.references :recording;;;;;
;;;;;
    t.timestamps;;;;;
  end;;;;;
;;;;;
  create_table :recordings, force: true do |t|;;;;;
    t.string :content;;;;;
;;;;;
    t.timestamps;;;;;
  end;;;;;
end;;;;;
;;;;;
class Recording < ActiveRecord::Base;;;;;
  has_many :events, dependent: :destroy;;;;;
;;;;;
  after_create :track_created;;;;;
;;;;;
  def track_event(action);;;;;
    Event.create! recording: self, action: action;;;;;
  end;;;;;
;;;;;
  def copy;;;;;
    transaction do;;;;;
      recording = Event.suppress { Recording.create!(content: content) };;;;;
      recording.update!(updated_at: updated_at);;;;;
      recording.track_event(:copied_copy);;;;;
      track_event(:copied_original);;;;;
    end;;;;;
  end;;;;;
;;;;;
  private;;;;;
    def track_created;;;;;
      track_event :created;;;;;
    end;;;;;
end;;;;;
;;;;;
class Event < ActiveRecord::Base;;;;;
  belongs_to :recording, required: false;;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_suppress_events_on_copies;;;;;
"    recording = Recording.create!(content: """"original"""")";;;;;
    assert_equal 1, Event.count;;;;;
;;;;;
    recording.copy;;;;;
;;;;;
    assert_equal 3, Event.count;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
Unless it's decided that this is now the expected behaviour for suppression as well, and needs to be documented, I'd expect the above test to pass. ;;;;;
;;;;;
I think, ideally, we'd fix `ActiveRecord::Suppressor` to deal with this case: a record that was set but not saved while the model was suppressed shouldn't be saved afterwards indirectly via the association owner. ;;;;;
;;;;;
### Actual behavior;;;;;
The test fails with ;;;;;
```;;;;;
Failure:;;;;;
BugTest#test_suppress_events_on_copies [test.rb:75]:;;;;;
Expected: 3;;;;;
  Actual: 4;;;;;
```;;;;;
because we added a `created` event to the copy when we save the original recording outside the `Event.suppress` block. ;;;;;
;;;;;
### System configuration;;;;;
**Rails version**:  Rails version: `main` (7c68c52);;;;;
**Ruby version**: 3.3.0 (though it should happen with any version).;;;;;
",2024-03-22T17:00:08Z,2024-03-25T12:53:02Z,[]
2202177190,Inconsistency between `any?`/`empty?` and `size` for collection associations loaded via `inverse_of`,### Steps to reproduce";;;;;
This behaviour seems to have been uncovered by #50284, but it wasn't introduced by that change. Now, if you have two associations like these: ;;;;;
;;;;;
```ruby;;;;;
class Blob < ActiveRecord::Base;;;;;
  has_many :attachments;;;;;
end;;;;;
 ;;;;;
class Attachment < ActiveRecord::Base;;;;;
  belongs_to :blob, required: false;;;;;
end;;;;;
```;;;;;
with `ActiveRecord::Base.has_many_inversing = true`, the following: ;;;;;
```ruby;;;;;
attachment.blob;;;;;
```;;;;;
would load `attachment` within `attachment.blob.attachments` inside the collection's `@target` without setting it as `loaded!`. The result is what I find a bit inconsistent behaviour if you delete `attachment` but I'm not quite sure what the right behaviour should be. ;;;;;
;;;;;
Here's a reproduction script where the inconsistency can be seen in action:;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
"  gem """"stringio"""", """"3.0.9""""";;;;;
"  gem """"debug""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
 ;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
ActiveRecord::Base.has_many_inversing = true;;;;;
 ;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :attachments, force: true do |t|;;;;;
    t.string :name, limit: 255;;;;;
    t.integer :blob_id;;;;;
;;;;;
    t.timestamps;;;;;
  end;;;;;
 ;;;;;
  create_table :blobs, force: true do |t|;;;;;
    t.timestamps;;;;;
  end;;;;;
end;;;;;
 ;;;;;
class Blob < ActiveRecord::Base;;;;;
  has_many :attachments;;;;;
;;;;;
  def has_attachments?;;;;;
    attachments.any?;;;;;
  end;;;;;
end;;;;;
 ;;;;;
class Attachment < ActiveRecord::Base;;;;;
  belongs_to :blob, required: false;;;;;
;;;;;
  after_destroy :destroy_exclusive_blobs;;;;;
;;;;;
  private;;;;;
    def destroy_exclusive_blobs;;;;;
      blob.destroy if blob && !blob.has_attachments?;;;;;
    end;;;;;
end;;;;;
 ;;;;;
class BugTest < Minitest::Test;;;;;
  def test_destroy_exclusive_blobs;;;;;
    blob = Blob.create!;;;;;
    attachment = Attachment.create!(blob: blob);;;;;
;;;;;
    assert_equal 1, Blob.count;;;;;
;;;;;
    attachment.destroy;;;;;
;;;;;
    assert_equal 0, Blob.count;;;;;
   end;;;;;
 end;;;;;
```;;;;;
;;;;;
The test fails after #50284 as `any?` returns `true`. That comes from `empty?` https://github.com/rails/rails/blob/68b20b6513fe56ca80e4966628c231b4d6113bea/activerecord/lib/active_record/associations/collection_association.rb#L230-L236;;;;;
;;;;;
`loaded?` is false, yet `target` includes an `Attachment` record, so `target.empty?` is false. Note that `target.emtpy?` there was added initially to consider newly created records that hadn't been persisted yet (https://github.com/rails/rails/pull/8912). ;;;;;
;;;;;
If replacing `attachments.any?` with `attachments.size > 0`, like this: ;;;;;
```ruby;;;;;
class Blob < ActiveRecord::Base;;;;;
  has_many :attachments;;;;;
;;;;;
  def has_attachments?;;;;;
    attachments.size > 0;;;;;
  end;;;;;
end;;;;;
```;;;;;
the test passes. ;;;;;
;;;;;
### Expected behavior;;;;;
I'd expect both ways, `attachments.size > 0` and `attachments.any?` to behave in the same way, but I'm not completely sure given the code for `CollectionAssociation#empty?` and `CollectionAssociation#size`. If they're supposed to behave inconsistently in this case, perhaps this should be documented. ;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: `main` (7c68c5210cbc245d778daa7958cab73bc74f4669);;;;;
;;;;;
"**Ruby version**: 3.3.0 (though it should happen with any version). "",2024-03-22T10:25:40Z,2024-03-25T15:49:29Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}]""";;;;;
"2201499276,Inconsistent behaviour with previous encryption schemes at global / attribute level,""### Steps to reproduce";;;;;
;;;;;
ref: https://guides.rubyonrails.org/active_record_encryption.html#support-for-previous-encryption-schemes;;;;;
;;;;;
Consider these three tests, to be added to [encryption_schemes_test.rb](https://github.com/rails/rails/blob/main/activerecord/test/cases/encryption/encryption_schemes_test.rb):;;;;;
;;;;;
```ruby;;;;;
"  test """"deterministic property is retained when using previous schemes at the attribute level"""" do";;;;;
"    ActiveRecord::Encryption.config.deterministic_key = """"12345""""";;;;;
;;;;;
    encrypted_author_class = Class.new(Author) do;;;;;
"      self.table_name = """"authors""""";;;;;
;;;;;
      encrypts :name, deterministic: true, previous: { encryptor: PassthruEncryptor.new };;;;;
    end;;;;;
;;;;;
    assert_includes encrypted_author_class.deterministic_encrypted_attributes, :name;;;;;
;;;;;
"    author = encrypted_author_class.create!(name: """"Stephen King"""")";;;;;
"    assert_equal author, encrypted_author_class.find_by_name(""""Stephen King"""")";;;;;
  end;;;;;
;;;;;
"  test """"deterministic property is retained when using previous schemes at the global level"""" do";;;;;
"    ActiveRecord::Encryption.config.deterministic_key = """"12345""""";;;;;
    ActiveRecord::Encryption.config.previous = [{ encryptor: PassthruEncryptor.new }];;;;;
;;;;;
    encrypted_author_class = Class.new(Author) do;;;;;
"      self.table_name = """"authors""""";;;;;
;;;;;
      encrypts :name, deterministic: true;;;;;
    end;;;;;
;;;;;
    assert_includes encrypted_author_class.deterministic_encrypted_attributes, :name;;;;;
;;;;;
"    author = encrypted_author_class.create!(name: """"Stephen King"""")";;;;;
"    assert_equal author, encrypted_author_class.find_by_name(""""Stephen King"""")";;;;;
  end;;;;;
;;;;;
"  test """"deterministic property can be explicitly provided when using previous schemes at the attribute level"""" do";;;;;
"    ActiveRecord::Encryption.config.deterministic_key = """"12345""""";;;;;
;;;;;
    encrypted_author_class = Class.new(Author) do;;;;;
"      self.table_name = """"authors""""";;;;;
;;;;;
      encrypts :name, deterministic: true, previous: { encryptor: PassthruEncryptor.new, deterministic: true };;;;;
    end;;;;;
;;;;;
    assert_includes encrypted_author_class.deterministic_encrypted_attributes, :name;;;;;
;;;;;
"    author = encrypted_author_class.create!(name: """"Stephen King"""")";;;;;
"    assert_equal author, encrypted_author_class.find_by_name(""""Stephen King"""")";;;;;
  end;;;;;
```;;;;;
;;;;;
The second and third tests pass. The first fails:;;;;;
;;;;;
```;;;;;
Failure:;;;;;
ActiveRecord::Encryption::EncryptionSchemesTest#test_deterministic_property_is_retained_when_using_previous_schemes_at_the_attribute_level [test/cases/encryption/encryption_schemes_test.rb:195]:;;;;;
Expected: #<#<Class:0x00000001055dbcd0> id: 1>;;;;;
  Actual: nil;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
I think either the first and second test should both pass, or they should both fail. I think the third test is passing correctly.;;;;;
;;;;;
I can make a PR but would like some guidance on which behaviour is expected. I think the root cause is that global previous schemes get merged [here](https://github.com/rails/rails/blob/68b20b6513fe56ca80e4966628c231b4d6113bea/activerecord/lib/active_record/encryption/encryptable_record.rb#L73-L74) but attribute-level previous schemes do not.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: `main`;;;;;
;;;;;
**Ruby version**: any;;;;;
",2024-03-22T01:26:00Z,2024-03-22T01:26:20Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 5511275119, 'node_id': 'LA_kwDNIULPAAAAAUh_Ym8', 'url': 'https://api.github.com/repos/rails/rails/labels/encryption', 'name': 'encryption', 'color': '8D3EA8', 'default': False, 'description': ''}]""";;;;;
"2200888087,Add :variants option to render-related documentation [ci skip],""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
This Pull Request has been created because; I couldn't find the `:variants` option in the API documentation. I noticed it was covered in the guidelines, but it didn't go over that render can intake a singular version of `:variant` and partial rendering should only intake a plural version of the option.;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request adds ;;;;;
- `:variants` documentation to `ActionView::PartialRenderer`;;;;;
- `:variants` and `:variant` to `ActionController::Rendering`;;;;;
 ;;;;;
### Additional information;;;;;
;;;;;
It's not clear to me what areas should also include the as an available option, any insights would be helpful! 🙂 ;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-21T18:30:04Z,2024-03-28T13:54:45Z,[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}, {'id': 3666649, 'node_id': 'MDU6TGFiZWwzNjY2NjQ5', 'url': 'https://api.github.com/repos/rails/rails/labels/actionview', 'name': 'actionview', 'color': 'd7e102', 'default': False, 'description': None}]""";;;;;
"2200784853,form_helper documentation using article instead of post [ci skip],""### Motivation / Background";;;;;
;;;;;
This Pull Request has been created because it will make the form_with documentation clearer.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Documentation previously uses post which is confusing as the methods/verb is also post.;;;;;
;;;;;
Before;;;;;
"`<form action=""""/posts"""" method=""""post"""">`";;;;;
;;;;;
After;;;;;
"`<form action=""""/articles"""" method=""""post"""">`";;;;;
;;;;;
### Method;;;;;
;;;;;
Worked through a new Rails app with scaffold of article and checking the output of the HTML. Other HTML changes make it more authentic:;;;;;
- /> => at the end of the input;;;;;
#NOM?;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [X] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-21T17:31:25Z,2024-04-02T09:59:35Z,[{'id': 3666649, 'node_id': 'MDU6TGFiZWwzNjY2NjQ5', 'url': 'https://api.github.com/repos/rails/rails/labels/actionview', 'name': 'actionview', 'color': 'd7e102', 'default': False, 'description': None}]""";;;;;
"2200750652,fix hex bit strings with leading zeroes in postgresql,""### Motivation / Background";;;;;
;;;;;
Currently when casting a hex string argument for a PostgreSQL `bit` or `bit_varying` column, leading zeroes are discarded. This is unexpected, and differs from the behavior of binary strings.;;;;;
;;;;;
### Detail;;;;;
;;;;;
"This Pull Request ensures leading zeroes are preserved, e.g. assigning a bit string column """"0x5F"""" results in the bit string """"01011111"""" instead of """"1011111"""" being sent to Postgres.";;;;;
;;;;;
### Additional information;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-21T17:14:40Z,2024-03-27T20:30:53Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2200234507,Add ability to modify read timeout in runtime,"" ### Motivation / Background";;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Many different factors can impact the database query execution time from an application's point of view, such as network latency, query execution plan, table data shape, and others. ;;;;;
;;;;;
"Currently, the application can provide a """"hardcoded"""" `read_timeout` value in the database.yml, which helps to cap the maximum time it will take to execute one query.";;;;;
;;;;;
However, it is not uncommon for a web request to have multiple query executions, and multiple slow queries can impact its response time. To mitigate the long response times, our application has a maximum allowed request time budget, which can be exhausted by multiple types of these issues. We would like to control the application wait time dynamically and gradually reduce that as the web request progresses. It will allow us to prevent a query from exhausting the request time budget.;;;;;
;;;;;
### Detail;;;;;
;;;;;
I added the ability to customize the database `read_timeout` property dynamically. It will receive the `read_timeout` as a value or a callable object, and a block. Any connection execution within that block will have the read_timeout replaced by the provided value. For example:;;;;;
;;;;;
```ruby;;;;;
ActiveRecord::Base.with_custom_conn_properties(read_timeout: 1) do;;;;;
  ...;;;;;
  Model.where(...).to_a # The read_timeout will be set to 1s;;;;;
  ...;;;;;
end;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-21T13:41:05Z,2024-03-21T20:39:12Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2199929620,Add `ActiveRecord::Relation#readonly?`,""Indicates whether a relation was marked readonly.";;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
There's currently no documented API to check if a relation is readonly. Workarounds include loading the records and checking those for `readonly?` or using accessing the undocumented `readonly_value`.;;;;;
;;;;;
A Relation could be marked readonly and used as an indication to what should be rendered. This change makes that use case simpler.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Adds `ActiveRecord::Relation#readonly?` which behaves the same as `ActiveRecord::Base#readonly?` for the contained records.;;;;;
;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
"* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included."",2024-03-21T11:30:28Z,2024-03-24T09:48:55Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2198596882,Update oracle connection name to match adapter in tests,""";;;;;
<!--;;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
This Pull Request has been created to enable running the activerecord test suite with the oracle-enhanced adapter post activerecord 7.1.0;;;;;
;;;;;
### Detail;;;;;
;;;;;
https://github.com/rails/rails/pull/48015 (specifically 7572a13af6444abf51720051c6a93d72a7aead0e) adds a check to ensure the connection name matches the adapter name for the test run. For oracle databases, the testing files call the connection `oracle`, but the adapter we use is `oracle_enhanced`, resulting in an error when the tests are run:;;;;;
;;;;;
```;;;;;
bundle exec rake test:oracle TEST=test/cases/base_test.rb;;;;;
"/usr/local/bin/ruby -w -I""""lib:test"""" /usr/local/lib/ruby/gems/3.2.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb """"test/cases/base_test.rb""""";;;;;
Using oracle;;;;;
/app/activerecord/test/support/connection.rb:38:in `connect': The connection name did not match the adapter name. Connection name is 'oracle' and the adapter name is 'oracle_enhanced'. (ArgumentError);;;;;
;;;;;
"      raise ArgumentError, """"The connection name did not match the adapter name. Connection name is '#{connection_name}' and the adapter name is '#{arunit_adapter}'.""""";;;;;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;;;;;
"	from /app/activerecord/test/cases/test_case.rb:248:in `<class:TestCase>'";;;;;
"	from /app/activerecord/test/cases/test_case.rb:20:in `<module:ActiveRecord>'";;;;;
"	from /app/activerecord/test/cases/test_case.rb:16:in `<top (required)>'";;;;;
"	from /app/activerecord/test/cases/helper.rb:8:in `require'";;;;;
"	from /app/activerecord/test/cases/helper.rb:8:in `<top (required)>'";;;;;
"	from /app/activerecord/test/cases/base_test.rb:3:in `require'";;;;;
"	from /app/activerecord/test/cases/base_test.rb:3:in `<top (required)>'";;;;;
"	from /usr/local/lib/ruby/gems/3.2.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb:21:in `require'";;;;;
"	from /usr/local/lib/ruby/gems/3.2.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb:21:in `block in <main>'";;;;;
"	from /usr/local/lib/ruby/gems/3.2.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb:6:in `select'";;;;;
"	from /usr/local/lib/ruby/gems/3.2.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb:6:in `<main>'";;;;;
rake aborted!;;;;;
```;;;;;
;;;;;
This change updates the connection name to be `oracle_enhanced` so it matches the adapter. With these changes I can run;;;;;
```;;;;;
bundle exec rake test:oracle_enhanced TEST=test/cases/base_test.rb;;;;;
```;;;;;
without getting the connection name error.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
I did not rename `activerecord/test/schema/oracle_specific_schema.rb` because the config.example.yml has emulate_oracle_adapter set to true so `oracle_specific_schema` is still the name the LoadSchemaHelper looks for.;;;;;
;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-20T21:25:33Z,2024-03-21T21:45:41Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2198129239,Prevent autosave association with has_one defined on child class,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Adjusts the logic in inverse_polymorphic_association_changed? to determine if a has_one association's polymorphic association should autosave the associated record for a type change.;;;;;
;;;;;
Previously this would see the type as changed every time if the has_one is defined on a child class, since the polymorphic relationship saves the parent class as the *_type value. The new check resolves the correct class name to avoid these extra saves.;;;;;
;;;;;
Fixes #51280;;;;;
;;;;;
### Detail;;;;;
;;;;;
Also confirmed that the new test fails without the code change:;;;;;
;;;;;
```;;;;;
Failure:;;;;;
TestAutosaveAssociationOnAHasOneAssociation#test_should_not_saved_for_unchanged_sti_type_on_polymorphic_association [test/cases/autosave_association_test.rb:1652]:;;;;;
Expected: 2;;;;;
  Actual: 3;;;;;
;;;;;
;;;;;
bin/rails test test/cases/autosave_association_test.rb:1620;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-20T17:31:55Z,2024-03-20T17:33:03Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2196727075,[ci skip] Document `ActiveSupport::Subscriber` in guides,""### Motivation / Background";;;;;
;;;;;
`ActiveSupport::Subscriber` provides a nice way to handle `ActiveSupport::Notifications::Event`. However, there is a lack of guide.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Document how to subscribe event of given namespace using `ActiveSupport::Subscriber`.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [X] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-20T06:04:17Z,2024-03-20T06:05:10Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2196576028,""Replace Order with Book in """"Creating Namespaced Models"""" section of docs for consistency"",""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
This Pull Request has been created because the documentation is improved by consistently using the same model names throughout.;;;;;
https://github.com/rails/rails/pull/51226#discussion_r1527578109;;;;;
;;;;;
### Detail;;;;;
;;;;;
"This Pull Request changes the Active Record Basics Guide """"Creating Namespaced Models"""" section to use Book instead of Order in the examples, consistent with the rest of the document.";;;;;
;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-20T03:00:04Z,2024-03-21T18:34:36Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2196082119,Add ability to prevent access to a database,""### Motivation / Background";;;;;
;;;;;
From discussion: https://discuss.rubyonrails.org/t/proposal-prevent-activerecord-access/85322;;;;;
;;;;;
> I have some methods that I know are being called in loops and these methods will become N+1 DB query situations if a database query is generated in any way. What I’m hoping for is some sort of runtime policy that says “no ActiveRecord access is allowed in here, you must load everything you need first”;;;;;
> ;;;;;
> Here’s another way to put it. If I have some business logic that combines data loading with some kind of pure calculation, it would be nice to have the power, when it is useful, to strongly separate these concerns and be sure the separation remains.;;;;;
> ;;;;;
> This power could be useful for any situation where a hot code path must remain free of queries. Perhaps it could be used to implement a policy to prevent database access during the render phase of an HTTP request.;;;;;
;;;;;
N+1 queries can be a real performance concern. It isn't always immediately obvious what the impacts could be of adding a new query. I wish engineers would be constantly watching the query log as they work. But things can get out of hand quickly, and even if you are watching the wall of queries being logged, N+1s can sometimes disappear into the noise.;;;;;
;;;;;
Also, there are times when I want a pure in-memory algorithm. An API like this would allow me to both express and enforce the intention to not be hitting the database in a branch of code.;;;;;
;;;;;
Just today, I was working with some code that broke a test that asserts for a given controller action, exactly 118 queries are dispatched. This is a terrible test to have, but we have it because we have had real problems with query explosions emerging unexpectedly. I believe strict loading could help, but it would not have prevented all of the problems that led to write and maintain this test.;;;;;
;;;;;
This is indeed a heavy hammer to use. But I don't see an alternative that can achieve the same level of assurance, and the implementation was pretty easy thanks to the prior art of `while_preventing_writes`.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request adds `while_preventing_access` to the public API of ActiveRecord::Base much like was done for `while_preventing_writes` in https://github.com/rails/rails/pull/34505;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-19T21:46:17Z,2024-03-23T06:25:57Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2194293557,`PessimisticLockingTest#test_no_locks_no_wait` gets `ERROR:  cached plan must not change result type`,""Managed to reproduce CI error.";;;;;
https://buildkite.com/rails/rails/builds/105748#018e558b-b895-43cc-aa80-71180e80d01b/1235-1330;;;;;
;;;;;
### Steps to reproduce;;;;;
```ruby;;;;;
git clone https://github.com/rails/rails;;;;;
cd rails/activerecord;;;;;
bundle install;;;;;
bundle exec rake db:postgresql:rebuild;;;;;
"ARCONN=postgresql bin/test test/cases/associations/nested_through_associations_test.rb test/cases/connection_management_test.rb test/cases/migration_test.rb test/cases/locking_test.rb -n """"/^(?:NestedThroughAssociationsTest#(?:test_has_many_through_with_foreign_key_option_on_through_reflection)|ActiveRecord::ConnectionAdapters::ConnectionManagementTest#(?:test_cancel_asynchronous_queries_if_an_exception_is_raised)|MigrationTest#(?:test_instance_based_migration_up)|PessimisticLockingTest#(?:test_no_locks_no_wait))$/"""" --seed 38135";;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
It should pass.;;;;;
;;;;;
### Actual behavior;;;;;
`PessimisticLockingTest#test_no_locks_no_wait` gets `ERROR:  cached plan must not change result type`.;;;;;
;;;;;
```ruby;;;;;
"$ ARCONN=postgresql bin/test test/cases/associations/nested_through_associations_test.rb test/cases/connection_management_test.rb test/cases/migration_test.rb test/cases/locking_test.rb -n """"/^(?:NestedThroughAssociationsTest#(?:test_has_many_through_with_foreign_key_option_on_through_reflection)|ActiveRecord::ConnectionAdapters::ConnectionManagementTest#(?:test_cancel_asynchronous_queries_if_an_exception_is_raised)|MigrationTest#(?:test_instance_based_migration_up)|PessimisticLockingTest#(?:test_no_locks_no_wait))$/"""" --seed 38135";;;;;
Using postgresql;;;;;
"Run options: -n """"/^(?:NestedThroughAssociationsTest#(?:test_has_many_through_with_foreign_key_option_on_through_reflection)|ActiveRecord::ConnectionAdapters::ConnectionManagementTest#(?:test_cancel_asynchronous_queries_if_an_exception_is_raised)|MigrationTest#(?:test_instance_based_migration_up)|PessimisticLockingTest#(?:test_no_locks_no_wait))$/"""" --seed 38135";;;;;
;;;;;
# Running:;;;;;
;;;;;
...#<Thread:0x000078a1a0d27b38 /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:809 run> terminated with exception (report_on_exception is true):;;;;;
/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:915:in `rescue in exec_cache': ERROR:  cached plan must not change result type (ActiveRecord::PreparedStatementCacheExpired);;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:893:in `exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:865:in `execute_and_clear'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb:66:in `internal_exec_query'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:630:in `select'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:222:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:62:in `_query_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:51:in `find_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/statement_cache.rb:150:in `execute'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:434:in `cached_find_by'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:255:in `find'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:788:in `block in test_no_locks_no_wait'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:223:in `block in transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_handling.rb:270:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:222:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:812:in `block in duel'";;;;;
/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:903:in `exec_prepared': PG::FeatureNotSupported: ERROR:  cached plan must not change result type (ActiveRecord::StatementInvalid);;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:903:in `block (2 levels) in exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:1112:in `log'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:902:in `block in exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:997:in `block in with_raw_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:969:in `with_raw_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:898:in `exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:865:in `execute_and_clear'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb:66:in `internal_exec_query'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:630:in `select'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:222:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:62:in `_query_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:51:in `find_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/statement_cache.rb:150:in `execute'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:434:in `cached_find_by'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:255:in `find'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:788:in `block in test_no_locks_no_wait'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:223:in `block in transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_handling.rb:270:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:222:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:812:in `block in duel'";;;;;
/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:903:in `exec_prepared': ERROR:  cached plan must not change result type (PG::FeatureNotSupported);;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:903:in `block (2 levels) in exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:1112:in `log'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:902:in `block in exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:997:in `block in with_raw_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:969:in `with_raw_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:898:in `exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:865:in `execute_and_clear'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb:66:in `internal_exec_query'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:630:in `select'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:222:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:62:in `_query_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:51:in `find_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/statement_cache.rb:150:in `execute'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:434:in `cached_find_by'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:255:in `find'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:788:in `block in test_no_locks_no_wait'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:223:in `block in transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_handling.rb:270:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:222:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:812:in `block in duel'";;;;;
Found 1 leaked connections;;;;;
owner: #<Thread:0x000078a1a0d27ca0 /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:799 sleep>;;;;;
backtrace:;;;;;
"[""""/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:53:in `sleep'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:53:in `wait'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:53:in `ns_wait'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/abstract_lockable_object.rb:47:in `ns_wait_until'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/atomic/event.rb:87:in `block in wait'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:48:in `block in synchronize'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:48:in `synchronize'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:48:in `synchronize'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/atomic/event.rb:84:in `wait'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:804:in `block (2 levels) in duel'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction'"""", """"/home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:223:in `block in transaction'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_handling.rb:270:in `with_connection'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:222:in `transaction'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:801:in `block in duel'""""]";;;;;
;;;;;
E;;;;;
;;;;;
Error:;;;;;
PessimisticLockingTest#test_no_locks_no_wait:;;;;;
ActiveRecord::PreparedStatementCacheExpired: ERROR:  cached plan must not change result type;;;;;
;;;;;
    lib/active_record/connection_adapters/postgresql_adapter.rb:915:in `rescue in exec_cache';;;;;
    lib/active_record/connection_adapters/postgresql_adapter.rb:893:in `exec_cache';;;;;
    lib/active_record/connection_adapters/postgresql_adapter.rb:865:in `execute_and_clear';;;;;
    lib/active_record/connection_adapters/postgresql/database_statements.rb:66:in `internal_exec_query';;;;;
    lib/active_record/connection_adapters/abstract/database_statements.rb:630:in `select';;;;;
    lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all';;;;;
    lib/active_record/connection_adapters/abstract/query_cache.rb:222:in `select_all';;;;;
    lib/active_record/querying.rb:62:in `_query_by_sql';;;;;
    lib/active_record/querying.rb:51:in `find_by_sql';;;;;
    lib/active_record/statement_cache.rb:150:in `execute';;;;;
    lib/active_record/core.rb:434:in `cached_find_by';;;;;
    lib/active_record/core.rb:255:in `find';;;;;
    test/cases/locking_test.rb:788:in `block in test_no_locks_no_wait';;;;;
    lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction';;;;;
    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize';;;;;
    lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction';;;;;
    lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction';;;;;
    lib/active_record/transactions.rb:223:in `block in transaction';;;;;
    lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection';;;;;
    lib/active_record/connection_handling.rb:270:in `with_connection';;;;;
    lib/active_record/transactions.rb:222:in `transaction';;;;;
    test/cases/locking_test.rb:812:in `block in duel';;;;;
;;;;;
Error:;;;;;
PessimisticLockingTest#test_no_locks_no_wait:;;;;;
RuntimeError: Found 1 leaked connection after PessimisticLockingTest#test_no_locks_no_wait;;;;;
    test/cases/test_case.rb:82:in `check_connection_leaks';;;;;
    test/cases/test_case.rb:38:in `after_teardown';;;;;
;;;;;
;;;;;
bin/test test/cases/locking_test.rb:787;;;;;
;;;;;
;;;;;
;;;;;
Finished in 1.057243s, 3.7834 runs/s, 10.4044 assertions/s.;;;;;
4 runs, 11 assertions, 0 failures, 1 errors, 0 skips;;;;;
$;;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: main branch;;;;;
;;;;;
**Ruby version**: ruby 3.3.0 (2023-12-25 revision 5124f9ac75) [x86_64-linux];;;;;
",2024-03-19T08:06:22Z,2024-03-19T08:06:39Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 70310659, 'node_id': 'MDU6TGFiZWw3MDMxMDY1OQ==', 'url': 'https://api.github.com/repos/rails/rails/labels/PostgreSQL', 'name': 'PostgreSQL', 'color': 'fbca04', 'default': False, 'description': None}, {'id': 776781281, 'node_id': 'MDU6TGFiZWw3NzY3ODEyODE=', 'url': 'https://api.github.com/repos/rails/rails/labels/ci%20issues', 'name': 'ci issues', 'color': 'aaafff', 'default': False, 'description': None}]""";;;;;
"2192504341,""add `file_exist?` method for ActiveStorage::Blob, ActiveStorage::Variant, ActiveStorage::VariantWithRecord"",""";;;;;
;;;;;
It's help to check if all it's ok on the service storage;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
This Pull Request has been created because we (@captive-studio) handle a large number of files using ActiveStorage in our application where these files are central to the business.;;;;;
;;;;;
For some time now, we have noticed that certain variants are not being properly saved in the storage (specifically Google Cloud Storage). We want to rectify this situation by retrieving the variants for which the file does not exist in the storage.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes add new `file_exist?` method for ActiveStorage::Blob, ActiveStorage::Variant, ActiveStorage::VariantWithRecord;;;;;
;;;;;
This method will help to check if a file exist on the storage service;;;;;
;;;;;
### Additional information;;;;;
;;;;;
/;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-18T15:17:49Z,2024-03-18T15:17:53Z,[{'id': 664533972, 'node_id': 'MDU6TGFiZWw2NjQ1MzM5NzI=', 'url': 'https://api.github.com/repos/rails/rails/labels/activestorage', 'name': 'activestorage', 'color': 'bfd4f2', 'default': False, 'description': None}]""";;;;;
"2192417334,Enable query log tags by default on development env,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
This can be used to trace troublesome SQL statements back to the application code that generated these statements. I feel like this is a good default value that helps with debugging and code discovery.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-18T14:43:38Z,2024-03-25T02:05:54Z,[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}, {'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2190873649,.eager_load when selecting another column sets the ID incorrectly to a record being eager loaded.,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"  # gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :posts, force: true do |t|;;;;;
    t.integer :first_comment_id;;;;;
    t.integer :last_comment_id;;;;;
  end;;;;;
;;;;;
  create_table :comments, force: true do |t|;;;;;
    t.integer :post_id;;;;;
  end;;;;;
end;;;;;
;;;;;
class Post < ActiveRecord::Base;;;;;
  has_many :comments;;;;;
;;;;;
"  belongs_to :first_comment, class_name: """"Comment""""";;;;;
"  belongs_to :last_comment, class_name: """"Comment""""";;;;;
;;;;;
"  scope :select_another_column, -> { select(""""*"""").select(""""TIME('now') as now"""") }";;;;;
end;;;;;
;;;;;
class Comment < ActiveRecord::Base;;;;;
  belongs_to :post;;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_association_stuff;;;;;
    post = Post.create!;;;;;
    post.first_comment = Comment.create!;;;;;
    post.last_comment = Comment.create!;;;;;
;;;;;
    post.save!;;;;;
;;;;;
    post = Post.find(post.id);;;;;
    post_with_eager_loads = Post.eager_load(:first_comment, :last_comment).select_another_column.find(post.id);;;;;
;;;;;
    assert_equal post.id, post_with_eager_loads.id;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
Expect that IDs are consistent when using .eager_load;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
ID gets set to one of the other tables joined in;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: main;;;;;
;;;;;
**Ruby version**: 3.3.0;;;;;
",2024-03-17T21:28:07Z,2024-03-19T19:38:22Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2190758266,Allow one to set `strict_loading_mode` globally,""### Motivation / Background";;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
I was reading through [this summary of Rails' strict loading](https://jordanhollinger.com/2023/11/11/rails-strict-loading/) and came across this paragraph:;;;;;
;;;;;
> If you’re very brave, you can opt your entire application into strict loading. (Oddly, there doesn’t seem to be an equivalent of :n_plus_one_only here. I can’t imagine using this.);;;;;
;;;;;
In my app, we're setting `strict_loading!(mode: :n_plus_one_only)` on individual records; this paragraph made me realize it didn't have to be this way.;;;;
;;;;;
This Pull Request has been created because currently, `strict_loading_mode` is always set to `:all`. It may be preferable for users to have `:n_plus_one_only` on an individual model, or even on the entire app.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request adds a new class_attribute `:strict_loading_mode`, defaulted to `:all`.  If it's set to `:n_plus_one_only`, that mode is used by default when doing strict loading checks.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
n/a;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-17T16:45:34Z,2024-03-28T22:17:42Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2186612406,Autoloaded classes raise NameError when accessed in parent's on_load hook during load,""This is not a new issue with Rails autoloading, but a challenge I feel when working with Engines (either developing engines as a gem maintainer or consuming engines as an application developer)";;;;;
;;;;;
For example, an Engine may have a setup like this:;;;;;
;;;;;
```ruby;;;;;
module GoodJob;;;;;
  class ApplicationJob < ActiveJob::Base;;;;;
    # some configuration;;;;;
    ActiveSupport.run_load_hooks(:good_job_application_job, self);;;;;
  end;;;;;
;;;;;
  class UtilityOneJob < ApplicationJob; end;;;;
  class UtilityTwoJob < ApplicationJob; end;;;;
  class UtilityThreeJob < ApplicationJob; end;;;;
  # ... and many more;;;;;
end;;;;;
```;;;;;
;;;;;
I give an example of GoodJob, but this is a very analogous situation to other Engines with autoloaded classes/subclasses (models, controllers, etc.); for example Devise, which has a `DeviseController` (with load_hook) that is then subclassed with [a desire to extend](https://github.com/heartcombo/devise/wiki/How-To:-Create-custom-layouts#application--devise-config). ;;;;
;;;;;
I want to be able to allow application developers to extend the subclasses, and I want to defer autoloaded constants as much as possible (ideally not touching Action Controller or Active Model at all until during initialization), and this seems like it should be reasonable:;;;;;
;;;;;
```ruby;;;;;
# config/initializers/good_job.rb;;;;;
;;;;;
ActiveSupport.on_load(:good_job_application_job) do;;;;;
  # Customize a subclass;;;;;
"  GoodJob::UtilityJobOne.queue_name = """"something_custom""""";;;;;
end;;;;;
```;;;;;
;;;;;
This _usually_ works ok, except in the case when the `UtilityJobOne` _being loaded causes ApplicationJob to be loaded for the very first time_, in which case it raises a `uninitialized constant UtilityJobOne (NameError)`. This is because of the autoloading chain:;;;;;
;;;;;
`GoodJob::UtilityJobOne` first must load its parent class `GoodJob::ApplicationJob` for the first time, which triggers the load_hook which itself references `UtilityOneJob` which has not yet completed loading and thus a `NameError` 💥 ;;;;;
;;;;;
There is what I consider a workaround for this which is to use `inherited` (which is triggered _after the subclass constant is loaded), but I find it somewhat complex and wonder if there is a better way, or whether this is something that should be turned into a hook pattern:;;;;;
;;;;;
```ruby;;;;;
# config/initializers/good_job.rb;;;;;
;;;;;
module ConfigureUtilityJob;;;;;
  def inherited(subclass);;;;;
    super;;;;;
"    if subclass.to_s == """"UtilityJobOne""""";;;;;
"      subclass.queue_name = """"something_custom""""";;;;;
    end;;;;;
  end;;;;;
end;;;;;
;;;;;
ActiveSupport.on_load(:good_job_application_job) do;;;;;
  GoodJob::ApplicationJob.extend ConfigureUtilityJob;;;;;
end;;;;;
```;;;;;
;;;;;
"I realize that another solution as a engine maintainer is to add load hooks to every subclass, but that seems onerous, and as an application developer I'd have to convince other engine maintainers to do so (which is totally ok, so long as there isn't a better way I'm missing or a reasonable central interface for modifying autoloaded subclasses)."",2024-03-14T15:06:07Z,2024-03-14T15:07:44Z,[]";;;;;
"2183136951,`ActiveRecord::Migration::check_all_pending!` resets connection pool when in use in other threads,""This might not be a bug per se, but is unexpected behaviour that was exposed in our specific use case.";;;;;
;;;;;
### Steps to reproduce;;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
In production, we have a bunch of custom internal health-checks exposed via a controller endpoint that are pinged every 20s or so, one of which is a check for pending migrations. Up until recently we were using `ActiveRecord::Migration::check_pending!` which took an optional connection argument and would use it to access the migration context (presumably releasing the connection back into the pool immediately after) to check for pending migrations.;;;;;
;;;;;
This method [has been deprecated in favour of `check_all_pending!`](https://github.com/rails/rails/commit/03379d1f599653d100dff9fbf3ce4434a930b915) and [was recently removed on `main`](https://github.com/rails/rails/commit/02f66fe3e25cef2b0dec8bca26e777fe788af35c). To comply with this (since we run against Rails edge) we ended up replacing `check_pending!` with `check_all_pending!` (which doesn't take any arguments) in the respective health-check. After deploying this change we started seeing this error intermittently:;;;;;
;;;;;
```;;;;;
ActiveRecord::ConnectionNotEstablished:  No connection pool for 'ActiveRecord::Base' found.;;;;;
```;;;;;
;;;;;
After some debugging we found that it was due to `check_all_pending!` [using a temporary pool under the hood](https://github.com/rails/rails/blob/0dc84e2e7d942dcaac3bd75414ae55bfad9bb18a/activerecord/lib/active_record/tasks/database_tasks.rb#L542-L549), meaning it would establish a new connection for its checks, then establish another one once done, resetting the connection pool object each time. This meant that other threads (we're currently running `puma` with `3` threads) that attempted to retrieve the current (cached) pool during this time (to then retrieve a connection) would fail to find it and raise here:;;;;;
https://github.com/rails/rails/blob/0dc84e2e7d942dcaac3bd75414ae55bfad9bb18a/activerecord/lib/active_record/connection_adapters/abstract/connection_handler.rb#L224;;;;;
;;;;;
We've considered that maybe this specific health-check setup is a bit unconventional, but given that I can find [some public repos utilising this method the same way](https://github.com/search?q=ActiveRecord%3A%3AMigration.check_all_pending%21+language%3ARuby&type=code&l=Ruby), I thought I'd open this up for discussion to see if there's any chance of changing / extending the implementation or even just warning against its use outside of something like a rake task so others don't run into a similar issue.;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# Ensure `ActiveRecord::Base.configurations.configs_for` returns a config for which a temporary pool is yielded.;;;;;
"ActiveRecord::Base.configurations = { development: { adapter: """"sqlite3"""", database: """":memory:"""" } }";;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_connection_pool_does_not_reset;;;;;
    pool_before = ActiveRecord::Base.connection_pool;;;;;
;;;;;
    ActiveRecord::Migration.check_all_pending!;;;;;
;;;;;
    assert_equal pool_before.object_id, ActiveRecord::Base.connection_pool.object_id;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
<!-- Tell us what should happen -->;;;;;
;;;;;
Connection pool is not reset when checking for pending migrations with `check_all_pending!`.;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
;;;;;
Connection pool is reset when checking for pending migrations with `check_all_pending!`.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: Edge;;;;;
;;;;;
"**Ruby version**: 3.2.2"",2024-03-13T05:17:22Z,2024-03-14T06:03:23Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2182989812,Fix a crash when an  Executor wrapped fork exit.,""Fix #51298";;;;;
;;;;;
forking inside an Execution Wrapper crashes when running the completion callbacks.;;;;;
;;;;;
Rails 7.0 was not Execution wrapping the `runner` command. ;;;;;
Rails 7.2 changed the definition of `active_connection?`, the new definition doesn't contain the bug. ;;;;;
;;;;;
Therefore forking inside a script intended to be run with the `runner` command on 7.1 crashes. (see #51298);;;;;
;;;;;
This PR is targeting `7-1-stable`;;;;;
;;;;;
Edit: The regression test (with the fork) blew up the tests. I removed it, I'll revisit. ;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-13T02:22:58Z,2024-03-23T21:16:44Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2182679064,[ci skip] Undocumented - validations enabled by autosave,""### Motivation / Background";;;;;
;;;;;
Fixes #50807;;;;;
;;;;;
As described in Issue #50807,  validations are enabled by default when the autosave option is set to true. Currently, that behavior is not documented for the `has_one` or `belongs_to` associations.   ;;;;;
;;;;;
### Detail;;;;;
;;;;;
To resolve this issue, the  API documentation has been updated to document the validation behavior when the `autosave: true` option is set in `Activerecord::Associations` for the `has_one` or `belongs_to` associations.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-12T21:09:19Z,2024-03-23T17:25:32Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2182219571,Do not use the alpha version if the major version is released,""This PR changes the active storage dependency version for action text. ";;;;;
",2024-03-12T17:04:15Z,2024-03-12T17:04:19Z,[{'id': 1180817762, 'node_id': 'MDU6TGFiZWwxMTgwODE3NzYy', 'url': 'https://api.github.com/repos/rails/rails/labels/actiontext', 'name': 'actiontext', 'color': '3bc667', 'default': False, 'description': ''}]""";;;;;
"2181685435,Model.insert_all can accept an array of records with separate column names,""### Motivation / Background";;;;;
;;;;;
Expanding the `Model.insert_all` functionality to receive an array containing records and column names separately. This improvement eliminates the need for records to be in the hash format, providing a more streamlined approach, especially useful for handling large datasets when both the order of attributes and their alignment with the table structure are known in advance.;;;;;
;;;;;
```ruby;;;;;
column_names = [:name, :author_id];;;;;
book_batches.each do |book_batch|;;;;;
"	Book.insert_all(book_batch, column_names: column_names)";;;;;
end;;;;;
```;;;;;
;;;;;
This update enables users to provide an array of arrays for the records, while also specifying the column names separately. This enhancement enhances code flexibility and readability, simplifying data insertion without requiring pre-formatting into hashes.;;;;;
;;;;;
### Detail;;;;;
;;;;;
#NOM?;;;;;
#NOM?;;;;;
;;;;;
```ruby;;;;;
Book.insert_all([;;;;;
"  [""""Rework"""", 1],";;;;;
"  [""""Patterns of Enterprise Application Architecture"""", 1]";;;;;
], column_names: [:name, :author_id]);;;;;
```;;;;;
;;;;;
"To showcase the API proposal, I opted for the simplest approach, which involved converting the array of records and column names into a Hash, as it aligns with the existing code."",2024-03-12T13:54:28Z,2024-03-12T13:54:34Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2181555060,Add and document ActionText without_layout reader and writer attributes,""If a site follows an `ActionText` editing form with a preview form prior to record creation, the natural way to set the editor content in the preview form is something like:";;;;;
;;;;;
`<%= hidden_field :message, :content %>`;;;;;
;;;;;
"This however does a `to_s`, which includes the content with the """"trix-content"""" div layout wrapping. This wrapping gets saved, and the final rendering with layout has a double wrapping.";;;;;
;;;;;
A solution is to instead use;;;;;
;;;;;
`<%= hidden_field_tag 'message[content]', @message.content.to_trix_html %>`;;;;;
;;;;;
but a cleaner solution would be to provide a non-wrapped accessor like;;;;;
;;;;;
`<%= hidden_field :message, :content_without_layout %>`;;;;;
;;;;;
"This PR does this. It also fixes the incorrect documentation of `has_rich_text` that [shows `to_s` as producing HTML without layout](https://github.com/rails/rails/blob/main/actiontext/lib/action_text/attribute.rb#L20), documents the `without_layout` variant, and adds a sentence suggesting when each should be used."",2024-03-12T12:55:18Z,2024-03-12T12:55:24Z,""[{'id': 1180817762, 'node_id': 'MDU6TGFiZWwxMTgwODE3NzYy', 'url': 'https://api.github.com/repos/rails/rails/labels/actiontext', 'name': 'actiontext', 'color': '3bc667', 'default': False, 'description': ''}]""";;;;;
"2180953140,Fix exception raised from template should not show compiled code,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Fixes #51090 ;;;;;
;;;;;
This Pull Request has been created to fix exceptions raised from template shows the compiled code.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes `activesupport/lib/active_support/core_ext/erb/util.rb`;;;;;
;;;;;
### Additional information;;;;;
1. In this tokenize method we are not handling the text present after `%>` ;;;;;
2. Updated that method to handle text present at end.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-12T07:52:25Z,2024-03-21T17:49:16Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}]""";;;;;
"2180514773,Add composite key support to `Model.exists?`,""Fix #51295";;;;;
;;;;;
`.exists?` does not support composite primary key because it would [clash with the current expectation when passing an array.](https://github.com/rails/rails/blob/main/activerecord/lib/active_record/relation/finder_methods.rb#L351);;;;;
;;;;;
This PR would make it possible to pass a composite primary key by wrapping it in an array:;;;;;
;;;;;
```ruby;;;;;
CpkModel.exists?([[1,1]]) # as in `CpkModel.exists?([composite_primary_key])`;;;;;
```;;;;;
;;;;;
Incidentally, it would also allow searching with multiple keys without having to use the hash form:;;;;;
;;;;;
```ruby;;;;;
CpkModel.exists?([[1,1], [1,2], [3,1]])  ;;;;;
"RegularModel.exists?([[1,2,3]]) # Even works for non regular models! Generates: `SELECT 1 AS one FROM """"regular_models"""" WHERE """"users"""".""""id"""" IN (1, 2, 3)`";;;;;
``` ;;;;;
;;;;;
;;;;;
## Considerations;;;;;
;;;;;
This is a bit of hack and initially thought of answering #51295 by suggesting using the hash form instead, but after looking at what the hash form would look like for a primary key:;;;;;
;;;;;
```ruby;;;;;
CpkModel.exists?(CpkModel.primary_key => [[1,1]]) # You need to wrap the primary key in an array!;;;;;
```;;;;;
This is quite verbose. So perhaps there is value in this.;;;;;
I did not edit the documentation and changelog yet. Only the code, plus a couple tests. If this diff is deemed valuable I'll add the required edits.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-12T00:57:29Z,2024-03-12T01:06:49Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2179543988,Forked child processes created through rails runner throw error from ActiveRecord when exiting,""In Rails 7.1.3.2, child processes which were created using a fork call throw the following error when they are exiting:";;;;;
;;;;;
```;;;;;
.../activerecord-7.1.3.2/lib/active_record/connection_adapters/abstract/connection_pool.rb:197:in `active_connection?': undefined method `[]' for nil (NoMethodError);;;;;
;;;;;
        @thread_cached_conns[connection_cache_key(current_thread)];;;;;
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;;;;;
```;;;;;
;;;;;
These child processes are created using a fork call which does not take a block. Notably, if a block is passed to the fork call then the error does not occur.;;;;;
;;;;;
### Steps to reproduce;;;;;
```;;;;;
> ruby -v;;;;;
ruby 3.3.0 (2023-12-25 revision 5124f9ac75) [x86_64-linux];;;;;
;;;;;
> rails new fork_child_process -G -M -C -A -J -T ;;;;;
rails (7.1.3.2);;;;;
;;;;;
"> echo """"fork"""" > script.rb"; bundle exec rails runner script.rb;;;;
/home/gpallotta/.gem/gems/activerecord-7.1.3.2/lib/active_record/connection_adapters/abstract/connection_pool.rb:197:in `active_connection?': undefined method `[]' for nil (NoMethodError);;;;;
;;;;;
        @thread_cached_conns[connection_cache_key(current_thread)];;;;;
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;;;;;
        from /home/gpallotta/.gem/gems/activerecord-7.1.3.2/lib/active_record/connection_adapters/abstract/query_cache.rb:45:in `disable_query_cache!';;;;;
"	from /home/gpallotta/.gem/gems/activerecord-7.1.3.2/lib/active_record/query_cache.rb:33:in `block in complete'";;;;;
"	from /home/gpallotta/.gem/gems/activerecord-7.1.3.2/lib/active_record/query_cache.rb:33:in `each'";;;;;
"	from /home/gpallotta/.gem/gems/activerecord-7.1.3.2/lib/active_record/query_cache.rb:33:in `complete'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/execution_wrapper.rb:37:in `before'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:426:in `block in make_lambda'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:202:in `block (2 levels) in halting'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:707:in `block (2 levels) in default_terminator'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:706:in `catch'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:706:in `block in default_terminator'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:203:in `block in halting'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:598:in `block in invoke_before'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:598:in `each'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:598:in `invoke_before'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:109:in `run_callbacks'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/execution_wrapper.rb:143:in `complete'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/execution_wrapper.rb:137:in `complete!'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/execution_wrapper.rb:97:in `wrap'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/commands/runner/runner_command.rb:40:in `perform'";;;;;
"	from /home/gpallotta/.gem/gems/thor-1.3.1/lib/thor/command.rb:28:in `run'";;;;;
"	from /home/gpallotta/.gem/gems/thor-1.3.1/lib/thor/invocation.rb:127:in `invoke_command'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/command/base.rb:178:in `invoke_command'";;;;;
"	from /home/gpallotta/.gem/gems/thor-1.3.1/lib/thor.rb:527:in `dispatch'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/command/base.rb:73:in `perform'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/command.rb:71:in `block in invoke'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/command.rb:149:in `with_argv'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/command.rb:69:in `invoke'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/commands.rb:18:in `<main>'";;;;;
"	from /opt/ruby-3.3.0-1/lib/ruby/3.3.0/bundled_gems.rb:74:in `require'";;;;;
"	from /opt/ruby-3.3.0-1/lib/ruby/3.3.0/bundled_gems.rb:74:in `block (2 levels) in replace_require'";;;;;
"	from /home/gpallotta/.gem/gems/bootsnap-1.18.3/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:30:in `require'";;;;;
"	from bin/rails:4:in `<main>'";;;;;
;;;;;
>;;;;;
```;;;;;
;;;;;
If instead a block is given to the fork call, then no error occurs;;;;;
;;;;;
```;;;;;
"> echo """"fork {}"""" > script.rb"; bundle exec rails runner script.rb;;;;
;;;;;
>;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
The forked child process exits cleanly.;;;;;
;;;;;
### Actual behavior;;;;;
The forked child process exits with an error.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
"**Ruby version**: 3.3.0"",2024-03-11T16:17:12Z,2024-03-13T02:26:53Z,[]";;;;;
"2179242804,Missing Active Record encryption credential when using ActiveRecord::Encryption.without_encryption ,""### Steps to reproduce";;;;;
;;;;;
```ruby;;;;;
class SchluesselBrett < ApplicationRecord;;;;;
   encrypts :key ;;;;;
   def destroy;;;;;
     ActiveRecord::Encryption.without_encryption { super };;;;;
   end;;;;;
end;;;;;
;;;;;
Schluesselbrett.last.destroy;;;;;
```;;;;;
### Expected behavior;;;;;
Destroy should work as there are no hooks that depend on the encrypted column.;;;;;
;;;;;
We are using a custom key_provider that needs the user input of a Smartcard PIN every time an encrypted column is encrypted or decrypted.;;;;;
Destruction of a model should work without decrypting it first so that the PIN is not necessary (we accept the fact that we have to ensure ourselves that no hooks will require the encrypted field to be decrypted).;;;;;
In fact, the NullEncryptor that is used in without_encryption:;;;;;
;;;;;
```ruby;;;;;
        def without_encryption(&block);;;;;
          with_encryption_context encryptor: ActiveRecord::Encryption::NullEncryptor.new, &block;;;;;
        end;;;;;
```;;;;;
;;;;;
does not make use of the default key provider (whose initialization is the cause of the backtrace below) anyway.;;;;;
;;;;;
### Actual behavior;;;;;
```;;;;;
activerecord (7.1.3.2) lib/active_record/encryption/config.rb:43:in `block (2 levels) in <class:Config>';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/context.rb:38:in `build_default_key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/context.rb:25:in `key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/configurable.rb:17:in `key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/scheme.rb:92:in `default_key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/scheme.rb:53:in `key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:15:in `key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:147:in `decryption_options';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:90:in `block in decrypt';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/scheme.rb:69:in `with_context';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:15:in `with_context';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:85:in `decrypt';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:36:in `deserialize';;;;;
activemodel (7.1.3.2) lib/active_model/attribute.rb:175:in `type_cast';;;;;
activemodel (7.1.3.2) lib/active_model/attribute.rb:43:in `value';;;;;
activemodel (7.1.3.2) lib/active_model/attribute_set/builder.rb:43:in `fetch_value';;;;;
activerecord (7.1.3.2) lib/active_record/transactions.rb:421:in `block in restore_transaction_record_state';;;;;
activemodel (7.1.3.2) lib/active_model/attribute_set.rb:98:in `transform_values';;;;;
activemodel (7.1.3.2) lib/active_model/attribute_set.rb:98:in `map';;;;;
activerecord (7.1.3.2) lib/active_record/transactions.rb:420:in `restore_transaction_record_state';;;;;
activerecord (7.1.3.2) lib/active_record/transactions.rb:345:in `rolledback!';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:200:in `block in rollback_records';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:263:in `run_action_on_records';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:199:in `rollback_records';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:527:in `block in rollback_transaction';;;;;
activesupport (7.1.3.2) lib/active_support/concurrency/null_lock.rb:9:in `synchronize';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:520:in `rollback_transaction';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:539:in `rescue in block in within_new_transaction';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:538:in `block in within_new_transaction';;;;;
activesupport (7.1.3.2) lib/active_support/concurrency/null_lock.rb:9:in `synchronize';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:532:in `within_new_transaction';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction';;;;;
activerecord (7.1.3.2) lib/active_record/transactions.rb:361:in `with_transaction_returning_status';;;;;
activerecord (7.1.3.2) lib/active_record/transactions.rb:305:in `destroy';;;;;
```;;;;;
;;;;;
### Proposed solution;;;;;
;;;;;
local workaround is something along the lines of:;;;;;
;;;;;
```ruby;;;;;
module ActiveRecord;;;;;
  module Encryption;;;;;
    module Contexts;;;;;
...;;;;;
      class_methods do;;;;;
....  ;;;;;
        def without_encryption(&block);;;;;
          encryptor = ActiveRecord::Encryption::NullEncryptor.new;;;;;
          key_provider = ActiveRecord::Encryption::NullKeyProvider.new;;;;;
          ActiveRecord::Encryption.with_encryption_context(encryptor:, key_provider:, &block);;;;;
        end;;;;;
;;;;;
...;;;;;
;;;;;
    class NullKeyProvider;;;;;
    end;;;;;
```;;;;;
;;;;;
I'm happy to try to provide a pull request if there is hope that it will be accepted.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**:  3.2.2;;;;;
",2024-03-11T14:14:06Z,2024-04-04T11:55:19Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 126910270, 'node_id': 'MDU6TGFiZWwxMjY5MTAyNzA=', 'url': 'https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps', 'name': 'With reproduction steps', 'color': '009800', 'default': False, 'description': None}, {'id': 5511275119, 'node_id': 'LA_kwDNIULPAAAAAUh_Ym8', 'url': 'https://api.github.com/repos/rails/rails/labels/encryption', 'name': 'encryption', 'color': '8D3EA8', 'default': False, 'description': ''}]""";;;;;
"2179081656,Can't use Model.exists? with composite primary keys,""### Steps to reproduce";;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
require 'bundler/inline';;;;;
;;;;;
gemfile(true) do;;;;;
  source 'https://rubygems.org';;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
  gem 'rails';;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"  # gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
  gem 'sqlite3';;;;;
end;;;;;
;;;;;
require 'active_record';;;;;
require 'minitest/autorun';;;;;
require 'logger';;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
ActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:');;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :posts, force: true, primary_key: %i[user_id account_id] do |t|;;;;;
    t.integer 'user_id', null: false;;;;;
    t.integer 'account_id', null: false;;;;;
  end;;;;;
end;;;;;
;;;;;
class Post < ActiveRecord::Base;;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_association_stuff;;;;;
    Post.create!(user_id: 1, account_id: 1);;;;;
;;;;;
    assert_equal [1, 1], Post.find([1, 1]).id;;;;;
    assert_equal true, Post.exists?([1, 1]);;;;;
  end;;;;;
end;;;;;
;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
```exists?``` should return a boolean if a given row exist for this primary key, like it does for not composite keys.;;;;;
;;;;;
### Actual behavior;;;;;
```;;;;;
NoMethodError: undefined method `include?' for 1:Integer;;;;;
;;;;;
"        elsif statement.include?(""""?"""")";;;;;
                       ^^^^^^^^^;;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/sanitization.rb:167:in `sanitize_sql_array';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/sanitization.rb:37:in `sanitize_sql_for_conditions';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/relation/query_methods.rb:1513:in `build_where_clause';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/relation/query_methods.rb:943:in `where!';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/relation/finder_methods.rb:437:in `construct_relation_for_exists';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/relation/finder_methods.rb:366:in `exists?';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/querying.rb:23:in `exists?';;;;;
    bug_report.rb:40:in `test_association_stuff';;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**:  7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.1;;;;;
",2024-03-11T13:01:58Z,2024-03-20T01:49:50Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}]""";;;;;
"2177925782,Empty embeds when RichText is set to an empty content,""Fix #51269";;;;;
;;;;;
Action Text supports saving a RichText model with empty content. Passing _almost_ empty content (such as a space) flushes the embeds, but passing truly empty content does not. This defies expectations.;;;;;
;;;;;
This change ensures that the embeds are flushed when empty content is passed;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-10T22:05:51Z,2024-03-12T04:41:07Z,[{'id': 1180817762, 'node_id': 'MDU6TGFiZWwxMTgwODE3NzYy', 'url': 'https://api.github.com/repos/rails/rails/labels/actiontext', 'name': 'actiontext', 'color': '3bc667', 'default': False, 'description': ''}]""";;;;;
"2177865633,Using preload with composite keys can cause too many records to be read,""### Steps to reproduce";;;;;
;;;;;
Using `preload` with composite keys can cause more records to be read than are required - consider this test case:;;;;;
;;;;;
```ruby;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  gem """"activerecord"""", """"7.1.3.2""""";;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :nodes, primary_key: [:node_id, :node_version] do |t|;;;;;
    t.integer :node_id;;;;;
    t.integer :node_version;;;;;
  end;;;;;
;;;;;
  create_table :node_tags, primary_key: [:node_id, :node_version, :k], force: true do |t|;;;;;
    t.integer :node_id;;;;;
    t.integer :node_version;;;;;
    t.text :k;;;;;
  end;;;;;
end;;;;;
;;;;;
class Node < ActiveRecord::Base;;;;;
"  has_many :tags, class_name: """"NodeTag"""", query_constraints: [:node_id, :node_version], :inverse_of => :node";;;;;
end;;;;;
;;;;;
class NodeTag < ActiveRecord::Base;;;;;
  belongs_to :node, query_constraints: [:node_id, :node_version], :inverse_of => :tags;;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_preload;;;;;
    node = Node.create(id: [1, 1]);;;;;
"    node.tags.create(k: """"a"""")";;;;;
"    node.tags.create(k: """"b"""")";;;;;
    node = Node.create(id: [1, 2]);;;;;
"    node.tags.create(k: """"c"""")";;;;;
"    node.tags.create(k: """"d"""")";;;;;
    node = Node.create(id: [2, 1]);;;;;
"    node.tags.create(k: """"e"""")";;;;;
"    node.tags.create(k: """"f"""")";;;;;
;;;;;
    nodes = Node.preload(:tags);;;;;
              .where(node_id: 1, node_version: 2);;;;;
              .or(Node.where(node_id: 2, node_version: 1));;;;;
              .order(:node_id, :node_version);;;;;
;;;;;
    assert_equal 2, nodes.size;;;;;
;;;;;
    nodes.each do |node|;;;;;
      assert_equal 2, node.tags.size;;;;;
    end;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
The assertions pass, but if you look at the logged SQL for the preload you see this:;;;;;
;;;;;
```sql;;;;;
"SELECT """"node_tags"""".*";;;;;
"FROM """"node_tags""""";;;;;
"WHERE """"node_tags"""".""""node_id"""" IN (?, ?) AND """"node_tags"""".""""node_version"""" IN (?, ?)";;;;;
```;;;;;
;;;;;
where the bound ID values are 1 and 2 as are the bound version values.;;;;;
;;;;;
So not only will that read the tags for `[1, 2]` and `[2, 1]` as expected but it will also read the tags for `[1, 1]` which are not needed.;;;;;
;;;;;
Those records don't appear to get attached to any node so are presumably being discarded when the preload is matched to the original records.;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
The required records are preloaded.;;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
Extra records are preloaded.;;;;;
;;;;;
### System configuration;;;;;
;;;;;
**Rails version**: 7.1.3.2;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-10T19:14:55Z,2024-03-11T18:14:29Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2177504195,Expire caching when a download fail while proxying in ActiveStorage,""Fix #51284";;;;;
;;;;;
Both Proxy controllers in Active Storage set the caching headers early before streaming. ;;;;;
;;;;;
In some instances (see #51284), it is possible for the file download (from the service to server) to fail before we send the first byte to the client (response not yet committed). ;;;;;
;;;;;
In those instances, this change would invalidate the cache and return a better response status before closing the stream.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-10T03:28:10Z,2024-03-10T06:55:14Z,[{'id': 664533972, 'node_id': 'MDU6TGFiZWw2NjQ1MzM5NzI=', 'url': 'https://api.github.com/repos/rails/rails/labels/activestorage', 'name': 'activestorage', 'color': 'bfd4f2', 'default': False, 'description': None}]""";;;;;
"2175998435,Ensure image_processing is installed with Trix,""Currently if the Gemfile does not contain a commented out line for image_processing, or the line uses single, not double quotes, image_processing will not be installed and Trix will not be able to correctly handle image attachments.";;;;;
;;;;;
This ensures image_processing _is_ installed in those circumstances.;;;;;
;;;;;
<!--;;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
This Pull Request has been created because it is possible for the `bin/rails action_text:install` command to fail to add `image_processing` to the Gemfile if the default comment has been removed, or if the double quotes have been changed to single ones (perhaps by a Rubocop auto-fix).;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes the ActionText install script to more thoroughly ensure `image_processing` is installed.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-08T12:59:20Z,2024-03-08T13:29:29Z,[{'id': 1180817762, 'node_id': 'MDU6TGFiZWwxMTgwODE3NzYy', 'url': 'https://api.github.com/repos/rails/rails/labels/actiontext', 'name': 'actiontext', 'color': '3bc667', 'default': False, 'description': ''}]""";;;;;
"2175983514,ActiveStorage ProxyController sets Cache-Control headers on errors like FileNotFoundError,""### Steps to reproduce";;;;;
Ive observed occasional broken **representation** images on our site. After digging a little into this issue it became clear that the proxy cache in front of our application has cached a broken image. A cache purge always fixed it. ;;;;;
;;;;;
After digging a little deeper i think i found the source. The proxy cache is getting a `cache-control` header instructing it to do so by the ActiveStorage::Representations::ProxyController!;;;;;
;;;;;
Ive created a synthetic test which reproduces it. The response is successful with zero length and cache-control header set. The following test falsely passed!;;;;;
;;;;;
```ruby;;;;;
    ActiveStorage::Service::DiskService.any_instance.expects(:download).raises(ActiveStorage::FileNotFoundError);;;;;
    ;;;;;
"    get active_storage_image_url # """"/rails/active_storage/representations/proxy/...""""";;;;;
;;;;;
    assert_response :ok;;;;;
    assert_equal 'image/png', response.content_type;;;;;
"    assert_equal """"0"""", response.headers['Content-Length']";;;;;
    assert response.headers.key? 'ETag';;;;;
"    assert_equal """"max-age=3155695200, public"""", response.headers['Cache-Control']";;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
On an error like `ActiveStorage::FileNotFoundError` the response should not be successful nor should it instruct caches to cache that empty response.;;;;;
;;;;;
### Actual behavior;;;;;
On an error like `ActiveStorage::FileNotFoundError` the response is still successful (Statuscode: 200) and a cache-control header is instructing caches to cache this empty response.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.0.8;;;;;
;;;;;
**Ruby version**: 3.1.2;;;;;
",2024-03-08T12:51:45Z,2024-03-12T02:56:56Z,[{'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}, {'id': 664533972, 'node_id': 'MDU6TGFiZWw2NjQ1MzM5NzI=', 'url': 'https://api.github.com/repos/rails/rails/labels/activestorage', 'name': 'activestorage', 'color': 'bfd4f2', 'default': False, 'description': None}]""";;;;;
"2175446335,Move callsite for to lease_connection in AR::Sanitization up to `sanitize_sql_array`,""After looking at ways to refactor calls to `lease_connection`, this tiny PR came up for `sanitize_sql_array`";;;;;
"cc @byroot "",2024-03-08T07:24:29Z,2024-03-16T08:42:20Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2175354422,Transform attributes during `ActiveModel::Serialization::JSON#from_json`,""### Motivation / Background";;;;;
;;;;;
The problem;;;;;
---;;;;;
;;;;;
Loading JSON into an Active Model instance with;;;;;
`ActiveModel::Serializers:JSON#from_json` assumes that the property casings will match the class attribute casings. This works well with snake_casing, since idiomatic Ruby methods are snake_cased.;;;;;
;;;;;
When `#from_json` loads JSON properties that are camelCased, it silently ignores them:;;;;;
;;;;;
```ruby;;;;;
class Person;;;;;
  include ActiveModel::Serializers::JSON;;;;;
;;;;;
  attr_accessor :name, :born_on;;;;;
;;;;;
  def attributes=(hash);;;;;
"    hash.each { |key, value| send(""""#{key}="""", value) }";;;;;
  end;;;;;
end;;;;;
;;;;;
payload <<~JSON;;;;;
"  { """"name"""": """"Alice"""", """"bornOn"""": """"2024-03-08"""" }";;;;;
JSON;;;;;
;;;;;
person = Person.new.from_json(payload);;;;;
"person.name     # => """"Alice""""";;;;;
person.born_on  # => nil;;;;;
```;;;;;
;;;;;
### Detail;;;;;
;;;;;
The proposal;;;;;
---;;;;;
;;;;;
This commit proposes extending `#from_json` to accept a block. After the JSON string is decoded (and un-nested from its root, depending on the model's configuration), yield the `Hash` to a block if one is passed as an argument:;;;;;
;;;;;
```ruby;;;;;
payload <<~JSON;;;;;
"  { """"name"""": """"Alice"""", """"bornOn"""": """"2024-03-08"""" }";;;;;
JSON;;;;;
;;;;;
person = Person.new.from_json(payload) { _1.deep_transform_keys!(&:underscore) };;;;;
"person.name     # => """"Alice""""";;;;;
"person.born_on  # => """"2024-03-08""""";;;;;
```;;;;;
;;;;;
Supporting a block can be useful for context-specific overrides. If a class needs to provide a default transformation, it can override `#from_json`:;;;;;
;;;;;
```ruby;;;;;
class PersonFromCamelCaseAPI < Person;;;;;
  def from_json(*, &block);;;;;
    default_transform = proc { _1.deep_transform_keys!(&:underscore) };;;;;
;;;;;
    super(*, &(block || defaul_transform));;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
Without built-in support for transforming camelCased properties into snake_cased attributes, callers are responsible decoding the JSON themselves. In addition to the key transformations, they're also responsible for re-creating both the JSON decoding *and* the configurable root un-nesting provided by `#from_json`:;;;;;
;;;;;
```ruby;;;;;
payload <<~JSON;;;;;
"  { """"name"""": """"Alice"""", """"bornOn"""": """"2024-03-08"""" }";;;;;
JSON;;;;;
;;;;;
attributes = ActiveSupport::JSON.decode(payload);;;;;
attributes.deep_transform_keys!(&:underscore);;;;;
person = Person.new(attributes);;;;;
"person.name     # => """"Alice""""";;;;;
"person.born_on  # => """"2024-03-08""""";;;;;
;;;;;
nested_payload <<~JSON;;;;;
"  { """"person"""": { """"name"""": """"Alice"""", """"bornOn"""": """"2024-03-08"""" } }";;;;;
JSON;;;;;
;;;;;
attributes = ActiveSupport::JSON.decode(nested_payload);;;;;
attributes.deep_transform_keys!(&:underscore);;;;;
"person = Person.new(attributes[""""person""""])";;;;;
"person.name     # => """"Alice""""";;;;;
"person.born_on  # => """"2024-03-08""""";;;;;
```;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-08T06:18:38Z,2024-03-08T06:20:19Z,[{'id': 107190, 'node_id': 'MDU6TGFiZWwxMDcxOTA=', 'url': 'https://api.github.com/repos/rails/rails/labels/activemodel', 'name': 'activemodel', 'color': '00E5FF', 'default': False, 'description': None}]""";;;;;
"2174963549,Unnecessary auto save is triggered for polymorphic has_one defined in child class using single-table inheritance,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
This bug is directly related to https://github.com/rails/rails/issues/44986.;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :pictures, force: true do |t|;;;;;
    t.references :imageable, polymorphic: true;;;;;
  end;;;;;
;;;;;
  create_table :employees, force: true do |t|;;;;;
    t.string :type;;;;;
    t.string :name;;;;;
  end;;;;;
end;;;;;
;;;;;
class Picture < ActiveRecord::Base;;;;;
;;;;;
  belongs_to :imageable, polymorphic: true, optional: true;;;;;
;;;;;
  after_save :count_saves;;;;;
;;;;;
  def count_saves;;;;;
    @count ||= 0;;;;;
    @count += 1;;;;;
  end;;;;;
;;;;;
end;;;;;
;;;;;
class Employee < ActiveRecord::Base;;;;;
;;;;;
end;;;;;
;;;;;
class CaliforniaEmployee < Employee;;;;;
;;;;;
  has_one :picture, as: :imageable;;;;;
;;;;;
end;;;;;
;;;;;
class ArizonaEmployee < Employee;;;;;
;;;;;
  has_one :picture, as: :imageable;;;;;
;;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
;;;;;
  def test_association_not_saved_on_update;;;;;
    picture = Picture.create!;;;;;
;;;;;
"    cali_employee = CaliforniaEmployee.create!(name: """"Cali"""", picture: picture)";;;;;
;;;;;
"    cali_employee.update!(name: """"Cali Fornia"""")";;;;;
;;;;;
"    assert_equal """"Employee"""", picture.imageable_type";;;;;
    assert_equal cali_employee.id, picture.imageable_id;;;;;
;;;;;
    # Saves on create of picture and create of employee;;;;;
    assert_equal 2, picture.instance_variable_get(:@count);;;;;
  end;;;;;
;;;;;
  def test_association_saved_on_actual_model_change;;;;;
    picture = Picture.create!;;;;;
;;;;;
"    CaliforniaEmployee.create!(name: """"Cali"""", picture: picture)";;;;;
"    az_employee = ArizonaEmployee.create!(name: """"Arizona"""")";;;;;
;;;;;
    az_employee.update!(picture: picture);;;;;
;;;;;
"    assert_equal """"Employee"""", picture.imageable_type";;;;;
    assert_equal az_employee.id, picture.imageable_id;;;;;
;;;;;
    # Saves on create of picture, create of cali employee, and update to az employee;;;;;
    assert_equal 3, picture.instance_variable_get(:@count);;;;;
  end;;;;;
;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
<!-- Tell us what should happen -->;;;;;
;;;;;
There is no reason to trigger a save on the Picture record when updating a field on CaliforniaEmployee, since the picture record is already correctly pointing at the existing Employee.;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
;;;;;
`inverse_polymorphic_association_changed?` is returning true for this use case causing a subsequent autosave to be triggered on Picture, leading to a failure in both test cases:;;;;;
;;;;;
```;;;;;
Failure:;;;;;
BugTest#test_association_not_saved_on_update [rails-issue.rb:73]:;;;;;
Expected: 2;;;;;
  Actual: 3;;;;;
;;;;;
Failure:;;;;;
BugTest#test_association_saved_on_actual_model_change [rails-issue.rb:85]:;;;;;
Expected: 3;;;;;
  Actual: 4;;;;;
```;;;;;
;;;;;
### Additional Context;;;;;
;;;;;
This appears to specifically fail when the has_one is defined on a child class using Single-table Inheritance. If the `has_one` in the test case above is moved up to the `Employee` model, then the expectation will pass.;;;;;
;;;;;
The issue appears to be here: https://github.com/rails/rails/blob/83702d64c80637cc0debc3917c3419d327f8ee1b/activerecord/lib/active_record/autosave_association.rb#L495-L497.;;;;;
;;;;;
That currently reads the class for the record from the `foreign_type` and then attempts to convert it to the right class for polymorphic relationships, but I believe this is unnecessary, since it already would have been converted to the correct type when set.;;;;;
;;;;;
Instead `reflection.active_record` should actually be updated to use the `polymorphic_name` otherwise we risk looking at the wrong model name that would be ultimately saved.;;;;;
;;;;;
Updating line 497 to this gets these test cases passing for me:;;;;;
;;;;;
```;;;;;
reflection.active_record.polymorphic_name != class_name;;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2, main;;;;;
;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-07T22:52:04Z,2024-03-18T17:47:48Z,[]
2173610664,Fix redundant resource_route Invocations in scaffold generator,### Motivation / Background";;;;;
;;;;;
This PR comes form [this comment](https://github.com/rails/rails/pull/50335#pullrequestreview-1776597506). The rails generate scaffold command triggers the resource_route hook twice.;;;;;
;;;;;
```;;;;;
% bin/rails generate scaffold Post name:string;;;;;
      invoke  active_record;;;;;
      create    db/migrate/20240303140443_create_posts.rb;;;;;
      create    app/models/post.rb;;;;;
      invoke    test_unit;;;;;
      create      test/models/post_test.rb;;;;;
      create      test/fixtures/posts.yml;;;;;
      invoke  resource_route;;;;;
       route    resources :posts;;;;;
      invoke  scaffold_controller;;;;;
      create    app/controllers/posts_controller.rb;;;;;
      invoke    erb;;;;;
      create      app/views/posts;;;;;
      create      app/views/posts/index.html.erb;;;;;
      create      app/views/posts/edit.html.erb;;;;;
      create      app/views/posts/show.html.erb;;;;;
      create      app/views/posts/new.html.erb;;;;;
      create      app/views/posts/_form.html.erb;;;;;
      create      app/views/posts/_post.html.erb;;;;;
      invoke    resource_route;;;;;
      invoke    test_unit;;;;;
      create      test/controllers/posts_controller_test.rb;;;;;
      create      test/system/posts_test.rb;;;;;
      invoke    helper;;;;;
      create      app/helpers/posts_helper.rb;;;;;
      invoke      test_unit;;;;;
      invoke    jbuilder;;;;;
      create      app/views/posts/index.json.jbuilder;;;;;
      create      app/views/posts/show.json.jbuilder;;;;;
      create      app/views/posts/_post.json.jbuilder;;;;;
```;;;;;
;;;;;
Despite setting the --skip-routes option, which is a feature of the ScaffoldControllerGenerator designed to prevent route generation, the command still produces routes.;;;;;
;;;;;
```;;;;;
% bin/rails g scaffold Post name:string --skip-routes;;;;;
      invoke  active_record;;;;;
      create    db/migrate/20240306035406_create_posts.rb;;;;;
      create    app/models/post.rb;;;;;
      invoke    test_unit;;;;;
      create      test/models/post_test.rb;;;;;
      create      test/fixtures/posts.yml;;;;;
      invoke  resource_route;;;;;
       route    resources :posts;;;;;
      invoke  scaffold_controller;;;;;
      create    app/controllers/posts_controller.rb;;;;;
      invoke    erb;;;;;
      create      app/views/posts;;;;;
      create      app/views/posts/index.html.erb;;;;;
      create      app/views/posts/edit.html.erb;;;;;
      create      app/views/posts/show.html.erb;;;;;
      create      app/views/posts/new.html.erb;;;;;
      create      app/views/posts/_form.html.erb;;;;;
      create      app/views/posts/_post.html.erb;;;;;
      invoke    resource_route;;;;;
      invoke    test_unit;;;;;
      create      test/controllers/posts_controller_test.rb;;;;;
      create      test/system/posts_test.rb;;;;;
      invoke    helper;;;;;
      create      app/helpers/posts_helper.rb;;;;;
      invoke      test_unit;;;;;
      invoke    jbuilder;;;;;
      create      app/views/posts/index.json.jbuilder;;;;;
      create      app/views/posts/show.json.jbuilder;;;;;
      create      app/views/posts/_post.json.jbuilder;;;;;
```;;;;;
;;;;;
### Detail;;;;;
Following three parts of the code are related to multiple invocation of resource_route.;;;;;
;;;;;
- `hook_for :resource_route` within the ResourceGenerator, from which the ScaffoldGenerator inherits;;;;;
- `class_option :resource_route` in ScaffoldGenerator;;;;;
- `hook_for :resource_route` in ScaffoldControllerGenerator which is invoked by `hook_for :scaffold_controller` in ScaffoldGenerator;;;;;
;;;;;
The resource_route hook within ScaffoldGenerator has been removed with remove_hook_for to ensure that the hook is called exclusively within the scaffold_controller hook.;;;;;
The `class_option :resource_route, type: :boolean` has also been removed. Despite the removal of the resource_route hook in ScaffoldGenerator, invoking `class_option :resource_route` was still indirectly triggering resource_route.;;;;;
This occurred due to a combination of the following reasons:;;;;;
;;;;;
- generator classes, which inherit from Thor::Group, execute all defined public instance methods upon command execution.;;;;;
- the hook_for method utilizes invoke_from_option, a method defined in Thor::Group to dynamically defines an invoke_from_option_* method at runtime, which persists even if remove_hook_for is called.;;;;;
  - https://github.com/rails/thor/blob/a43d92fad7ebd77d359b7b96eb3db8a73ef9057c/lib/thor/group.rb#L124;;;;;
- the invoke_from_option_* method returns early when the option isn't available but `class_option :resource_route` in ScaffoldGeneratore makes the option available and Rails sets the resource_route option as default.;;;;;
  - https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/railties/lib/rails/generators.rb#L56;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-07T11:11:06Z,2024-03-30T06:24:07Z,[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2173181848,Kebabcase puma-dev configuration suggestion in bin/seutp,""Following up on #51266. Trying to make sure the suggested `puma-dev` setup introduced in #51088 works out of the box.";;;;;
;;;;;
Creating a fresh app with `rails new --main AppName` (or any multi-word app name) will still give us the error message:;;;;;
;;;;;
![image](https://github.com/rails/rails/assets/986290/7dd53909-8566-45ac-960c-84b58f3526a9);;;;;
;;;;;
"This PR simply kebabcases the `puma-dev` symlink suggested in `bin/setup`, making it work without additional configuration."",2024-03-07T07:40:07Z,2024-03-07T07:40:11Z,""[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2172885664,Add escape_html_entities option to JSON encoder,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
This Pull Request has been created because I sometimes want to override the global `Encoding.escape_html_entities_in_json` option for specific call sites.;;;;;
;;;;;
Where I work, we tend to embed JSON in HTML, so the default html entity escaping is appreciated. But there are some cases where we'd like to turn it off.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes ActiveSupport's JSON encoding code to accept an optional flag for whether or not to escape HTML entities (`escape_html_entities`). If not supplied, the existing global configuration flag will be used instead.;;;;;
;;;;;
The idea is to make the following possible:;;;;;
;;;;;
```ruby;;;;;
class MyController < ApplicationController;;;;;
  def index;;;;;
    render json: { some: '<data>' }, escape_html_entities: false;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->;;;;;
Sorry to show up with a code change out of the blue. I did a weird monkey patch like this in our codebase at work to solve a problem, and it seemed easy to upstream so I'm submitting this PR just in case. No hard feelings if it doesn't seem reasonable.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [ x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [ x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
;;;;;
",2024-03-07T03:49:36Z,2024-03-07T03:49:40Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}]""";;;;;
"2172771713,Enable Hash#compact_blank inside ActiveSupport::LogSubscriber,""### Motivation / Background";;;;;
Using ActiveSupport::LogSubscriber#color inside a custom log subscriber causes NoMethodError.;;;;;
;;;;;
### Detail;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  gem """"activesupport""""";;;;;
end;;;;;
;;;;;
"require """"active_support""""";;;;;
;;;;;
class TestLogSubscriber < ActiveSupport::LogSubscriber;;;;;
  attach_to :test;;;;;
;;;;;
  def hi(event);;;;;
    info(color(event.payload[:message], GREEN));;;;;
  end;;;;;
;;;;;
  private;;;;;
    def log_exception(name, e);;;;;
      super;;;;;
      raise e;;;;;
    end;;;;;
end;;;;;
;;;;;
ActiveSupport::LogSubscriber.logger = ActiveSupport::Logger.new(STDOUT);;;;;
"ActiveSupport::Notifications.instrument(""""hi.test"""", message: """"Hello!"""")";;;;;
```;;;;;
;;;;;
```;;;;;
/rails/activesupport/lib/active_support/log_subscriber.rb:193:in `mode_from': undefined method `compact_blank' for an instance of Hash (NoMethodError);;;;;
    ;;;;;
      modes = MODES.values_at(*options.compact_blank.keys);;;;;
                                      ^^^^^^^^^^^^^^;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
I have encountered this while using kredis locally, like;;;;;
;;;;;
```;;;;;
$ cd kredis;;;;;
$ bin/console;;;;;
"irb(main):001> Kredis.string """"mystring""""";;;;;
"Could not log """"meta.kredis"""" event. NoMethodError: undefined method `compact_blank' for an instance of Hash";;;;;
```;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-07T01:39:16Z,2024-03-11T23:11:21Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}]""";;;;;
"2172603548,ActionText::RichText attachments not cleaned up when content made empty,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails""""";;;;;
;;;;;
  gem 'debug';;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"  # gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record/railtie""""";;;;;
"require """"active_storage/engine""""";;;;;
"require """"action_text/engine""""";;;;;
"require """"tmpdir""""";;;;;
;;;;;
class TestApp < Rails::Application;;;;;
  config.load_defaults Rails::VERSION::STRING.to_f;;;;;
;;;;;
  config.root = __dir__;;;;;
"  config.hosts << """"example.org""""";;;;;
  config.eager_load = false;;;;;
"  config.session_store :cookie_store, key: """"cookie_store_key""""";;;;;
"  config.secret_key_base = """"secret_key_base""""";;;;;
;;;;;
  config.logger = Logger.new($stdout);;;;;
  Rails.logger  = config.logger;;;;;
;;;;;
  config.active_storage.service = :local;;;;;
  config.active_storage.service_configurations = {;;;;;
    local: {;;;;;
      root: Dir.tmpdir,;;;;;
"      service: """"Disk""""";;;;;
    };;;;;
  };;;;;
end;;;;;
;;;;;
"ENV[""""DATABASE_URL""""] = """"sqlite3::memory:""""";;;;;
;;;;;
Rails.application.initialize!;;;;;
;;;;;
"require ActiveStorage::Engine.root.join(""""db/migrate/20170806125915_create_active_storage_tables.rb"""").to_s";;;;;
"require ActionText::Engine.root.join(""""db/migrate/20180528164100_create_action_text_tables.rb"""").to_s";;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  CreateActiveStorageTables.new.change;;;;;
  CreateActionTextTables.new.change;;;;;
;;;;;
  create_table :users, force: true;;;;;
end;;;;;
;;;;;
class User < ActiveRecord::Base;;;;;
  has_rich_text :description;;;;;
end;;;;;
;;;;;
"require """"minitest/autorun""""";;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_rich_text_embed_behaviour;;;;;
    attached = ActiveStorage::Blob.create_and_upload!(;;;;;
      io: ::StringIO.new('dummy'),;;;;;
"      filename: 'dummy.txt""""',";;;;;
      content_type: 'text/plain',;;;;;
    );;;;;
;;;;;
"    user = User.create!(description: ActionText::Content.new(""""hello"""").append_attachables(attached))";;;;;
;;;;;
    assert_equal 1, user.description.embeds.size;;;;;
;;;;;
    user.description = ActionText::Content.new('');;;;;
;;;;;
    user.save;;;;;
;;;;;
    assert_empty user.description.embeds;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
When the body of an ActionText::RichText object is set to the empty string.  I would expect attachments to be cleaned up.;;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
ActiveStorage attachments `ActionText::RichText.embeds` are retained until the body is modified to contain some data ;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: Rails 7.1.3.2 [source code is unchanged on mainline](https://github.com/rails/rails/blob/2fa3294618eba90e095020620ca9584190c2ec8e/actiontext/app/models/action_text/rich_text.rb#L55) ;;;;;
;;;;;
**Ruby version**: ruby 3.2.3;;;;;
",2024-03-06T23:13:33Z,2024-03-12T02:56:38Z,[{'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}, {'id': 1180817762, 'node_id': 'MDU6TGFiZWwxMTgwODE3NzYy', 'url': 'https://api.github.com/repos/rails/rails/labels/actiontext', 'name': 'actiontext', 'color': '3bc667', 'default': False, 'description': ''}]""";;;;;
"2171578747,ActionCable::Channel::Broadcasting.serialize_broadcasting leads to unintentional very wide broadcast,""### Steps to reproduce";;;;;
Please consider the following code:;;;;;
;;;;;
```ruby;;;;;
class User < ApplicationRecord;;;;;
  # ...;;;;;
end;;;;;
;;;;;
class Foo;;;;;
  include ActiveModel::Model;;;;;
;;;;;
  def initialize(user:, type:);;;;;
    @user = user;;;;;
    @type = type.to_s;;;;;
  end;;;;;
;;;;;
  def self.find(foo_id);;;;;
"    id, type = foo_id.split("""":"""", 2)";;;;;
    new(user: User.find(id), type: type);;;;;
  end;;;;;
;;;;;
  def id;;;;;
"    """"#{@user.id}:#{type}""""";;;;;
  end;;;;;
;;;;;
  # ... more methods that make Foo actually useful;;;;;
end;;;;;
;;;;;
class FooChannel < ApplicationCable::Channel;;;;;
  def subscribed;;;;;
    foo = Foo.find(params[:foo_id]);;;;;
    authorize foo, :subscribe? # (Pundit);;;;;
    stream_for foo;;;;;
  end;;;;;
;;;;;
  def self.notify_patch(foo);;;;;
"    payload = { event: :patched, id: foo.id, type: """"Foo"""" }";;;;;
    broadcast_to(foo, payload);;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
It is possible to subscribe to patch-events for instances of Foo.;;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
So what happens is that we will fetch the `foo`. This is successful; no exception is raised. We then call `authorize` to see if the `current_user` may subscribe to events on this channel for this resource. `authorize` will raise an exception if it is not allowed; in this example it doesn't; we're on the happy path. And after that we call `stream_for` which **seems** to work fine... We can subscribe and we can call `notify_patch` to send our events.;;
;;;;;
"But there is a subtle issue with this code. `stream_for` has called `broadcasting_for` to generate a unique ID for the stream, but that ID appears to be `""""FooChannel:nil""""` which is really not unique at all!";;;;;
;;;;;
`broadcast_to` also calls `broadcasting_for` returning the same not-so-unique ID. The result is that **every `FooChannel.notify_patch`-event** gets broadcasted to **all `FooChannel`-subscribers**.;;;;;
;;;;;
The reason for this is easy to find:;;;;;
[`broadcasting_for`](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/actioncable/lib/action_cable/channel/broadcasting.rb#L24) calls [`serialize_broadcasting`](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/actioncable/lib/action_cable/channel/broadcasting.rb#L29) which in turn calls [`to_param`](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/actioncable/lib/action_cable/channel/broadcasting.rb#L36) on our `foo`-object. Our foo-object isn't persisted, or in other words: `foo#persisted?` implemented by [`ActiveModel::API#persisted?`](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/activemodel/lib/active_model/api.rb#L95) returns `false`. This makes `foo.to_param` implemented by [`ActiveModel::Conversion#to_param`](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/activemodel/lib/active_model/conversion.rb#L90) return `nil`.;;;;;
;;;;;
Quick solutions for this are easy to produce:;;;;;
;;;;;
1. We could update our implementation of `persisted?`;;;;;
;;;;;
```ruby;;;;;
class Foo;;;;;
  def persisted?;;;;;
    @user.persisted?;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
2. we could also call `stream_for foo.id` and `broadcast_to(foo.id, payload)`;;;;;
3. we could also rewrite `Foo#to_param`;;;;;
4. etcetera.;;;;;
;;;;;
What's *not* easy is figuring out that you are in fact broadcasting all events to everyone.  We gave it some thought but we didn't come up with a solid solution that would prevent this from happening again with the next channel. (`BarChannel` obviously 😄). It's really easy to make the same mistake again and it's not easy to detect if you do.;;;;;
;;;;;
The root cause, from one point of view, is that fetching and authorization are ultimately dependent on an `id`, but that streaming uses `#to_param`. If it could call `#id` instead this would not have happened; but it can't, because `stream_for(model, callback = nil, coder: nil, &block)` basically allows anything as its `model`-parameter. Is this intentional?;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-06T13:57:46Z,2024-03-06T13:57:46Z,[]
2170621291,Default Active Storage strict loading to strict_loading_by_default,### Motivation / Background";;;;;
;;;;;
While Active Storage supports strict loading, it [defaults to false](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/activestorage/lib/active_storage/attached/model.rb#L106). This can be problematic in applications that enforce strict loading by default. It can be assumed that `strict_loading_by_default` includes Active Storage attachments, leading to n+1 issues.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes the default of the `strict_loading` keyword parameter for `has_one_attached` and  `has_many_attached` to use the model's `strict_loading_by_default` to create a consistent developer experience.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-06T04:39:05Z,2024-03-06T04:39:09Z,[{'id': 664533972, 'node_id': 'MDU6TGFiZWw2NjQ1MzM5NzI=', 'url': 'https://api.github.com/repos/rails/rails/labels/activestorage', 'name': 'activestorage', 'color': 'bfd4f2', 'default': False, 'description': None}]""";;;;;
"2170562786,Add support for pattern matching for parameters,""### Motivation / Background";;;;;
;;;;;
I have some RESTful endpoints where it makes sense to pattern match params to deal with different shape of incoming payloads, as illustrated in this endpoint:;;;;;
;;;;;
```ruby;;;;;
def create;;;;;
  case params;;;;;
  in interview_time_availability: { interview_time_id:, person_id: };;;;;
    @interview_time_availabilities.create! interview_time_id:, person_id:;;;;;
  in interview_time: { id: };;;;;
    @students.each do |student|;;;;;
      student.interview_time_availabilities.create interview_time_id: id;;;;;
    end;;;;;
  end;;;;;
;;;;;
  redirect_to students_interview_time_availabilities_path;;;;;
end;;;;;
```;;;;;
;;;;;
### Detail;;;;;
;;;;;
This PR adds a `deconstruct_keys(keys)` method on `StrongParameters` that called `to_unsafe_h` for pattern matching:;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [X] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-06T03:36:54Z,2024-03-11T16:19:18Z,[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}]""";;;;;
"2170466905,has_many relation with joins adding redundant inverse inner join,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
Have the following set of related models, and use the `reverse_dependencies` relation. Observe (via the inline comments in the test case below) that there is an unnecessary/redundant join;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
#!/usr/bin/env ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile do;;;;;
"  source """"https://rubygems.org""""";;;;;
  ;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
  ;;;;;
"  gem """"rails"""", """"~> 7.1.0""""";;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"# gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
  ;;;;;
"  gem """"sqlite3""""";;;;;
  ;;;;;
"  gem 'anbt-sql-formatter', require: """"anbt-sql-formatter/formatter""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :rubygems, force: true do |t|;;;;;
  end;;;;;
  ;;;;;
  create_table :versions, force: true do |t|;;;;;
    t.belongs_to :rubygem;;;;;
    t.integer :position;;;;;
    t.boolean :indexed;;;;;
  end;;;;;
  ;;;;;
  create_table :gem_downloads, force: true do |t|;;;;;
    t.belongs_to :rubygem;;;;;
    t.belongs_to :version, null: true;;;;;
    t.integer :count;;;;;
  end;;;;;
  ;;;;;
  create_table :dependencies, force: true do |t|;;;;;
    t.belongs_to :rubygem;;;;;
    t.belongs_to :version;;;;;
  end;;;;;
end;;;;;
;;;;;
class Rubygem < ActiveRecord::Base;;;;;
  has_many :incoming_dependencies, lambda {;;;;;
                                      joins(:version).where(versions: { indexed: true, position: 0 });;;;;
"                                    }, class_name: """"Dependency"""", inverse_of: :rubygem";;;;;
  has_many :reverse_dependencies, through: :incoming_dependencies, source: :version_rubygem;;;;;
  ;;;;;
  has_many :versions;;;;;
  ;;;;;
  has_many :incoming_dependencies_no_join, lambda {;;;;;
                                      where(versions: { indexed: true, position: 0 });;;;;
"                                    }, class_name: """"Dependency"""", inverse_of: :rubygem";;;;;
  has_many :reverse_dependencies_no_join, through: :incoming_dependencies_no_join, source: :version_rubygem;;;;;
end;;;;;
;;;;;
class Dependency < ActiveRecord::Base;;;;;
  belongs_to :rubygem, optional: true;;;;;
  belongs_to :version;;;;;
  has_one :version_rubygem, through: :version, source: :rubygem;;;;;
end;;;;;
;;;;;
class Version < ActiveRecord::Base;;;;;
  belongs_to :rubygem, touch: true;;;;;
"  has_many :dependencies, -> { order(""""rubygems.name ASC"""").includes(:rubygem) }, dependent: :destroy, inverse_of: :version";;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_assoc_1;;;;;
    rubygem1 = Rubygem.create!;;;;;
    v1 = Version.create!(indexed: true, position: 0, rubygem: rubygem1);;;;;
    rubygem2 = Rubygem.create!;;;;;
    v2 = Version.create!(indexed: true, position: 0, rubygem: rubygem2);;;;;
    d = v2.dependencies.create!(rubygem: rubygem1);;;;;
    ;;;;;
    puts Rails.version;;;;;
    ;;;;;
    # SELECT;;;;;
"    #   """"rubygems"""" . *";;;;;
    #   FROM;;;;;
"    #   """"rubygems""""";;;;;
"    #   INNER JOIN """"versions""""";;;;;
"    #     ON """"rubygems"""".""""id"""" = """"versions"""".""""rubygem_id""""";;;;;
"    #   INNER JOIN """"dependencies""""";;;;;
"    #     ON """"versions"""".""""id"""" = """"dependencies"""".""""version_id""""";;;;;
"    #   INNER JOIN """"versions"""" """"versions_dependencies""""";;;;;
"    #     ON """"versions_dependencies"""".""""id"""" = """"dependencies"""".""""version_id""""";;;;;
    #   WHERE;;;;;
"    #   """"dependencies"""".""""rubygem_id"""" = ?";;;;;
"    #   AND """"versions"""".""""indexed"""" = ?";;;;;
"    #   AND """"versions"""".""""position"""" = ?";;;;;
      ;;;;;
    puts mu_pp(rubygem1.reverse_dependencies.arel);;;;;
    ;;;;;
    assert_equal [rubygem2], rubygem1.reverse_dependencies;;;;;
    assert_equal rubygem1.reverse_dependencies_no_join, rubygem1.reverse_dependencies;;;;;
    ;;;;;
    # Failure:;;;;;
    # BugTest#test_assoc_1 [Untitled.rb:118]:;;;;;
    # --- expected;;;;;
    # +++ actual;;;;;
    # @@ -109,6 +109,53 @@;;;;;
    #           #<ActiveRecord::TypeCaster::Map:0xXXXXXX;;;;;
    #           @klass=;;;;;
    #           Dependency(id: integer, rubygem_id: integer, version_id: integer)>>,;;;;;
"    # +               name=""""version_id"""">>>>,";;;;;
    # +        #<Arel::Nodes::InnerJoin:0xXXXXXX;;;;;
    # +         @left=;;;;;
    # +          #<Arel::Nodes::TableAlias:0xXXXXXX;;;;;
    # +           @left=;;;;;
    # +            #<Arel::Table:0xXXXXXX;;;;;
    # +             @klass=;;;;;
    # +              Version(id: integer, rubygem_id: integer, position: integer, indexed: boolean),;;;;;
"    # +             @name=""""versions"""",";;;;;
    # +             @table_alias=nil,;;;;;
    # +             @type_caster=;;;;;
    # +              #<ActiveRecord::TypeCaster::Map:0xXXXXXX;;;;;
    # +               @klass=;;;;;
    # +                Version(id: integer, rubygem_id: integer, position: integer, indexed: boolean)>>,;;;;;
"    # +           @right=""""versions_dependencies"""">,";;;;;
    # +         @right=;;;;;
    # +          #<Arel::Nodes::On:0xXXXXXX;;;;;
    # +           @expr=;;;;;
    # +            #<Arel::Nodes::Equality:0xXXXXXX;;;;;
    # +             @left=;;;;;
    # +              #<struct Arel::Attributes::Attribute;;;;;
    # +               relation=;;;;;
    # +                #<Arel::Nodes::TableAlias:0xXXXXXX;;;;;
    # +                 @left=;;;;;
    # +                  #<Arel::Table:0xXXXXXX;;;;;
    # +                   @klass=;;;;;
    # +                    Version(id: integer, rubygem_id: integer, position: integer, indexed: boolean),;;;;;
"    # +                   @name=""""versions"""",";;;;;
    # +                   @table_alias=nil,;;;;;
    # +                   @type_caster=;;;;;
    # +                    #<ActiveRecord::TypeCaster::Map:0xXXXXXX;;;;;
    # +                     @klass=;;;;;
    # +                      Version(id: integer, rubygem_id: integer, position: integer, indexed: boolean)>>,;;;;;
"    # +                 @right=""""versions_dependencies"""">,";;;;;
"    # +               name=""""id"""">,";;;;;
    # +             @right=;;;;;
    # +              #<struct Arel::Attributes::Attribute;;;;;
    # +               relation=;;;;;
    # +                #<Arel::Table:0xXXXXXX;;;;;
    # +                 @klass=;;;;;
    # +                  Dependency(id: integer, rubygem_id: integer, version_id: integer),;;;;;
"    # +                 @name=""""dependencies"""",";;;;;
    # +                 @table_alias=nil,;;;;;
    # +                 @type_caster=;;;;;
    # +                  #<ActiveRecord::TypeCaster::Map:0xXXXXXX;;;;;
    # +                   @klass=;;;;;
    # +                    Dependency(id: integer, rubygem_id: integer, version_id: integer)>>,;;;;;
"    #         name=""""version_id"""">>>>]>,";;;;;
    #   @wheres=;;;;;
    #     [#<Arel::Nodes::And:0xXXXXXX;;;;;
    # @@ -213,6 +260,8 @@;;;;;
"    #     ON """"rubygems"""".""""id"""" = """"versions"""".""""rubygem_id""""";;;;;
"    #   INNER JOIN """"dependencies""""";;;;;
"    #     ON """"versions"""".""""id"""" = """"dependencies"""".""""version_id""""";;;;;
"    # +    INNER JOIN """"versions"""" """"versions_dependencies""""";;;;;
"    # +      ON """"versions_dependencies"""".""""id"""" = """"dependencies"""".""""version_id""""";;;;;
    #   WHERE;;;;;
"    #   """"dependencies"""".""""rubygem_id"""" = ?";;;;;
"    #   AND """"versions"""".""""indexed"""" = ?";;;;;
      ;;;;;
    assert_equal rubygem1.reverse_dependencies_no_join.arel.ast, rubygem1.reverse_dependencies.arel.ast;;;;;
  end;;;;;
  ;;;;;
;;;;;
  def test_assoc_2;;;;;
    rubygem1 = Rubygem.create!;;;;;
    v1 = Version.create!(indexed: true, position: 0, rubygem: rubygem1);;;;;
    rubygem2 = Rubygem.create!;;;;;
    v2 = Version.create!(indexed: true, position: 0, rubygem: rubygem2);;;;;
    d = v2.dependencies.create!(rubygem: rubygem1);;;;;
    ;;;;;
    assert_equal [d], rubygem1.incoming_dependencies;;;;;
    # shows that the joins is necessary;;;;;
    assert_raises(ActiveRecord::StatementInvalid) { rubygem1.incoming_dependencies_no_join.to_a };;;;;
  end;;;;;
  ;;;;;
  def mu_pp(obj);;;;;
    case obj;;;;;
    when Arel::Nodes::SelectStatement;;;;;
      rule = AnbtSql::Rule.new;;;;;
      rule.keyword = AnbtSql::Rule::KEYWORD_UPPER_CASE;;;;;
"      rule.kw_multi_words << """"INNER JOIN""""";;;;;
"      rule.kw_nl_x << """"INNER JOIN""""";;;;;
"      rule.indent_string = """"  """"";;;;;
      ;;;;;
"      [""""AST:"""", obj.pretty_inspect, """"SQL:"""",";;;;;
"        AnbtSql::Formatter.new(rule).format(obj.to_sql)].join(""""\n\n"""")";;;;;
    else;;;;;
      obj.pretty_inspect;;;;;
    end;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
"The additional join should not be added, since it's an inner join and the `""""versions"""".""""id"""" = """"dependencies"""".""""version_id""""` restriction guarantees it does not add any additional filtering";;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
"There is an unused join to `""""versions"""" """"versions_dependencies""""`";;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.3.0;;;;;
",2024-03-06T01:49:42Z,2024-03-06T01:49:42Z,[]
2169291575,ActiveRecord::Encryption is encrypting/filtering other similar named attributes,### Steps to reproduce";;;;;
;;;;;
#NOM?;;;;;
```bash;;;;;
  bin/rails g model User first_name last_name email other_first_name;;;;;
  bin/rails db:migrate;;;;;
```;;;;;
#NOM?;;;;;
```ruby;;;;;
User.encrypts(:first_name);;;;;
```;;;;;
;;;;;
#NOM?;;;;;
```ruby;;;;;
"user = User.new(first_name: """"Hello"""", last_name: """"World"""", other_first_name: """"Hi"""")";;;;;
;;;;;
# This outputs;;;;;
"=> #<User:0x000000010c5ea648 id: nil, first_name: """"[FILTERED]"""", last_name: """"World"""", email: nil, other_first_name: """"[FILTERED]"""", created_at: nil, updated_at: nil>";;;;;
;;;;;
# Encrypted attributes only has :first_name in the set;;;;;
User.encrypted_attributes;;;;;
=> <Set: {:first_name}>;;;;;
```;;;;;
"<img width=""""654"""" alt=""""Screenshot 2024-03-05 at 7 21 18 PM"""" src=""""https://github.com/rails/rails/assets/27268721/bbb18517-a068-4982-97ea-39cbd5f492a5"""">";;;;;
;;;;;
### Expected behavior;;;;;
- `other_first_name` should not be [FILTERED];;;;;
;;;;;
### Actual behavior;;;;;
- `other_first_name` is `[FILTERED]`;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: `Edge`;;;;;
;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-05T13:52:33Z,2024-04-06T06:49:55Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}, {'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}]""";;;;;
"2168115785,Raise on `in_batches` used on a relation with unpersisted records,""Prior https://github.com/rails/rails/pull/48876 using `in_batches` on a relation with unpersisted records would work but new records will not be included in the iteration. ";;;;;
;;;;;
Currently using `in_batches` on a loaded relation with unpersisted records will fail when we try to sort records by `id` as new records don't have `id` set and comparison with `nil` fails.;;;;;
;;;;;
Since both raising an ambiguous comparison error or implicitly skipping new records seem sub-option we are proposing to raise a clear error to let application explicitly decide whether it needs to iterate on a loaded relation in slices (i.e. `each_slice`) or explicitly drop / save the un-persisted record and continue using `in_batches` ;;;;;
;;;;;
"cc: @garyhtou "",2024-03-05T01:52:09Z,2024-03-14T06:55:50Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2168018086,QueryAttributes treated as strings in exec_query,""### Steps to reproduce";;;;;
;;;;;
I have a library [dynamic_records](https://github.com/LukeClancy/dynamic-records-meritfront) that uses exec_query alongside QueryAttributes to write sql. Recently I updated rails, pg and psql to a recent version and found that exec_query no longer works as expected.;;;;;
;;;;;
exec_query seems to be converting all parameters into strings. I do not believe this is expected functionality.;;;;;
;;;;;
```ruby;;;;;
value = 1;;;;;
type = ActiveRecord::Type::Integer.new;;;;;
qa = ActiveRecord::Relation::QueryAttribute.new('int_input', value, type);;;;;
"x = ActiveRecord::Base.connection.exec_query(""""select $1"""", 'query name', [qa])";;;;;
out_v = x.rows.first.first;;;;;
;;;;;
"puts """"value: #{out_v.inspect}, class: #{out_v.class.to_s}""""";;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
"value: 1, class: Integer""""";;;;;
;;;;;
### Actual behavior;;;;;
"value \""""1\"""", class: String""""";;;;;
;;;;;
### System configuration;;;;;
ruby 3.2.2p53;;;;;
rails (7.1.3.2);;;;;
activemodel (= 7.1.3.2);;;;;
activerecord (= 7.1.3.2);;;;;
pg (1.5.6);;;;;
;;;;;
"psql (PostgreSQL) 16.2 (Ubuntu 16.2-1.pgdg22.04+1)"",2024-03-05T00:02:57Z,2024-03-05T23:37:09Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2167901158,Unexpected behaviour for CTE joins when CTE has same name as a relation,""### Steps to reproduce";;;;;
;;;;;
We are big users of CTEs and have been using [vlado/activerecord-cte](/vlado/activerecord-cte) for many years now. While trying to upgrade to Rails 7.1, we came across this situation which previously worked in Vlado's extension (stripped down code follows):;;;;;
;;;;;
```ruby;;;;;
class Task < ApplicationRecord;;;;;
  has_many :project_resources;;;;;
  has_many :projects, through: :project_resources;;;;;
end;;;;;
;;;;;
class ProjectResource < ApplicationRecord;;;;;
  belongs_to :resource, polymorphic: true;;;;;
  belongs_to :project;;;;;
end;;;;;
;;;;;
class Project < ApplicationRecord;;;;;
  has_many :project_resources;;;;;
  has_many :tasks, through: :project_resources, source: :resource, source_type: 'Task';;;;;
end;;;;;
;;;;;
Project.with(tasks: Task.active).joins(:tasks);;;;;
```;;;;;
;;;;;
With the extension, this would produce SQL like the following:;;;;;
;;;;;
```sql;;;;;
WITH tasks AS (;;;;;
  SELECT tasks.*;;;;;
  FROM tasks;;;;;
  WHERE active;;;;;
);;;;;
  SELECT projects.*;;;;;
  FROM projects;;;;;
  JOIN project_resources ON project_resources.resource_type = 'Task' AND project_resources.project_id = projects.id;;;;;
  JOIN tasks ON tasks.id = project_resources.resource_id;;;;;
```;;;;;
;;;;;
With the Rails 7.1 CTE joins, this produces the following:;;;;;
;;;;;
```sql;;;;;
WITH tasks AS (;;;;;
  SELECT tasks.*;;;;;
  FROM tasks;;;;;
  WHERE active;;;;;
);;;;;
  SELECT projects.*;;;;;
  FROM projects;;;;;
  JOIN tasks ON tasks.project_id = projects.id;;;;;
```;;;;;
;;;;;
Which is an invalid SQL query, as `project_id` doesn't exist on `tasks` but rather exists on the `project_resources` relation which sits in between `Task` and `Project`. This only happens when the CTE name is the same as an association. For instance, this does not change the join conditions:;;;;;
;;;;;
```ruby;;;;;
Project.with(filtered_tasks: Task.active).joins(:tasks);;;;;
```;;;;;
;;;;;
Produces;;;;;
;;;;;
```sql;;;;;
WITH filtered_tasks AS (;;;;;
  SELECT tasks.*;;;;;
  FROM tasks;;;;;
  WHERE active;;;;;
);;;;;
  SELECT projects.*;;;;;
  FROM projects;;;;;
  JOIN project_resources ON project_resources.resource_type = 'Task' AND project_resources.project_id = projects.id;;;;;
  JOIN tasks.id = project_resources.resource_id;;;;;
```;;;;;
;;;;;
Where the join conditions are retained as expected. (The `filtered_tasks` relation isn't joined here, of course, but the point is is that the `:tasks` join itself is unaffected by the `#with` call.);;;;;
;;;;;
Masking a table name in a CTE is a very useful capability, but it's not really possible if masking the table impacts the joins. ;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
I would expect that the joins would not be affected if the relation alias in the `WITH` query is masking an actual relation.;;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
The join condition should remain unaffected in the case of the CTE alias being the same as a relation name.;;;;;
;;;;;
### System configuration;;;;;
;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.3.0;;;;;
;;;;;
### Potential Fix;;;;;
;;;;;
After playing with it a bit, the following appears to satisfy all of our unit tests for our CTEs:;;;;;
;;;;;
```diff;;;;;
diff --git a/activerecord/lib/active_record/relation/query_methods.rb b/activerecord/lib/active_record/relation/query_methods.rb;;;;;
index 5d63709c3a..f17ed6b562 100644;;;;;
#NOM?;;;;;
#NOM?;;;;;
@@ -1625,7 +1625,7 @@ def build_from;;;;;
 ;;;;;
       def select_named_joins(join_names, stashed_joins = nil, &block);;;;;
         cte_joins, associations = join_names.partition do |join_name|;;;;;
-          Symbol === join_name && with_values.any? { _1.key?(join_name) };;;;;
+          Symbol === join_name && with_values.any? { _1.key?(join_name) } && !reflections[join_name.to_s];;;;;
         end;;;;;
 ;;;;;
         cte_joins.each do |cte_name|;;;;;
```;;;;;
;;;;;
This does not appear to break any existing ActiveRecord tests, so if there is interest in using this I can write up a patch that includes tests.;;;;;
",2024-03-04T22:28:36Z,2024-04-06T22:44:52Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2165733298,[Fix #50118] `:prepend` option not working with `run_after_transaction_callbacks_in_order_defined` config,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Fixes #50118.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Ensures that the `:prepend` option for after transaction callbacks is respected when `config.run_after_transaction_callbacks_in_order_defined = true`. This allows prepending certain `after_commit` and `after_rollback` callbacks while still running the rest in the order defined on the model.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->;;;;;
;;;;;
In addition to the tests here there is also [this script](https://github.com/rails/rails/issues/50118#issuecomment-1975502684) which I tested against.;;;;;
;;;;;
cc @ghiculescu;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-04T01:36:20Z,2024-03-04T05:20:42Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2165611366,[Fix #51242] Rework in_batches(use_ranges: true) to be more efficient,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
Fixes https://github.com/rails/rails/issues/51242;;;;;
;;;;;
In ActiveRecord 7.1, a new option was added to [ActiveRecord::Batches#in_batches](https://api.rubyonrails.org/classes/ActiveRecord/Batches.html#method-i-in_batches), `use_ranges: true`, that enables a more efficient way to generate queries from the provided scope for each batch.;;;;;
;;;;;
The resulting queries use ranges to select record ids, e.g. `WHERE id > 10000 AND id <= 20000` instead of passing a possibly very long list of ids in an `IN` clause, e.g. `IN (10000, 10001, [...,] 19999, 20000)`.;;;;;
;;;;;
This option was implemented in https://github.com/rails/rails/pull/45414.;;;;;
;;;;;
The implementation of `use_ranges: true` relies on the already implemented strategy to select all ids from the range (needed for `use_ranges: false`), when generating the scope for each batch.;;;;;
;;;;;
The typical SQL query to generate a scope for a batch is (example with batches of 10k records):;;;;;
;;;;;
```sql;;;;;
"SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
```;;;;;
;;;;;
But subsequently, all these ids but the last one are discarded:;;;;;
;;;;;
https://github.com/rails/rails/blob/v7.1.3.2/activerecord/lib/active_record/relation/batches.rb#L379-L380;;;;;
;;;;;
**This method wastes resources in the database (CPU, I/O), in transit (bandwidth) and in the Ruby process (RAM).**;;;;;
;;;;;
This Pull Request is a proposal to save these resources by implementing **an additional optimisation**.;;;;;
;;;;;
### Detail;;;;;
;;;;;
The description below applies only to the use of `in_batches` **with** the option `use_ranges: true`.;;;;;
;;;;;
Instead of returning all the ids for each batch, we use `OFFSET` to search for the last id in the next batch and return just one id, e.g.;;;;;
;;;;;
```diff;;;;;
  -- queries for all batches but the last (before/after);;;;;
"- SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
"+ SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 1 OFFSET 9999";;;;;
```;;;;;
;;;;;
There is one downside, however.;;;;;
;;;;;
Our `OFFSET`-based query won't be able to return the last id if the next batch is smaller than the limit or if there's no next batch. We always need one additional query to get the size and last id of the very last batch. We use the same query as before the optim for that purpose:;;;;;
;;;;;
```diff;;;;;
  -- queries for the last batch (before/after);;;;;
"- SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
"+ SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 1 OFFSET 9999";;;;;
"+ SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
```;;;;;
;;;;;
Unless we only have a handful of small batches, this strategy is a winner overall, as it reduces the time and network resources spent generating batches, as shown by the benchmark below.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
#### Benchmark;;;;;
;;;;;
Let's reuse the benchmark from the description of https://github.com/rails/rails/pull/45414, i.e. the same `users` table with `10M` records, but with two modifications:;;;;;
;;;;;
* Batches of 10k records instead of 1k;;;;;
* No call to `batch.count` on each batch since we are measuring only on the time and resources needed to generate the scopes, not to use them.;;;;;
;;;;;
Here is the code used:;;;;;
;;;;;
```sql;;;;;
CREATE TABLE users (id bigserial PRIMARY KEY, val integer DEFAULT 0);;;;;
INSERT INTO users SELECT i FROM generate_series(1, 10000000) AS i;;;;;
```;;;;;
;;;;;
```ruby;;;;;
start = Process.clock_gettime(Process::CLOCK_MONOTONIC);;;;;
;;;;;
count = 0;;;;;
User.in_batches(of: 10_000) do |batch|;;;;;
  count += 1  # previously: batch.count, but we don't want to trigger any other queries in this benchmark;;;;;
end;;;;;
;;;;;
"puts """"Count = #{count}""""";;;;;
elapsed = Process.clock_gettime(Process::CLOCK_MONOTONIC) - start;;;;;
"puts """"Elapsed: #{elapsed}s""""";;;;;
```;;;;;
;;;;;
The benchmark is executed on a single machine (a recent macbook), with a round-trip-time < 1ms.;;;;;
;;;;;
The network (I/O) stats are obtained by comparing the result of this command before/after a benchmark run:;;;;;
;;;;;
```;;;;;
docker stats --no-stream postgres --format 'table {{.NetIO}}';;;;;
```;;;;;
;;;;;
**Here are the results:**;;;;;
;;;;;
| Batching method                      | Duration | Network (I/O)     |;;;;;
|--------------------------------------|---------:|------------------:|;;;;;
| in_batches(use_ranges: true)         |    5.6 s.  |   &nbsp;&nbsp;1.2 MB / &nbsp;&nbsp;180 MB   |;
| in_batches(use_ranges: true) + optim from this PR |     2.3 s.  |   &nbsp;&nbsp;< 0.5 MB /  < 0.2 MB   |;;;
;;;;;
In this benchmark, we managed to **generate scopes for batches `x2.4` times faster and with `x900` times less bandwidth**. These results will of course typically vary with the batch size used, and the network speed.;;;;;
;;;;;
The absolute values may not seem like huge gains, but I'm considering using `in_batches(use_ranges: true)` on tables with over 3 billion records, where this benchmark would show a saving of at least `16+ minutes` and `52.7 GB` of bandwidth (+ the database resources needed to extract/send this traffic).;;;;;
;;;;;
#### Other strategies considered;;;;;
;;;;;
Using `OFFSET` is not be the only way to achieve the same kind of optimisation.;;;;;
;;;;;
For example, we could consider using a strategy based on the calculation of the maximum id + batch size for each batch (details folded below).;;;;;
;;;;;
<details>;;;;;
  <summary>Using a CTE</summary>;;;;;
<br />;;;;;
We could use a CTE like this one:;;;;;
;;;;;
```sql;;;;;
"WITH """"batch_ids"""" AS (";;;;;
    -- same query as today;;;;;
"    SELECT """"users"""".""""id"""" FROM """"users"""" WHERE (id > 10000) ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
);;;;;
SELECT COUNT(id) AS last_batch_size, MAX(id) AS last_batch_id FROM batch_ids;;;;;
```;;;;;
;;;;;
"This would be advantageous, as we would not have to use that """"extra"""" query for the last batch as we did above.";;;;;
;;;;;
Nevertheless, using a CTE would have the following downsides:;;;;;
;;;;;
1. CTEs are not supported yet by all RDBMS supported by Active Record (MySQL < 8.0);;;;;
"2. To my knowledge, ActiveRecord does not provide any way to easily generate a query with two distinct calculations such as a count and a maximum. The """"manual"""" workarounds for this could be complicated.";;;;;
;;;;;
For the record, the query above can be generated with:;;;;;
;;;;;
```ruby;;;;;
User.connection.select_one(;;;;;
  User;;;;;
    .with(batch_ids: User.select('id').where('id > 10000').order(:id).limit(10000));;;;;
    .from('batch_ids');;;;;
    .select('COUNT(id) AS last_batch_size', 'MAX(id) AS last_batch_id');;;;;
);;;;;
```;;;;;
</details>;;;;;
;;;;;
;;;;;
<details>;;;;;
  <summary>Using a subquery</summary>;;;;;
<br />;;;;;
We could use a subquery like this one:;;;;;
;;;;;
```sql;;;;;
SELECT;;;;;
    COUNT(id) AS last_batch_size, MAX(id) AS last_batch_id;;;;;
FROM (;;;;;
    -- same query as today;;;;;
"    SELECT """"users"""".""""id"""" FROM """"users"""" WHERE (id > 10000) ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
) subquery;;;;;
```;;;;;
;;;;;
Even better than the CTE version because this would be compatible with all RDBMS supported by ActiveRecord.;;;;;
;;;;;
For the record, the query above can be generated with:;;;;;
;;;;;
```ruby;;;;;
User.connection.select_one(;;;;;
  User.select('COUNT(id) AS last_batch_size', 'MAX(id) AS last_batch_id').from(;;;;;
    User.select('id').where('id > 10000').order(:id).limit(10000);;;;;
  );;;;;
);;;;;
```;;;;;
;;;;;
But to support all sorts of primary keys (including composite) and multiple calculations in a single query, I suspect some complicated work is required in Active Record. If you think this is feasible at a reasonable cost, please provide some guidance 🙏 ;;;;;
</details>;;;;;
;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-03T23:02:55Z,2024-04-06T22:48:12Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2229968422,Improve ActionCable redis config example [skip ci],""While using `{}` inside yaml files is valid and will be correctly parsed, it looks strange and not idiomatic."",2024-04-07T21:32:04Z,2024-04-07T21:32:08Z,""[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2229766221,Skip ActiveStorage previewer tests if required tools are unavailable,""These tests require certain tools to be available, if they aren't these tests will fail. Skip instead."",2024-04-07T13:14:48Z,2024-04-07T13:14:53Z,""[{'id': 664533972, 'node_id': 'MDU6TGFiZWw2NjQ1MzM5NzI=', 'url': 'https://api.github.com/repos/rails/rails/labels/activestorage', 'name': 'activestorage', 'color': 'bfd4f2', 'default': False, 'description': None}]""";;;;;
"2229284323,Remove usage of `OpenStruct`,""Follow up to https://github.com/rails/rails/pull/51491#issuecomment-2037429653.";;;;;
;;;;;
"There was one more error regarding the missing `require """"ostruct""""` after that PR merge (https://buildkite.com/rails/rails/builds/106158#018eaee1-7e2b-4e8a-9876-8d3c358d5576), so maybe we can just remove its usage instead?";;;;;
;;;;;
"cc @byroot "",2024-04-06T14:58:05Z,2024-04-06T18:57:07Z,""[{'id': 107188, 'node_id': 'MDU6TGFiZWwxMDcxODg=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionmailer', 'name': 'actionmailer', 'color': '8B00FC', 'default': False, 'description': None}, {'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}, {'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}, {'id': 3666649, 'node_id': 'MDU6TGFiZWwzNjY2NjQ5', 'url': 'https://api.github.com/repos/rails/rails/labels/actionview', 'name': 'actionview', 'color': 'd7e102', 'default': False, 'description': None}, {'id': 123812746, 'node_id': 'MDU6TGFiZWwxMjM4MTI3NDY=', 'url': 'https://api.github.com/repos/rails/rails/labels/activejob', 'name': 'activejob', 'color': '5319e7', 'default': False, 'description': None}]""";;;;;
"2229169236,Don't buffer things that shouldn't be buffered.,""Assigning `ActionDispatch::Response` to `self.response` causes the response body to be buffered (and potentially evaluated multiple times).";;;;;
;;;;;
```ruby;;;;;
class StreamingController < ApplicationController;;;;;
  def simple;;;;;
    body = Enumerator.new do |enumerator|;;;;;
"      enumerator << """"."""" * 1024";;;;;
      ;;;;;
      100.times do |i|;;;;;
"        enumerator << """"This is line #{i}\n""""";;;;;
        sleep 0.1;;;;;
      end;;;;;
    end;;;;;
;;;;;
    # Works, puma, falcon, Rails 7.1;;;;;
"    # self.response = Rack::Response[200, {""""content-type"""" => """"text/plain""""}, body]";;;;;
;;;;;
    # Doesn't work because the response is buffered:;;;;;
"    self.response = ActionDispatch::Response.new(200, {""""content-type"""" => """"text/plain""""}, body)";;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
In both Puma and Falcon, the response is buffered without this change.;;;;;
;;;;;
"cc @willcosgrove "",2024-04-06T09:53:30Z,2024-04-06T10:08:35Z,""[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}]""";;;;;
"2229046933,[Fix #40109] Incorrect joins for polymorphic `has_many through:` with association scope,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Fixes https://github.com/rails/rails/issues/40109;;;;;
;;;;;
### Detail;;;;;
;;;;;
Updates `ActiveRecord::Reflection::PolymorphicReflection#join_scopes` to not apply the previous reflection's join scopes if it's a through reflection.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-06T03:10:42Z,2024-04-06T07:14:24Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2228498012,add navbar highlighting to guides [ci skip],""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
@jathayde @AmandaPerino This Pull Request has been created to add the highlighting to the navigation bar. ;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request adds on scroll event to control highlighting and css rules for the for highlight. ;;;;;
;;;;;
Right now there are comments in the css labeling the parts that draw the highlight and the square because I wasn't sure it would be obvious what the pseudo-elements were for, but I can remove them if you want. ;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-05T17:27:03Z,2024-04-07T15:34:07Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2228287663,UnrecognizedCommandError can be corrected and retried,""### Motivation / Background";;;;;
;;;;;
"This is a follow up to https://github.com/rails/rails/pull/50941. """"Did you mean?"""" style errors were introduced in rails/rails@2530160 for unrecognized commands. With this change, we give the user the option to retry with the corrected command name - instead of needing to retype and rerun the command.";;;;;
;;;;;
### Detail;;;;;
;;;;;
We iterate through all the possible commands returned by `DidYouMean::SpellChecker` and give the user the option to rerun the suggested correction.;;;;;
;;;;;
```;;;;;
 ➜  myapp git:(main) bin/rails vershen;;;;;
"Unrecognized command """"vershen""""";;;;;
;;;;;
Did you mean?  version [Yn] y;;;;;
Rails 7.2.0.alpha;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-05T15:19:49Z,2024-04-05T22:31:25Z,[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2228096494,Improve accessibility,""### Motivation / Background";;;;;
;;;;;
As requested by @AmandaPerino, this PR aims to improve the accessibility of the guides. It continues on the work in #51341 #51372 #51385 and #51444. It also addresses whatever wasn't addressed from https://github.com/rails/rails/pull/51341#issuecomment-2007717282.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Each commit in the PR has a descriptive title and often a message why the change was made, which I recommend we keep when merging instead of squashing it. Screenshots are listed below. A few of the commits that introduce fixes or features are listed here:;;;;;
;;;;;
* [Add label and accessible content](https://github.com/rails/rails/commit/4f2b25ba54d82bc897fb33f681214f5bf05cb0bd) ;;;;;
  ;;;;;
  Having a select element without a label outside a form isn't directly problematic, but the text Version is the label of the select and should act as such.;;;;;
;;;;;
  Because the select element is set up to browse to a different page which loses the current focus position, users must be instructed about this context change. It would be much better to display this content to everyone, but having this for screenreaders only is better than not having it at all.;;;;;
;;;;;
* [Fix accessible text for voice commands](https://github.com/rails/rails/commit/1863e5590cecac6ecfd0c4c031f1c4c967d0d768) ;;;;;
  ;;;;;
  Using the title attribute means some screenreaders will not be able to show the expanded accessible text at all, but using aria-label loses the hover text currently available.;;;;;
;;;;;
  If the title attribute is still used, the accessible label should start with the same content as the visible label. This is necessary for most voice operated tooling which only match starting text.;;;;;
;;;;;
"  Having """"Return"""" as the start of the accessible label and """"Guides"""" as the start of the visible label means in most cases users that rely on voice commands will not be able to browse here.";;;;;
;;;;;
* [Add landmarks to all guide pages](https://github.com/rails/rails/commit/9669f4be012f34488d52e16d0b6e40a11399e414) ;;;;;
  ;;;;;
  Landmarks such as header, section, footer, article, and the main content landmark help navigating when using assistive tooling.;;;;;
;;;;;
  Since each guide is a self-contained article, a header section with the guide introduction and navigation, a footer section which is not part of the content but a call to action, and the rest can be clearly separated, landmarks here are appropriate.;;;;;
;;;;;
* [Make back-to-top work without JavaScript](https://github.com/rails/rails/commit/b33278c01384a7612d0adf2270456718181b5acb) ;;;;;
;;;;;
  By doing feature detection on animation timeline CSS, the graceful degradation can take care of the visibility of the back-to-top button. In case no JavaScript is available, it should always be shown.;;;;;
;;;;;
* [Enable back-to-top without JavaScript](https://github.com/rails/rails/commit/430f27c959f0df30b6baeea3d688d8fa5448f842) ;;;;;
;;;;;
  And add an accessible label to the button. It would be better to just show the text back to top underneath the arrow, but this change is again better than not having it at all.;;;;;
;;;;;
* [Consistent scrolling behaviour respecting pref](https://github.com/rails/rails/commit/f2ae0318736a286a13d896cad8527bd2d1443c50) ;;;;;
;;;;;
  Use the preference to detect if a user wants reduced motion and if not enable smooth scrolling. This takes care of the back-to-top smooth scrolling, and also adds it to anchor links. If this is unwanted, the change can be reverted and a matchmedia check should be done in JavaScript instead before smooth scrolling;;;;;
;;;;;
* [Add skip links to quickly navigate past navs](https://github.com/rails/rails/commit/653b292ac26b2df59ebeb44fc9415ebc8130243b) ;;;;;
  ;;;;;
  Skip links are a common practice to allow keyboard and other users to skip past large blocks of content that are present on every page, which in this case are the secondary navigation at the top,;;;;;
the version selector, and the chapter navigation.;;;;;
;;;;;
  The skip links only show when focused.;;;;;
;;;;;
* [Wrap tables to make them responsive](https://github.com/rails/rails/commit/e2cfe8fdfccfcb47aec2f358b0badab79c817981);;;;;
;;;;;
* [Make back-to-top link to skip link](https://github.com/rails/rails/commit/ad966a42de9e166ab33026b28fc8dda64f5fbdd1) ;;;;;
;;;;;
  This allow screen readers to announce something, because linking to an empty fragment or the body element doesn't announce anything useful.;;;;;
;;;;;
* [Add branded selectable color](https://github.com/rails/rails/commit/2557614d872629462e354b2bd1536736aa2077be) ;;;;;
;;;;;
  Fixes selecting text in dark mode and brands it for both modes.;;;;;
;;;;;
* [Make more info and guides index accessible](https://github.com/rails/rails/commit/f9eaeb18d8c5712ae0f2edf351ff9829c996bf78) ;;;;;
;;;;;
  * Adds aria-controls, which binds the control to the content.;;;;;
  * Adds aria-expanded, which signals the current expansion state.;;;;;
  * Adds focus handling, which focuses the first link or the button;;;;;
    depending on the expansion state.;;;;;
  * Adds keyboard closing for the more info button.;;;;;
  * Adds outside click tracking to close the expanded content.;;;;;
  * Fixes the more info button to not be focusable.;;;;;
;;;;;
* [Fix dark mode for guide selector](https://github.com/rails/rails/commit/9c4cfd00492a2bd55db9ed5b5a9a616a962c153a);;;;;
;;;;;
* [Add accessible label for guide navigator](https://github.com/rails/rails/commit/93f9819c62890301f398e752b6083c9d2c9f6c40);;;;;
;;;;;
### Additional information;;;;;
;;;;;
Please note that this PR doesn't necessarily make the guides completely accessible and we should continue to improve on this, but this gets us (a big) part of the way there, together with the changes that were already made prior.;;;;;
;;;;;
| Before | After |;;;;;
| ------ | ----- |;;;;;
"| You could not focus the selector pressing """"Version"""" | ![a11y-focusable-label-version](https://github.com/rails/rails/assets/1964376/58f5d1a7-a6ef-47e2-86ac-6e1e0288a18c) |";;;;;
| The element (version selector) was broken if JavaScript was disabled | ![a11y-no-js-desktop](https://github.com/rails/rails/assets/1964376/0a93871b-c55a-4f9b-a524-86f6024f39b7) |;;;;;
| The element (version selector) was broken if JavaScript was disabled | ![a11y-no-js-mobile](https://github.com/rails/rails/assets/1964376/5075e1ac-c888-496e-8fa4-4f9066d6aa43) |;;;;;
| ![a11y-before-table-wrap](https://github.com/rails/rails/assets/1964376/29e41733-60ce-4933-9d4f-36a9fad972e8) | ![a11y-after-table-wrap](https://github.com/rails/rails/assets/1964376/303818b1-d3af-45e3-9ea7-08121c91f04c) |;;;;;
| You could not skip past the secondary top navigation | ![a11y-main-skip-link](https://github.com/rails/rails/assets/1964376/8d2c1af0-7575-4089-8e89-e7cfb42c8975) |;;;;;
| You could not skip past the chapter navigation | ![a11y-chapter-skip-link](https://github.com/rails/rails/assets/1964376/87cccb26-f7ae-4ae9-a382-145d6cbd963e) |;;;;;
| ![a11y-selectable-text-before](https://github.com/rails/rails/assets/1964376/e9e9b56f-08de-45d8-955f-c7884b33a387) | ![a11y-selectable-text](https://github.com/rails/rails/assets/1964376/c938bbde-54ee-480b-b295-6a91bdd8c7e7) |;;;;;
| There was no label indicating what the select does | ![a11y-guide-selector](https://github.com/rails/rails/assets/1964376/cfaf0501-516b-4ad3-bc30-d77701f01164) |;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [X] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-05T13:53:30Z,2024-04-07T15:35:24Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2226955930,Handle path_params gracefully when a user sends `?path_params=string`,""In some cases it's possible for `path_params` to be passed into `url_for` by an end-user of a rails app. Kaminari currently triggers this.";;;;;
;;;;;
"It's also currently inconvenient to write a test to ensure this doesn't happen. Passing `path_params: """"string""""` in a functional test crashes the test runner. (see [this example in a rails bug report template](https://github.com/rails/rails/compare/main...martinemde:rails:bug-report-path-params) that crashes.)";;;;;
;;;;;
A string value will cause a 500 error in rails internals. A hash `?path_params[inject]=string` can be used to inject a path_param into the url generation. However, I don't believe there is any vulnerability since path_params are lower priority than actual params and get ignored when there are no matches. Also, given that the very similar #39616 did not raise alarm bells, I'm not considering this a vulnerability. Still, it is probably good to scrub this key. A vulnerability once existed for a similar problem: https://github.com/advisories/GHSA-r5jw-62xg-j433;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
I was trying to fix a 500 caused by a security scan of rubygems.org. An unknown researcher sent a huge list of params to many pages, snipped here:;;;;;
;;;;;
![image](https://github.com/rails/rails/assets/989/84f481a9-dfc5-40dd-93e9-1ccacd445489);;;;;
;;;;;
This caused at least two 500 errors on rubygems.org, a minor annoyance but enough to potentially page someone on-call.;;;;;
;;;;;
I tracked the actual issue down to kaminari for which I opened https://github.com/kaminari/kaminari/pull/1123.;;;;;
;;;;;
While I think that this should be fixed in kaminari, I also think rails should fix this because it is somewhat difficult to write a test to ensure that this key is handled well. (see bug report template linked at top) ;;;;;
;;;;;
This PR also saves one hash allocation and one merge for every URL generate that doesn't have a `path_params:` key (most of them?), but the `option = option.dup` might negate most of the benefit (it could be reconfigured to save that dup, most likely).;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes `ActionDispatch::Journey::Formatter#generate` to only extract and merge path_params when it is a hash.;;;;;
;;;;;
This PR does not address in any way filtering `path_params`. I believe kaminari should do this. However, this addresses the crash when path_params is not a Hash and makes most url generations slightly more efficient. ;;;;;
;;;;;
### Additional information;;;;;
;;;;;
This is very similar to another fix by my colleague @simi submitted to rails, #39616, which I think also deserves attention for the same reason, if it is still applicable to current rails code.;;;;;
;;;;;
I'm also patching this on rubygems.org in the meantime so we don't get needless 500s.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [X] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-05T04:01:48Z,2024-04-05T16:48:09Z,[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}]""";;;;;
"2226911350,Use ActionController::TestCase in bug_report_template/action_controller.rb,""### Motivation / Background";;;;;
;;;;;
This Pull Request has been created because I was trying to submit a bug report and had to spend time getting the bug report template to work more like a functional test in rails.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes `guides/bug_report_template/action_controller.rb` to draw a route and use `ActionController::TestCase` to make testing easier.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-05T03:32:15Z,2024-04-05T03:32:49Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2226602219,Should Active Model's `ImmutableString` type observe the `limit` parameter?,""TL";DR: should `attribute :foobar, :string, limit: 30` chop the value to 30 characters?;;;;
;;;;;
`ActiveModel::Type::String` inherits;;;;;
`ActiveModel::Type::ImmutableString` inherits;;;;;
 `ActiveModel::Type::Value`  which accepts three `limit, scale, precision` options [but lets the base type decide what to do with them](https://api.rubyonrails.org/classes/ActiveModel/Type/Value.html#method-c-new).;;;;;
;;;;;
I was wondering whether it would make sense for the string types to interpret `limit` as a max length and chop on `cast` or `serialize`. I've got some custom initializer code at the moment which does:;;;;;
;;;;;
```rb;;;;;
class ActiveModel::Type::String;;;;;
  def cast(value);;;;;
    if @limit;;;;;
      super(value.to_s.first(@limit));;;;;
    else;;;;;
      super;;;;;
    end;;;;;
  end;;;;;
end;;;;;
 ```;;;;;
;;;;;
Which reuses the `ImmutableString#cast` logic and chops the value, not great but works well, well enough to ask the question here.;;;;;
;;;;;
What do people think? Happy to submit a PR if we can agree it's nice to have.;;;;;
;;;;;
"NOTE: `ActiveModel::Type::Integer` interprets `limit` as [the number of bytes to store the integer with](https://api.rubyonrails.org/classes/ActiveModel/Type/Integer.html), which makes the option a bit confusing. However, a `t.string :column_name, limit: 42` will effectively [limit the length of that string column in Active Record](https://api.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_column)."",2024-04-04T22:07:58Z,2024-04-06T06:57:37Z,""[{'id': 107190, 'node_id': 'MDU6TGFiZWwxMDcxOTA=', 'url': 'https://api.github.com/repos/rails/rails/labels/activemodel', 'name': 'activemodel', 'color': '00E5FF', 'default': False, 'description': None}]""";;;;;
"2224752118,Update Filter Attributes to perform exact matches instead of Fuzzy matches,""### Motivation / Background";;;;;
;;;;;
This Pull Request has been created because of a bug mentioned in #51254 wherein encrypting one attribute in a model filters out other similar matching attributes in inspect.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This PR makes the following changes:;;;;;
- Updates `filter_attributes` to exact regex matches instead of fuzzy matching;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-04T07:52:45Z,2024-04-06T12:55:46Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}, {'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2224488321,Fix textdecorator specificity on hovering in index [ci skip],""In the guides index section, the text-decorator and color are not showing properly on hovering. And the issue is causing because of the higher specificity. ";;;;;
![Screenshot 2024-04-04 at 10 26 58 AM](https://github.com/rails/rails/assets/22231095/2c36b760-594c-43c9-9991-f6318e279d4c);;;;;
;;;;;
![Screenshot 2024-04-04 at 10 17 39 AM](https://github.com/rails/rails/assets/22231095/03381990-fa57-4ce4-8d20-288477265470);;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request fixes the hovering style issue.;;;;;
![Screenshot 2024-04-04 at 9 06 11 AM](https://github.com/rails/rails/assets/22231095/7b34dec4-9f69-416a-b46b-172408e811df);;;;;
;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
;;;;;
cc/ @jathayde ;;;;;
",2024-04-04T04:50:13Z,2024-04-07T15:36:37Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2224165865,Add a Date decoder to the pg adapter ,""Fix #51448";;;;;
;;;;;
Add a Date decoder to the pg adapter to type cast dates at the connection level;;;;;
;;;;;
This would type cast columns of type `date` to ruby `Date` when running a raw query through `ActiveRecord::Base.connection.select_all`.;;;;;
;;;;;
Before:;;;;;
;;;;;
```ruby;;;;;
"ActiveRecord::Base.connection.select_value(""""select '2024-01-01'::date"""").class ";;;;;
#=> String;;;;;
```;;;;;
;;;;;
After:;;;;;
```ruby;;;;;
"ActiveRecord::Base.connection.select_value(""""select '2024-01-01'::date"""").class ";;;;;
#=>  Date ;;;;;
```;;;;;
;;;;;
;;;;;
While I don't think we'd want to to set a type cast expectation at this level (not all adapters have dates), this would brings the PG adapter to parity (for dates) with the Mysql2 adapter. ;;;;;
;;;;;
We already convert timestamp, it would makes sense to also convert dates. ;;;;;
;;;;;
I wasn't sure if I should add a test. I am thinking that a test sets an expectation about type casting at the adapter level. ;;;;;
This changes a public API, albeit a pretty low level one, but it seems like we don't test the other types either. I removed timestamps + float/numeric and all tests still pass. ;;;;;
;;;;;
I added a message in the changelog entry to make sure it doesn't burn anyone. ;;;;;
;;;;;
Unsure if we should merge this. Impact radius is large, but after digging into it and running the tests, it looks pretty benign.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-04T00:27:33Z,2024-04-04T00:29:16Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2224128597,Trix toolbar doesn't render correctly with Propshaft,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
;;;;;
```bash;;;;;
# In bash, get a new rails app setup using propshaft;;;;;
bin/rails new . -a propshaft;;;;;
bin/rails generate scaffold post title:string body:text;;;;;
;;;;;
# Install Action Text:;;;;;
bin/rails action_text:install;;;;;
bundle install;;;;;
bin/rails db:migrate;;;;;
;;;;;
#  post body is rich text;;;;;
cat << EOF > app/models/post.rb;;;;;
class Post < ApplicationRecord;;;;;
  has_rich_text :body;;;;;
end;;;;;
EOF;;;;;
;;;;;
# ensure it's a rich_text_area in the form;;;;;
sed -i 's/<%= form.text_area :body %>/<%= form.rich_text_area :body %>/' app/views/posts/_form.html.erb;;;;;
;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
http://localhost:3000/posts/new should render the text area with Trix toolbar.;;;;;
;;;;;
Here is what renders if I follow all the same steps above, but instead of `bin/rails new . -a propshaft`, just using `bin/rails new .`:;;;;;
;;;;;
![image](https://github.com/rails/rails/assets/1312348/e53bc1e9-a793-410d-a7cd-a779e10faa31);;;;;
;;;;;
;;;;;
;;;;;
### Actual behavior;;;;;
The toolbar is just HTML buttons.;;;;;
;;;;;
![image](https://github.com/rails/rails/assets/1312348/521a03ca-e8fe-4cd2-9bfa-adbc24f716e1);;;;;
;;;;;
I cannot figure out how to get it working in Propshaft.;;;;;
;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.3.0;;;;;
",2024-04-03T23:45:27Z,2024-04-04T15:31:10Z,[]
2224104767,Use devcontainer features for optional dependencies,### Motivation / Background";;;;;
;;;;;
We have created our own features for optional Rails dependencies needed for active storage, postgres and mysql. Features provide a bit better ergonomics for adding or removing these from the devcontainer, and previously we were always installing these dependencies via the devcontainer's dockerfile, whether the app was using them or not.;;;;;
;;;;;
### Detail;;;;;
;;;;;
With this change, when we generate the app, we just add the features we need to the `devcontainer.json`. And also, we swap features in and out as need when doing `db:system:change`.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-03T23:15:11Z,2024-04-03T23:31:28Z,[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2223710666,Don't preload Selenium browser when remote,""### Motivation / Background";;;;;
Fixes #50827 ;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request stops the preloading of the Selenium browser when the browser is remote.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] NA - Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] NA - CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-03T19:09:14Z,2024-04-03T19:20:04Z,[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}]""";;;;;
"2223231248,`validates_associated` does not work with `accepts_nested_attributes_for` for `has_many` associations,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
I have a model like this:;;;;;
```ruby;;;;;
class OrderLine < ApplicationRecord;;;;;
  has_many :order_line_resources;;;;;
  accepts_nested_attributes_for :order_line_resources;;;;;
  validates_associated :order_line_resources;;;;;
end;;;;;
```;;;;;
Which is associated to this model:;;;;;
```ruby;;;;;
class OrderLineResource < ApplicationRecord;;;;;
  belongs_to :order_line;;;;;
  validates :order_line_id, uniqueness: { scope: :resource_id };;;;;
end;;;;;
```;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
However, if I write something like this:;;;;;
```ruby;;;;;
order_line.update!(order_line_resources_attributes: [{ resource_id: 1 }, { resource_id: 1 }]);;;;;
```;;;;;
"I receive an error triggered by my unique index on database level: `ActiveRecord::RecordNotUnique: PG::UniqueViolation: ERROR:  duplicate key value violates unique constraint """"idx_order_line_resources_order_line_id_resource_id""""` but not the validation error I was expecting.";;;;;
;;;;;
### Expected behavior;;;;;
<!-- Tell us what should happen -->;;;;;
I would like to get a validation error from ActiveRecord directly (`ActiveRecord::RecordInvalid`) and not by my pg database.;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
The error is triggered on database level, so my app raises `ActiveRecord::RecordNotUnique: PG::UniqueViolation`;;;;;
;;;;;
### System configuration;;;;;
**Rails version**:;;;;;
7.1.3.2;;;;;
;;;;;
**Ruby version**:;;;;;
3.3.0;;;;;
;;;;;
I hope everything is clear! 🙂 ;;;;;
"Thanks a lot for your help and keep up the good work, Rails team, you're doing an amazing job! ✨ "",2024-04-03T15:24:52Z,2024-04-04T08:40:58Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 126910270, 'node_id': 'MDU6TGFiZWwxMjY5MTAyNzA=', 'url': 'https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps', 'name': 'With reproduction steps', 'color': '009800', 'default': False, 'description': None}]""";;;;;
"2223118248,""Fix """"no anonymous block parameter"""" in ruby 3.1"",""### Motivation / Background";;;;;
;;;;;
On;;;;;
ruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [x86_64-linux-gnu] (e.g. Ubuntu 23.10), simple rails commands fail with;;;;;
`no anonymous block parameter`:;;;;;
;;;;;
```;;;;;
vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:38:in `require': vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:190: no anonymous block parameter (SyntaxError);;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:38:in `<class:AbstractAdapter>';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:31:in `<module:ConnectionAdapters>';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:15:in `<module:ActiveRecord>';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:14:in `<top (required)>';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb:3:in `require';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb:3:in `<top (required)>';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters.rb:100:in `require';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters.rb:100:in `resolve';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/database_configurations/database_config.rb:18:in `adapter_class';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/database_configurations/database_config.rb:26:in `validate!';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract/connection_handler.rb:268:in `resolve_pool_config';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract/connection_handler.rb:116:in `establish_connection';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_handling.rb:53:in `establish_connection';;;;;
        from repro.rb:20:in `<main>';;;;;
;;;;;
```;;;;;
;;;;;
One file repro:;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
require 'bundler';;;;;
Bundler.configure;;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
;;;;;
```;;;;;
;;;;;
This Pull Request has been created to fix this issue.;;;;;
;;;;;
### Detail;;;;;
;;;;;
"I do not know why this triggers """"no anonymous block parameter"""", as the parameter is clearly there.";;;;;
It was introduced when a named parameter was added, without the named parameter the error does not occur.;;;;;
However, converting to a named block parameter fixes this issue.;;;;;
",2024-04-03T14:36:24Z,2024-04-06T19:34:45Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2221347874,ActiveSupport::OrderedOptions#respond_to?(:call) true - breaking check for callable objects,""`ActiveSupport::OrderedOptions` returns `true` for `.respond_to?(:call)`, which breaks various duck-type approach to detect callable objects. Example is pretty popular [carrierwave-aws gem](https://github.com/carrierwaveuploader/carrierwave-aws/?tab=readme-ov-file#usage) which checks if one of the options is callable by checking `respond_to?(:call)`. ";;;;;
There is no reason to return true for any possible key. OpenStruct also returns 'nil` for non-existing keys, but `respond_to?` only returns `true` for existing keys.;;;;;
On the other hand someone did it on purpose, otherwise why implement `respond_to_missing?` as hard-coded `true`, so I'm not sure if there was no higher design here.;;;;;
### Steps to reproduce;;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
```;;;;;
ActiveSupport::OrderedOptions.new.respond_to?(:call) # => true;;;;;
ActiveSupport::InheritableOptions.new.respond_to?(:call) # => true;;;;;
```;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails""""";;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"  # gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
end;;;;;
;;;;;
"require """"active_support""""";;;;;
"require """"active_support/core_ext/object/blank""""";;;;;
"require """"minitest/autorun""""";;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_ordered_options_respond_to;;;;;
    assert ActiveSupport::OrderedOptions.new.update(aaa: 1).respond_to?(:aaa);;;;;
    refute ActiveSupport::OrderedOptions.new.respond_to?(:call);;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
<!-- Tell us what should happen -->;;;;;
ActiveSupport::OrderedOptions.new.respond_to?(:call) # => should return false;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
ActiveSupport::OrderedOptions.new.respond_to?(:call) # => returns true;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.0.8.1;;;;;
**Ruby version**: 3.0.4;;;;;
",2024-04-02T19:59:36Z,2024-04-07T12:45:38Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}]""";;;;;
"2219772792,counter_cache doesn't work with composite PKs (revisited),""In the past I opened issue [#50968](https://github.com/rails/rails/issues/50968) about `counter_cache` not working with composite PKs. The corresponding PR fixed the error, but I still have a case in my codebase where I still get a different error.";;;;;
;;;;;
### Steps to reproduce;;;;;
;;;;;
Unfortunately I was not able to reproduce this with a script, so the script below does NOT reproduce the error. In any case, I am attaching it is because this is my mapping. The difference between my codebase and the script below is that I am running against Postgres, however I don't see how that could play a role.;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :test_background_check_requests, force: true do |t|;;;;;
    t.integer :candidate_id;;;;;
    t.integer :account_id;;;;;
    t.string :name;;;;;
  end;;;;;
;;;;;
  create_table :test_candidates, force: true, primary_key: %i[candidate_id account_id] do |t|;;;;;
    t.integer :candidate_id;;;;;
    t.integer :account_id;;;;;
    t.integer :test_background_check_requests_count;;;;;
    t.string :name;;;;;
  end;;;;;
end;;;;;
;;;;;
class TestCandidate < ActiveRecord::Base;;;;;
  self.primary_key = %i[candidate_id account_id];;;;;
  has_many :test_background_check_requests, query_constraints: [:candidate_id, :account_id], inverse_of: :test_candidate;;;;;
end;;;;;
;;;;;
class TestBackgroundCheckRequest < ActiveRecord::Base;;;;;
  belongs_to :test_candidate, counter_cache: true, query_constraints: [:candidate_id, :account_id];;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_association_stuff;;;;;
"    test_candidate = TestCandidate.create!(candidate_id: 1, account_id: 1, name: """"Foo Barson"""")";;;;;
"    test_candidate.test_background_check_requests.create!(candidate_id: 1, account_id: 1, name: """"Background check request 1"""")";;;;;
;;;;;
    assert_equal 1, TestBackgroundCheckRequest.count;;;;;
    assert_equal 1, test_candidate.reload.test_background_check_requests_count;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
I was expecting the creation to take place correctly, and the counter to increase.;;;;;
;;;;;
### Actual behavior;;;;;
I am getting the following exception:;;;;;
;;;;;
```;;;;;
"Minitest::UnexpectedError: ArgumentError: Expected corresponding value for [""""id"""", """"account_id""""] to be an Array";;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:82:in `block (2 levels) in expand_from_hash';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:81:in `map';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:81:in `block in expand_from_hash';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:79:in `each';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:79:in `flat_map';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:79:in `expand_from_hash';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:25:in `build_from_hash';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/query_methods.rb:1526:in `build_where_clause';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/query_methods.rb:943:in `where!';;;;;
    activerecord (7.1.3.2) lib/active_record/counter_cache.rb:115:in `update_counters';;;;;
    activerecord (7.1.3.2) lib/active_record/locking/optimistic.rb:182:in `update_counters';;;;;
    activerecord (7.1.3.2) lib/active_record/persistence.rb:974:in `increment!';;;;;
    activerecord (7.1.3.2) lib/active_record/locking/optimistic.rb:64:in `increment!';;;;;
    activerecord (7.1.3.2) lib/active_record/callbacks.rb:436:in `increment!';;;;;
    activerecord (7.1.3.2) lib/active_record/associations/has_many_association.rb:100:in `update_counter';;;;;
    activerecord (7.1.3.2) lib/active_record/associations/has_many_association.rb:122:in `delete_or_nullify_all_records';;;;;
    activerecord (7.1.3.2) lib/active_record/associations/collection_association.rb:161:in `delete_all';;;;;
    activerecord (7.1.3.2) lib/active_record/associations/collection_proxy.rb:475:in `delete_all';;;;;
    test/services/candidates/copier_base_test.rb:602:in `block in <class:CopierBaseTest>';;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: ;;;;;
7.1.3.2 (branch `7-1-stable`);;;;;
;;;;;
**Ruby version**: ;;;;;
3.2.2;;;;;
",2024-04-02T07:31:16Z,2024-04-03T22:56:59Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 1071962662, 'node_id': 'MDU6TGFiZWwxMDcxOTYyNjYy', 'url': 'https://api.github.com/repos/rails/rails/labels/more-information-needed', 'name': 'more-information-needed', 'color': 'bfdadc', 'default': False, 'description': 'When reporter needs to provide more information'}]""";;;;;
"2219541327,[Fix #51463] Raise an error when invalid `:on` or `:except` options are given to `#resource` or `#resources`,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Fixes https://github.com/rails/rails/issues/51463.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Raises an `ArgumentError` when a `ActionDispatch::Routing::Mapper::Resources::Resource` is initalized with `:on` or `:except` options that aren't default (index, create, new, show, update, and destroy) actions .;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
See my comment below as to why this seems like more changes than it needs to be.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-02T04:30:58Z,2024-04-04T09:38:53Z,[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}]""";;;;;
"2219534455,`#resource` and `#resources` fail quietly and succeed quietly when invalid arguments are passed to `:only` and `:except` options respectively,""This came up when pairing with a dev who is newish to Rails. They assumed that passing a custom action argument to `:only` when using `#resources` would auto-magically define a route for it with some defaults. Reading the examples in the documentation for these methods, it's not clear (especially to beginners) what all the accepted arguments for these options are, [there are only examples using default actions](https://www.rubydoc.info/docs/rails/ActionDispatch%2FRouting%2FMapper%2FResources:resources).";;;;;
;;;;;
I think it would be beneficial if an error was raised if invalid arguments are passed in.;;;;;
;;;;;
### Steps to reproduce;;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
end;;;;;
;;;;;
"require """"action_controller/railtie""""";;;;;
;;;;;
class TestApp < Rails::Application;;;;;
  config.root = __dir__;;;;;
"  config.hosts << """"example.org""""";;;;;
"  config.secret_key_base = """"secret_key_base""""";;;;;
;;;;;
  config.logger = Logger.new($stdout);;;;;
  Rails.logger  = config.logger;;;;;
end;;;;;
;;;;;
"require """"minitest/autorun""""";;;;;
"require """"rack/test""""";;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  include Rack::Test::Methods;;;;;
;;;;;
  def test_invalid_resources_only_option;;;;;
    assert_raises(ArgumentError) do # ❌ fails quietly, no routes generated;;;;;
      app.routes.draw do;;;;;
        resources :posts, only: :foo;;;;;
      end;;;;;
;;;;;
      # => routes: [];;;;;
"      Rails.logger.info(""""routes: #{app.routes.routes.map { |r| r.defaults[:action] }}"""")";;;;;
    end;;;;;
  end;;;;;
;;;;;
  def test_invalid_resources_except_option;;;;;
    assert_raises(ArgumentError) do # ❌ succeeds quietly, all default routes generated;;;;;
      app.routes.draw do;;;;;
        resources :posts, except: :foo;;;;;
      end;;;;;
;;;;;
"      # => routes: [""""index"""", """"create"""", """"new"""", """"edit"""", """"show"""", """"update"""", """"update"""", """"destroy""""]";;;;;
"      Rails.logger.info(""""routes: #{app.routes.routes.map { |r| r.defaults[:action] }}"""")";;;;;
    end;;;;;
  end;;;;;
;;;;;
  private;;;;;
    def app;;;;;
      Rails.application;;;;;
    end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
<!-- Tell us what should happen -->;;;;;
;;;;;
Passing invalid options to `:only` or `:except` should raise an error with an informative message.;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
;;;;;
Passing invalid options to `:only` fails quietly and no routes are generated.;;;;;
Passing invalid arguments to `:except` succeeds quietly and all default routes are generated (index, create, new, show, update, and destroy).;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: Edge;;;;;
;;;;;
"**Ruby version**: 3.3.0"",2024-04-02T04:24:01Z,2024-04-02T11:17:11Z,[]";;;;;
"2219354900,Fix inline habtm fixtures for tables with composite primary keys,Fixes https://github.com/rails/rails/issues/51461.,2024-04-02T00:43:32Z,2024-04-02T00:43:37Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2218168973,Composite PKs break fixture loading for many-to-many associations,""### Steps to reproduce";;;;;
;;;;;
Copy the following fixture files in a directory:;;;;;
;;;;;
**posts.yml**;;;;;
```yaml;;;;;
one:;;;;;
"    title: """"My first post""""";;;;;
    account_id: 1;;;;;
    labels: one, two;;;;;
```;;;;;
**labels.yml**;;;;;
```yaml;;;;;
one:;;;;;
"    text: """"Label 1""""";;;;;
two:;;;;;
"    text: """"Label 2""""";;;;;
```;;;;;
;;;;;
and use them here:;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails""""";;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"  # gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
;;;;;
  create_table :posts, force: true, primary_key: %i[id account_id] do |t|;;;;;
    t.integer :id;;;;;
    t.integer :account_id;;;;;
    t.string :title;;;;;
  end;;;;;
;;;;;
  create_table :posts_labels, force: true do |t|;;;;;
    t.integer :post_id;;;;;
    t.integer :account_id;;;;;
    t.references :label, foreign_key: true;;;;;
  end;;;;;
;;;;;
  create_table :labels, force: true do |t|;;;;;
    t.string :text;;;;;
  end;;;;;
end;;;;;
;;;;;
class Post < ActiveRecord::Base;;;;;
  self.primary_key = %i[id account_id];;;;;
  has_many :posts_labels;;;;;
  has_many :labels, through: :posts_labels;;;;;
end;;;;;
;;;;;
class PostsLabel < ActiveRecord::Base;;;;;
  belongs_to :post, query_constraints: [:post_id, :account_id];;;;;
  belongs_to :label;;;;;
end;;;;;
;;;;;
class Label < ActiveRecord::Base;;;;;
  has_many :posts_labels;;;;;
  has_many :posts, through: :posts_labels;;;;;
end;;;;;
;;;;;
# Load the fixtures into the database (update the directory);;;;;
"ActiveRecord::FixtureSet.create_fixtures(""""/fixtures-directory/"""", %w[posts labels])";;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_association_stuff;;;;;
    assert_equal 1, Post.count;;;;;
    assert_equal 2, Label.count;;;;;
    assert_equal 2, Post.first.labels.count # Fails here;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
According to the documentation of [ActiveRecord::FixtureSet](https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html), the fixture for the intermediate many-to-many table [can be skipped](https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html#:~:text=Let%E2%80%99s%20make%20the%20HABTM%20fixture%20go%20away.).;;;;;
;;;;;
### Actual behavior;;;;;
The fixtures are not loaded correctly. These are the sql statements for the fixtures (notice the `null`):;;;;;
;;;;;
```sql;;;;;
"DELETE FROM """"posts""""";;;;;
"DELETE FROM """"posts_labels""""";;;;;
"DELETE FROM """"labels""""";;;;;
"INSERT INTO """"posts"""" (""""id"""", """"account_id"""", """"title"""") VALUES (980190962, 1, 'My first post')";;;;;
"INSERT INTO """"posts_labels"""" (""""post_id"""", """"label_id"""") VALUES (NULL, 980190962)";;;;;
"INSERT INTO """"posts_labels"""" (""""post_id"""", """"label_id"""") VALUES (NULL, 298486374)";;;;;
"INSERT INTO """"labels"""" (""""id"""", """"text"""") VALUES (980190962, 'Label 1')";;;;;
"INSERT INTO """"labels"""" (""""id"""", """"text"""") VALUES (298486374, 'Label 2')";;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: `7.1.3.2`;;;;;
;;;;;
**Ruby version**: `3.2.2`;;;;;
",2024-04-01T12:30:45Z,2024-04-02T06:41:43Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 126910270, 'node_id': 'MDU6TGFiZWwxMjY5MTAyNzA=', 'url': 'https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps', 'name': 'With reproduction steps', 'color': '009800', 'default': False, 'description': None}]""";;;;;
"2217292282,New print styles and generator to add to build,""";;;;;
"<img width=""""958"""" alt=""""Screenshot 2024-03-31 at 8 43 35 PM"""" src=""""https://github.com/rails/rails/assets/2223/995815e6-1d34-4550-b49c-c7a78e213cc1"""">";;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
This updates print CSS to be more inline with the overall style. The sidebar is inlined (same as mobile), and content is 100%. Previous code in the launch from boilerplate has been struck or integrated better.;;;;;
;;;;;
* Links show in text after the original link text;;;;;
* Border line around code and copy button are removed;;;;;
* Print is now generated from SCSS to CSS via the generator that builds the other CSS files ;;;;;
;;;;;
### Additional information;;;;;
;;;;;
Some browsers will override backgrounds on print;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-01T00:58:28Z,2024-04-01T14:57:32Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2217108029,Add `touch` option to `#update_columns` and `#update_column` methods,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
I've created this Pull Request because not all ActiveRecord persistence methods affect timestamps or have a touch option. This can be problematic, especially when there is some ETL processing that relies on the `updated_at` timestamps instead of copying the whole table. For instance, if someone uses `#update_columns` for performance reasons, it may result in lost updates. This is particularly an issue for `#update_column`. If a user wants to keep timestamps current, they have to explicitly call the `#touch` method after using `#update_column`.;;;;;
;;;;;
Examples:;;;;;
```ruby;;;;;
# we don't want to perform any callbacks or validations here so use #update_columns;;;;;
current_user.update_columns(;;;;;
  last_ip: request.remote_ip,;;;;;
  updated_at: Time.current # but we still want to keep track of the last changes, so have to provide a timestamp explicitly;;;;;
);;;;;
```;;;;;
;;;;;
```ruby;;;;;
current_user.update_column(:last_ip, request.remote_ip);;;;;
current_user.touch;;;;;
```;;;;;
;;;;;
Rails discussion: https://discuss.rubyonrails.org/t/proposal-add-touch-option-for-update-columns-update-column/85388;;;;;
;;;;;
### Detail;;;;;
;;;;;
This PR adds a `touch` option to the `#update_columns` and `#update_column` methods.;;;;;
The option allows to update `updated_at`/`updated_on` attributes with ;;;;;
;;;;;
```ruby;;;;;
    person.update_columns(name: 'John Doe', touch: true);;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-31T17:50:27Z,2024-04-03T09:44:15Z,[{'id': 107190, 'node_id': 'MDU6TGFiZWwxMDcxOTA=', 'url': 'https://api.github.com/repos/rails/rails/labels/activemodel', 'name': 'activemodel', 'color': '00E5FF', 'default': False, 'description': None}, {'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2216178575,Action Cable Guide - add Transmit method,""### Motivation / Background";;;;;
;;;;;
I was exploring making use of Action Cables for a project I was working on, and didn't find any mention of the `transmit` method of channels, which allows you to transmit data to the specific subscriber that initiated the interaction.;;;;;
;;;;;
As someone relatively new to Rails and entirely new to Action Cables I spun my wheels for a bit trying to figure out how interactions like this should be handled, and I was surprised to see the method wasn't even mentioned in the guide on Action Cables.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Documentation PR;;;;;
;;;;;
This Pull Request updates the Action Cable guide to add information on the existence of the `transmit` method, allowing channels to send data to a specific subscriber.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-30T03:23:34Z,2024-03-31T05:19:57Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2215236766,Postgresql date type is not properly typecasted when using direct SQL queries like select_all,""When using direct SQL query, the date is not properly typecasted on Postgresql:";;;;;
```;;;;;
"> ActiveRecord::Base.connection.select_all(""""  SELECT '2024-01-01'::date """")";;;;;
   (0.5ms)    SELECT '2024-01-01'::date;;;;;
  ↳ config/initializers/local.rb:52:in `sa';;;;;
=> #<ActiveRecord::Result:0x0000000115516010;;;;;
 @column_types=;;;;;
  {0=>#<ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Date:0x0000000116a5acf0 @limit=nil, @precision=nil, @scale=nil, @timezone=nil>,;;;;;
"   """"date""""=>#<ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Date:0x0000000116a5acf0 @limit=nil, @precision=nil, @scale=nil, @timezone=nil>},";;;;;
" @columns=[""""date""""],";;;;;
 @hash_rows=nil,;;;;;
" @rows=[[""""2024-01-01""""]]>";;;;;
```;;;;;
;;;;;
### Notes;;;;;
;;;;;
* The column type seems to be recognized correctly, but typecast is not applied;;;;;
* SQLite seems to generate even worth result like `2024` as integer.;;;;;
* Timestamp doesn't have this problem;;;;;
;;;;;
### Reproduce;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
require 'bundler/inline';;;;;
;;;;;
gemfile(true) do;;;;;
  source 'https://rubygems.org';;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
  gem 'rails';;;;;
;;;;;
  gem 'pg';;;;;
  # gem 'sqlite3';;;;;
end;;;;;
;;;;;
require 'active_record';;;;;
require 'minitest/autorun';;;;;
require 'logger';;;;;
;;;;;
# `CREATE DATABASE rails_51428_test;`;;;;
ActiveRecord::Base.establish_connection(adapter: 'postgresql', database: 'rails_test');;;;;
# ActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:');;;;;
ActiveRecord::Base.logger = Logger.new($stdout);;;;;
;;;;;
;;;;;
class DateTest < Minitest::Test;;;;;
  def test_stuff;;;;;
    value = ActiveRecord::Base.connection.select_value(;;;;;
"      """"select cast('2024-01-01' as date)""""";;;;;
    );;;;;
    assert_equal Date.new(2024, 01, 01), value;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
```;;;;;
Expected: Mon, 01 Jan 2024;;;;;
"  Actual: """"2024-01-01""""";;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3;;;;;
;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-29T12:13:51Z,2024-04-05T17:17:41Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 70310659, 'node_id': 'MDU6TGFiZWw3MDMxMDY1OQ==', 'url': 'https://api.github.com/repos/rails/rails/labels/PostgreSQL', 'name': 'PostgreSQL', 'color': 'fbca04', 'default': False, 'description': None}]""";;;;;
"2214734569,Fix an error for `apply_rubocop_autocorrect_after_generate!` with `--pretend`,""## Motivation / Background";;;;;
;;;;;
An issue was identified where an error occurs when executing `apply_rubocop_autocorrect_after_generate!` with `--pretend` option, according to feedback from https://github.com/rubocop/rubocop-rails/pull/1263.;;;;;
;;;;;
## Details;;;;;
;;;;;
This PR fixes the following error when executing `apply_rubocop_autocorrect_after_generate!` with `--pretend` option:;;;;;
;;;;;
```console;;;;;
$ bin/rails g migration create_users -p;;;;;
```;;;;;
;;;;;
### Before;;;;;
;;;;;
An `Errno::ENOENT` error occurs:;;;;;
;;;;;
```console;;;;;
invoke  active_record;;;;;
create    db/migrate/20240329060627_create_users.rb;;;;;
/Users/koic/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/bundler/gems/rails-8e46af8c9396/railties/lib/rails/configuration.rb:138:in;;;;;
`system': No such file or directory - bin/rubocop (Errno::ENOENT);;;;;
```;;;;;
;;;;;
### After;;;;;
;;;;;
No errors.;;;;;
;;;;;
## Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-29T06:17:20Z,2024-03-30T10:23:42Z,[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2214519753,Remove node_modules from the final image,,2024-03-29T02:55:34Z,2024-04-01T03:46:51Z,""[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2214042050,Emit deprecation warning about inverse_of inference only for valid reflections,""### Motivation / Background";;;;;
;;;;;
This is a small follow-up to https://github.com/rails/rails/pull/50883. ;;;;;
;;;;;
As we went through all deprecation warnings while we run Rails edge with;;;;;
```ruby;;;;;
config.active_record.automatically_invert_plural_associations = false;;;;;
```;;;;;
we realised that we had warnings for an inferred reflection that would be wrong to infer. Digging deeper into whether this meant that enabling `automatically_invert_plural_associations` would actually mean we'd have completely wrong values in the collection of the inferred association, we realised that no, the reflection was correctly not inferred. However, the warning was emitted regardless. ;;;;;
;;;;;
This happens because the deprecation warning is emitted without checking whether the found `reflection` is valid. The warning says that the inverse association could have been automatically inferred but wasn't because `automatically_invert_plural_associations` is disabled. However, this is not true, because later on, when we check whether the reflection is valid, we see it's not, and end up returning `nil`.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This pull request just adds the `valid_inverse_reflection?(reflection)` condition to determine whether the deprecation warning needs to happen. That already checks that `reflection` is truthy. ;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-28T20:11:38Z,2024-03-29T06:35:20Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2213953232,Make it possible to opt-out of sending Link header in `preload_link_tag`,""This commit adds a `preload_links_header` option to `preload_link_tag` to disable sending of the Link header in the HTTP response.";;;;;
;;;;;
Currently `ActionView::Helpers::AssetTagHelper.preload_links_header` only controls whether `javascript_include_tag` and `stylesheet_link_tag` send the Link header, but there is no way to control the behavior of `preload_link_tag`. We could just check that variable, but existing applications might be relying on `preload_link_tag` to add the header. Users also might want control over this on a per call basis.;;;;;
;;;;;
Closes #51436;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-28T19:18:46Z,2024-03-28T21:03:36Z,[{'id': 3666649, 'node_id': 'MDU6TGFiZWwzNjY2NjQ5', 'url': 'https://api.github.com/repos/rails/rails/labels/actionview', 'name': 'actionview', 'color': 'd7e102', 'default': False, 'description': None}]""";;;;;
"2213933174,Bump mysql2 to fix build error with mysql-client 8.3,""### Motivation / Background";;;;;
;;;;;
This fixes bundle install when using the latest version of mysql-client, 8.3;;;;;
;;;;;
### Detail;;;;;
;;;;;
<details>;;;;;
<summary>Sample installation log</summary>;;;;;
;;;;;
```;;;;;
bundle install;;;;;
Fetching gem metadata from https://rubygems.org/.........;;;;;
Installing mysql2 0.5.5 with native extensions;;;;;
Gem::Ext::BuildError: ERROR: Failed to build gem native extension.;;;;;
;;;;;
    current directory: /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/mysql2-0.5.5/ext/mysql2;;;;;
/Users/josh/.rbenv/versions/3.3.0/bin/ruby extconf.rb;;;;;
checking for rb_absint_size()... yes;;;;;
checking for rb_absint_singlebit_p()... yes;;;;;
checking for rb_gc_mark_movable()... yes;;;;;
checking for rb_wait_for_single_fd()... yes;;;;;
checking for rb_enc_interned_str() in ruby.h... yes;;;;;
-----;;;;;
Using --with-openssl-dir=/opt/homebrew/opt/openssl@3;;;;;
-----;;;;;
-----;;;;;
Using mysql_config at /opt/homebrew/bin/mysql_config;;;;;
-----;;;;;
checking for mysql.h... yes;;;;;
checking for errmsg.h... yes;;;;;
checking for SSL_MODE_DISABLED in mysql.h... yes;;;;;
checking for SSL_MODE_PREFERRED in mysql.h... yes;;;;;
checking for SSL_MODE_REQUIRED in mysql.h... yes;;;;;
checking for SSL_MODE_VERIFY_CA in mysql.h... yes;;;;;
checking for SSL_MODE_VERIFY_IDENTITY in mysql.h... yes;;;;;
checking for MYSQL.net.vio in mysql.h... yes;;;;;
checking for MYSQL.net.pvio in mysql.h... no;;;;;
checking for MYSQL_DEFAULT_AUTH in mysql.h... yes;;;;;
checking for MYSQL_ENABLE_CLEARTEXT_PLUGIN in mysql.h... yes;;;;;
checking for SERVER_QUERY_NO_GOOD_INDEX_USED in mysql.h... yes;;;;;
checking for SERVER_QUERY_NO_INDEX_USED in mysql.h... yes;;;;;
checking for SERVER_QUERY_WAS_SLOW in mysql.h... yes;;;;;
checking for MYSQL_OPTION_MULTI_STATEMENTS_ON in mysql.h... yes;;;;;
checking for MYSQL_OPTION_MULTI_STATEMENTS_OFF in mysql.h... yes;;;;;
checking for my_bool in mysql.h... no;;;;;
-----;;;;;
Don't know how to set rpath on your system, if MySQL libraries are not in path mysql2 may not load;;;;;
-----;;;;;
-----;;;;;
Setting libpath to /opt/homebrew/Cellar/mysql/8.3.0/lib;;;;;
-----;;;;;
creating Makefile;;;;;
;;;;;
current directory: /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/mysql2-0.5.5/ext/mysql2;;;;;
make DESTDIR\= sitearchdir\=./.gem.20240328-28015-xyw7df sitelibdir\=./.gem.20240328-28015-xyw7df clean;;;;;
;;;;;
current directory: /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/mysql2-0.5.5/ext/mysql2;;;;;
make DESTDIR\= sitearchdir\=./.gem.20240328-28015-xyw7df sitelibdir\=./.gem.20240328-28015-xyw7df;;;;;
compiling client.c;;;;;
In file included from client.c:15:;;;;;
./mysql_enc_name_to_ruby.h:43:1: warning: a function definition without a prototype is deprecated in all versions of C and is;;;;;
not supported in C2x [-Wdeprecated-non-prototype];;;;;
mysql2_mysql_enc_name_to_rb_hash (str, len);;;;;
^;;;;;
./mysql_enc_name_to_ruby.h:86:1: warning: a function definition without a prototype is deprecated in all versions of C and is;;;;;
not supported in C2x [-Wdeprecated-non-prototype];;;;;
mysql2_mysql_enc_name_to_rb (str, len);;;;;
^;;;;;
client.c:1438:3: error: call to undeclared function 'mysql_ssl_set'; ISO C99 and later do not support implicit function;;;;
declarations [-Wimplicit-function-declaration];;;;;
  mysql_ssl_set(wrapper->client,;;;;;
  ^;;;;;
client.c:1438:3: note: did you mean 'mysql_close'?;;;;;
/opt/homebrew/Cellar/mysql/8.3.0/include/mysql/mysql.h:797:14: note: 'mysql_close' declared here;;;;;
void STDCALL mysql_close(MYSQL *sock);;;;;
             ^;;;;;
2 warnings and 1 error generated.;;;;;
make: *** [client.o] Error 1;;;;;
;;;;;
make failed, exit code 2;;;;;
;;;;;
Gem files will remain installed in /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/mysql2-0.5.5 for inspection.;;;;;
Results logged to;;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/extensions/arm64-darwin-23/3.3.0/mysql2-0.5.5/gem_make.out;;;;;
;;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:125:in `run';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:51:in `block in make';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:43:in `each';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:43:in `make';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/ext_conf_builder.rb:42:in `build';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:193:in `build_extension';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:227:in `block in build_extensions';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:224:in `each';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:224:in `build_extensions';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/installer.rb:852:in `build_extensions';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/rubygems_gem_installer.rb:76:in;;;;;
`build_extensions';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/rubygems_gem_installer.rb:28:in;;;;;
`install';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/source/rubygems.rb:205:in `install';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/installer/gem_installer.rb:54:in;;;;;
`install';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/installer/gem_installer.rb:16:in;;;;;
`install_from_spec';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/installer/parallel_installer.rb:132:in;;;;;
`do_install';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/installer/parallel_installer.rb:123:in;;;;;
`block in worker_pool';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/worker.rb:62:in `apply_func';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/worker.rb:57:in `block in;;;;;
process_queue';;;;;
  <internal:kernel>:187:in `loop';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/worker.rb:54:in `process_queue';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/worker.rb:90:in `block (2 levels) in;;;;;
create_threads';;;;;
;;;;;
An error occurred while installing mysql2 (0.5.5), and Bundler cannot continue.;;;;;
;;;;;
In Gemfile:;;;;;
  mysql2;;;;;
```;;;;;
;;;;;
</details>;;;;;
;;;;;
### Additional information;;;;;
;;;;;
- [GitHub Issue in mysql2](https://github.com/brianmario/mysql2/issues/1346);;;;;
- [0.5.6 release notes listing the fix](https://github.com/brianmario/mysql2/releases/tag/0.5.6);;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] n/a - Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] n/a - CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-28T19:05:52Z,2024-03-28T19:55:23Z,[]
2213880505,Disable send_preload_links_header outright,### Steps to reproduce";;;;;
;;;;;
Suppose you have a partial like this:;;;;;
;;;;;
```haml;;;;;
= cache([ActionController::Base.asset_host], expires_in: 1.minute) do;;;;;
    = preload_link_tag(path_to_stylesheet('application');;;;;
```;;;;;
;;;;;
If the partial is not cached, then `preload_link_tag` will call `send_preload_links_header`, which modifies the `Link` HTTP header.;;;;;
;;;;;
However, if the partial is cached, then the `Link` HTTP header is not sent.;;;;;
;;;;;
This is a surprising side effect of caching `preload_link_tag`. I was surprised that `send_preload_links_header` is even called in the first place.;;;;;
;;;;;
https://github.com/rails/rails/pull/48405 lowered the max header size from 8K to 1000 bytes, but I think Rails should go farther than that: provide an option to disable this sending altogether, perhaps as an argument to `preload_link_tag`. For example:;;;;;
;;;;;
```diff;;;;;
diff --git a/actionview/lib/action_view/helpers/asset_tag_helper.rb b/actionview/lib/action_view/helpers/asset_tag_helper.rb;;;;;
index 11528eb33d..0dd3ff517a 100644;;;;;
#NOM?;;;;;
#NOM?;;;;;
@@ -325,6 +325,7 @@ def preload_link_tag(source, options = {});;;;;
"         crossorigin = """"anonymous"""" if crossorigin == true || (crossorigin.blank? && as_type == """"font"""")";;;;;
         integrity = options[:integrity];;;;;
         nopush = options.delete(:nopush) || false;;;;;
+        send_link_header = options.key?(:preload_links_header) ? options.delete(:preload_links_header) : true;;;;;
"         rel = mime_type == """"module"""" ? """"modulepreload"""" : """"preload""""";;;;;
 ;;;;;
         link_tag = tag.link(**{;;;;;
@@ -341,7 +342,7 @@ def preload_link_tag(source, options = {});;;;;
"         preload_link += """"";" integrity=#{integrity}"""" if integrity";;;;
"         preload_link += """"";" nopush"""" if nopush";;;;
 ;;;;;
-        send_preload_links_header([preload_link]);;;;;
+        send_preload_links_header([preload_link]) if send_link_header;;;;;
 ;;;;;
         link_tag;;;;;
       end;;;;;
diff --git a/actionview/test/template/asset_tag_helper_test.rb b/actionview/test/template/asset_tag_helper_test.rb;;;;;
index f0c8a10f57..cd6cdd8925 100644;;;;;
#NOM?;;;;;
#NOM?;;;;;
@@ -628,6 +628,13 @@ def test_should_set_preload_early_hints_with_rel_modulepreload;;;;;
     end;;;;;
   end;;;;;
 ;;;;;
#NOM?;;;;;
#NOM?;;;;;
"+      preload_link_tag(""""http://example.com/all.js"""", type: """"module"""", preload_links_header: false)";;;;;
"+      assert_nil @response.headers[""""Link""""]";;;;;
#NOM?;;;;;
#NOM?;;;;;
+;;;;;
   def test_should_set_preload_links_with_integrity_hashes;;;;;
     with_preload_links_header do;;;;;
"       stylesheet_link_tag(""""http://example.com/style.css"""", integrity: """"sha256-AbpHGcgLb+kRsJGnwFEktk7uzpZOCcBY74+YBdrKVGs"""")";;;;;
```;;;;;
;;;;;
",2024-03-28T18:33:40Z,2024-03-28T21:07:42Z,[{'id': 3666649, 'node_id': 'MDU6TGFiZWwzNjY2NjQ5', 'url': 'https://api.github.com/repos/rails/rails/labels/actionview', 'name': 'actionview', 'color': 'd7e102', 'default': False, 'description': None}, {'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}]""";;;;;
"2213548177,[RF-DOCS] Action View Overview Guide [ci-skip],""## Motivation / Background";;;;;
;;;;;
This Pull Request is for updating and improving the Action View Overview guide. ;;;;;
;;;;;
Note: This guide was intertwined with a different guide (Layouts and Rendering) with duplicate content and overlapping concepts. A follow-on PR will focus on the other guide and then we will do a pass over both guides together.;;;;;
;;;;;
## Details;;;;;
;;;;;
#NOM?;;;;;
#NOM?;;;;;
#NOM?;;;;;
#NOM?;;;;;
;;;;;
## Testing;;;;;
;;;;;
- [x] Run `guides:generate`;;;;;
- [x] Run `guides:lint` ;;;;;
"- [x] Run rubocop on code samples"",2024-03-28T15:41:52Z,2024-04-06T01:04:57Z,""[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2213456024,[Bug][ActiveRecord] #count(:all) on grouped query should clear ORDER BY if it clears SELECT,""### Steps to reproduce";;;;;
;;;;;
"Build a query that uses `.count(:all)` and `.group(...)` with a custom `.select(""""... AS alias"""")` and a `.order(:alias)`";;;;;
;;;;;
It seems ActiveRecord when calling `.count(:all)` will remove from the SELECT the `alias` column and everything else but the primary key, however it keeps the `ORDER BY alias`. To execute `COUNT(...)`, the `ORDER BY` is kind of irrelevant, it should probably be removed.;;;;;
;;;;;
ActiveRecord seems to already clear ORDER BY for some specific scenario as seen here: https://github.com/rails/rails/blob/main/activerecord/lib/active_record/relation/calculations.rb#L240 however in my scenario, the `has_include(...)` returns false and goes straight to `perform_calculation(operation, column_name)`;;;;;
;;;;;
Here https://github.com/rails/rails/blob/main/activerecord/lib/active_record/relation/calculations.rb#L536 select values are redefined, maybe we should simply add;;;;;
;;;;;
```;;;;;
relation.order_values = [];;;;;
```;;;;;
;;;;;
;;;;;
**Test code**;;;;;
;;;;;
Note: It ain't specific to Postgres. Error is present with SQLite too.;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
# Toggle this to test with SQLite;;;;;
use_postgres = false;;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", """"7.1.3.2""""";;;;;
;;;;;
"  gem """"database_cleaner""""";;;;;
;;;;;
  if use_postgres;;;;;
"    gem """"pg""""";;;;;
  else ;;;;;
"    gem """"sqlite3""""";;;;;
  end;;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
"require """"database_cleaner""""";;;;;
;;;;;
if use_postgres;;;;;
"  ActiveRecord::Base.establish_connection(adapter: """"postgresql"""", host: """"localhost"""", database: """"dev"""", username: """"dev"""",";;;;;
"  password: """"dev"""", port: 5437)";;;;;
else;;;;;
"  ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
end;;;;;
;;;;;
ActiveRecord::Base.logger = Logger.new($stdout);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :conversations, force: true do |t| # rubocop:disable Style/SymbolProc;;;;;
    t.timestamps;;;;;
  end;;;;;
;;;;;
  create_table :messages, force: true do |t|;;;;;
    t.references :conversation;;;;;
    t.timestamps;;;;;
  end;;;;;
end;;;;;
;;;;;
class Conversation < ActiveRecord::Base # rubocop:disable Rails/ApplicationRecord;;;;;
  has_many :messages, dependent: :destroy;;;;;
end;;;;;
;;;;;
class Message < ActiveRecord::Base # rubocop:disable Rails/ApplicationRecord;;;;;
  belongs_to :conversation;;;;;
end;;;;;
;;;;;
DatabaseCleaner.strategy = :truncation;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  class SuccessException < StandardError; end;;;;
;;;;;
  def setup;;;;;
    DatabaseCleaner.start;;;;;
    Conversation.create!.tap do |conversation|;;;;;
      Message.create!(conversation: conversation);;;;;
      Message.create!(conversation: conversation);;;;;
      Message.create!(conversation: conversation);;;;;
    end;;;;;
  end;;;;;
  ;;;;;
  def teardown;;;;;
    DatabaseCleaner.clean;;;;;
  end;;;;;
;;;;;
  def assert_not_raise(&block);;;;;
    assert_raises(SuccessException) do;;;;;
      block.call;;;;;
      raise SuccessException;;;;;
    end;;;;;
  end;;;;;
;;;;;
  def sql_now;;;;;
"    if ActiveRecord::Base.connection_db_config.adapter == """"sqlite3""""";;;;;
"      """"DATE('NOW')""""";;;;;
    else;;;;;
"      """"NOW()""""";;;;;
    end;;;;;
  end;;;;;
;;;;;
  def base_query;;;;;
    Conversation;;;;;
            .select(;;;;;
"              """"conversations.*"""",";;;;;
"              """"COUNT(messages.id) AS messages_count"""",";;;;;
"              """"#{sql_now} AS last_activity_at""""";;;;;
            );;;;;
            .left_joins(:messages);;;;;
            .group(:id);;;;;
  end;;;;;
;;;;;
  def test_it_should_work_with_aliased_order_by;;;;;
"    query = base_query.order(""""last_activity_at DESC"""")";;;;;
;;;;;
    assert_not_raise { query.count(:all) };;;;;
  end;;;;;
;;;;;
  def test_it_demonstrates_that_non_aliased_order_by_work;;;;;
"    query = base_query.order(Arel.sql(""""#{sql_now} DESC""""))";;;;;
;;;;;
;;;;;
    assert_not_raise { query.count(:all) };;;;;
  end;;;;;
;;;;;
  def test_without_order_by_it_always_work;;;;;
"    query = base_query # .order(""""last_activity_at DESC"""")";;;;;
;;;;;
    assert_not_raise { query.count(:all) };;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
This query should work;;;;;
;;;;;
```ruby;;;;;
    Conversation;;;;;
            .select(;;;;;
"              """"conversations.*"""",";;;;;
"              """"COUNT(messages.id) AS messages_count"""",";;;;;
"              """"NOW() AS last_activity_at""""";;;;;
            );;;;;
            .left_joins(:messages);;;;;
            .order(:last_activity_at);;;;;
            .group(:id);;;;;
```;;;;;
;;;;;
Expected query;;;;;
;;;;;
```;;;;;
SELECT ;;;;;
"  COUNT(*) AS """"count_all"""", ";;;;;
"  """"conversations"""".""""id"""" AS """"conversations_id"""" ";;;;;
"FROM """"conversations"""" ";;;;;
"LEFT OUTER JOIN """"messages"""" ON """"messages"""".""""conversation_id"""" = """"conversations"""".""""id"""" ";;;;;
"GROUP BY """"conversations"""".""""id""""";;;;;
;;;;;
#NOM?;;;;;
#NOM?;;;;;
```;;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
```;;;;;
"ActiveRecord::StatementInvalid <""""PG::UndefinedColumn: ERROR:  column \""""last_activity_at\"""" does not exist";;;;;
;;;;;
SELECT ;;;;;
"  COUNT(*) AS """"count_all"""", ";;;;;
"  """"conversations"""".""""id"""" AS """"conversations_id"""" ";;;;;
"FROM """"conversations"""" ";;;;;
"LEFT OUTER JOIN """"messages"""" ON """"messages"""".""""conversation_id"""" = """"conversations"""".""""id"""" ";;;;;
"GROUP BY """"conversations"""".""""id""""";;;;;
ORDER BY last_activity_at DESC;;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.0.0;;;;;
",2024-03-28T14:59:27Z,2024-04-02T15:15:35Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2210141203,[RF-DOCS] Action View Helpers Documentation [ci-skip],""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
This Pull Request has been created to provide clarity to the Action View Helpers guide.;;;;;
;;;;;
### Detail;;;;;
;;;;;
;;;;;
Here are some notes on what has changed:;;;;;
;;;;;
Some notes:;;;;;
;;;;;
- AssetTagHelper talks about a bunch of *_tag helpers, but also some of them mention *_url and *_path helpers. (which live in AssetUrlHelper). Those are helpful to know, but less frequently used I think. It's also incomplete (some mention it, others don't, *_tag helpers have their *_url/*_path counterparts, or use the basic `asset_path/url`.) I don't think it's worth expanding with all these variants, I'd rather remove the individual ones, and if we want to mention, we can maybe bundle them together within the same subsection instead, or just as examples of the related *_tag sections.;;;;;
- The cache helper could use some more info. I don't think it's worth linking to the Fragments API, but rather to the [fragments caching piece of the caching guide](https://edgeguides.rubyonrails.org/caching_with_rails.html#fragment-caching), where it goes into more details. The example could also be expanded to show something that at least gets a record as an example too.;;;;;
- `content_for` could perhaps benefit from showing `content_for?` in the example, somehow.;;;;;
- We do not want to show any form helpers here, just link to the specific guide, but we can maybe make that paragraph clearer.;;;;;
- `escape_javascript` could use an example (not the one that's on the API as it seems very jquery-related... maybe some other example of embedding some Ruby in JS or something);;;;;
- mention of `rails-html-sanitizer` could be linked.;;;;;
"- """"NB: The output may still contain unescaped '<', '>', '&' characters and confuse browsers."""" should be a note?";;;;;
- UrlHelper could have a few extra items like `current_page?` and `mail_to`, which can be commonly used. (no need to show each and every method, just the most common ones);;;;;
- CsrfHelper seems unnecessary to explain here. (we don't add CspHelper for instance... not sure we need to get into those, can probably skip them.);;;;;
- We could have a section on `TextHelper` mentioning things like `simple_format`, `truncate`, `excerpt`, maybe some other(s). (again, not everything, just the most commonly used ones);;;;;
- We could have a section on `TagHelper` mentioning `content_tag` and `tag`.;;;;;
;;;;;
- Updated the 'what you will know section';;;;;
#NOM?;;;;;
#NOM?;;;;;
#NOM?;;;;;
#NOM?;;;;;
- Added more clarity to `capture` and `content_for`;;;;;
#NOM?;;;;;
#NOM?;;;;;
#NOM?;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-27T08:14:18Z,2024-04-04T09:42:14Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2209113208,Fix PostgreSQL `include` indexes with keyword column names,Fixes #51428.,2024-03-26T19:13:53Z,2024-03-27T16:01:54Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2208982733,Problem with field named timestamp and index with include,""### Steps to reproduce";;;;;
;;;;;
"When you have a field named """"timestamp"""" and want to add an index including this field, the schema is generated with escape characters, making it impossible to run the load schema";;;;;
;;;;;
```ruby;;;;;
class ChangeIndexStatusToEvent < ActiveRecord::Migration[7.1];;;;;
  def change;;;;;
    add_index :events, [:status, :name, :app_id], name: 'index_events_on_status_name_app_id', include: [:id, :timestamp];;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
This schema is generated when running the migrate above:;;;;;
;;;;;
```ruby;;;;;
"t.index [""""status"""", """"name"""", """"app_id"""", """"timestamp""""], name: """"index_events_on_status_name_app_id"""", include: [""""id"""", """"\""""timestamp\""""""""]";;;;;
```;;;;;
;;;;;
Test case:;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
require 'bundler/inline';;;;;
;;;;;
gemfile(true) do;;;;;
  source 'https://rubygems.org';;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
  gem 'rails';;;;;
;;;;;
  gem 'pg';;;;;
end;;;;;
;;;;;
require 'active_record';;;;;
require 'minitest/autorun';;;;;
require 'logger';;;;;
;;;;;
# `CREATE DATABASE rails_51428_test;`;;;;
ActiveRecord::Base.establish_connection(adapter: 'postgresql', database: 'rails_51428_test');;;;;
ActiveRecord::Base.logger = Logger.new($stdout);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :events, force: true do |t|;;;;;
    t.decimal :amount, precision: 10, scale: 0, default: 0, null: false;;;;;
    t.datetime :timestamp;;;;;
  end;;;;;
;;;;;
  add_index :events, [:amount], name: 'index_events_on_timestamp', include: [:timestamp];;;;;
end;;;;;
;;;;;
ActiveRecord::SchemaDumper.dump;;;;;
;;;;;
class Event < ActiveRecord::Base; end;;;;
;;;;;
class EventTest < Minitest::Test;;;;;
  def test_stuff;;;;;
    assert_equal 0, Event.count;;;;;
    Event.create!(amount: 1);;;;;
    assert_equal 1, Event.count;;;;;
;;;;;
    # Note: this fails silently. I later discovered that neither this nor;;;;;
    # `ActiveRecord::Tasks::DatabaseTasks.load_schema_current(:ruby, ENV['SCHEMA'])`;;;;;
    # fail. See comments below.;;;;;
    puts `rails db:schema:load`;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
"I am not sure if the word """"timestamp"""" is reserved for the system, but I started having this problem after upgrading the rails version from 7.0.3 to 7.1.0";;;;;
;;;;;
;;;;;
### Expected behavior;;;;;
"Don't escape the characters at include in index or add this explanation to take care to use field named """"timestamp"""" in Rails Guide.";;;;;
;;;;;
### Actual behavior;;;;;
"Using field named """"timestamp"""" and adding index with this field in include, results in the schema with escaped characters, making it impossible to run the load schema.";;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.0;;;;;
;;;;;
**Ruby version**: 3.3.0;;;;;
",2024-03-26T18:15:15Z,2024-03-27T20:46:42Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 70310659, 'node_id': 'MDU6TGFiZWw3MDMxMDY1OQ==', 'url': 'https://api.github.com/repos/rails/rails/labels/PostgreSQL', 'name': 'PostgreSQL', 'color': 'fbca04', 'default': False, 'description': None}, {'id': 126910270, 'node_id': 'MDU6TGFiZWwxMjY5MTAyNzA=', 'url': 'https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps', 'name': 'With reproduction steps', 'color': '009800', 'default': False, 'description': None}]""";;;;;
"2208080356,Request session id unavailable when streaming HTML,""The default Content Security Policy nonce generator returns the `request.session.id`, but this isn’t available when streaming an HTML response.";;;;;
;;;;;
### Steps to reproduce;;;;;
1. Enable the default Content Security Policy by uncommenting the code generated in `config/initializers/content_security_policy.rb`;;;;;
2. Stream an HTML response form a controller;;;;;
;;;;;
**Content Security Policy Config:**;;;;;
```ruby;;;;;
Rails.application.configure do;;;;;
  config.content_security_policy do |policy|;;;;;
    policy.default_src :self, :https;;;;;
    policy.font_src    :self, :https, :data;;;;;
    policy.img_src     :self, :https, :data;;;;;
    policy.object_src  :none;;;;;
    policy.script_src  :self, :https;;;;;
    policy.style_src   :self, :https;;;;;
  end;;;;;
;;;;;
  config.content_security_policy_nonce_generator = ->(request) { request.session.id };;;;;
  config.content_security_policy_nonce_directives = %w(script-src style-src);;;;;
end;;;;;
```;;;;;
;;;;;
**Example controller:**;;;;;
;;;;;
```ruby;;;;;
class DashboardController < ApplicationController;;;;;
  def index;;;;;
"    headers[""""X-Accel-Buffering""""] = """"no""""";;;;;
"    headers[""""Cache-Control""""] = """"no-transform""""";;;;;
"    headers[""""Last-Modified""""] = Time.now.httpdate";;;;;
"    headers[""""Content-Type""""] = """"text/html";" charset=utf-8""""";;;;
;;;;;
    self.response_body = Enumerator.new do |buffer|;;;;;
"      buffer << """"<html><head><title>Dashboard</title></head><body>""""";;;;;
"      buffer << """"<h1>Dashboard</h1>""""";;;;;
"      buffer << """"<p>Welcome to the dashboard</p>""""";;;;;
"      buffer << """"</body></html>""""";;;;;
    end;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behaviour;;;;;
The Content Security Policy headers should include a nonce based on the session id.;;;;;
;;;;;
```;;;;;
Content-Security-Policy: default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src 'none'; script-src 'self' https: 'nonce-2c3f06bf498ed7295cc4612bdc7ad90e'; style-src 'self' https: 'nonce-2c3f06bf498ed7295cc4612bdc7ad90e'
```;;;;;
;;;;;
### Actual behaviour;;;;;
The Content Security Policy headers do not include a nonce.;;;;;
;;;;;
```;;;;;
Content-Security-Policy: default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src 'none'; script-src 'self' https:; style-src 'self' https:
```;;;;;
;;;;;
### Workaround;;;;;
As a workaround, you can set a session attribute and remove it before setting the `response_body`.;;;;;
;;;;;
```ruby;;;;;
session[:foo] = 1;;;;;
session.delete(:foo);;;;;
```;;;;;
;;;;;
This seems to get the session into a state where it has an `id`.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
"**Ruby version**: 3.3.0"",2024-03-26T12:13:22Z,2024-03-26T12:14:52Z,[]";;;;;
"2206546795,Add Active Model `Collection` attribute type,""### Summary";;;;;
;;;;;
One case that is not yet covered by the current standard types is for attributes that represent a collection of multiple values. For example, one might need to represent a subset of strings as a list in a single attribute; or even an entire group of associated models that are all embedded in a named collection. ;;;;
;;;;;
;;;;;
This PR aims to implement a new Collection type.;;;;;
It subclasses the base Value class and overrides the necessary methods so casting and serialization work for an array of objects that are themselves valid for one of the types in the Registry. This ensures that each element of the collection can be cast and serialized individually by delegating the operation to the appropriate type instance.;;;;;
;;;;;
Collection serializes itself as a JSON array on the database. For casting, it attempts to convert values to a Ruby array.;;;;;
;;;;;
Methods:;;;;;
;;;;;
- `type`: returns the :collection symbol.;;;;;
- `serializable?`: checks if the given value is an array containing only elements in which are all serializable for the collection type. It will instantiate the type passed during its own initialization and call serializable? for each element.;;;;;
- `serialize`: returns a JSON string of an array with all elements serialized by the collection type.;;;;;
- `deserialize`: expects a JSON array string and converts it into a Ruby array with each element deserialized by the collection type.;;;;;
- `cast`: converts the given array into a normalized collection of cast values. It will map the given array to a new one in which each element is cast into a new value by the collection type.;;;;;
- `changed_in_place?`: Accepts raw serialized value, deserializes it and checks if any of the elements of the collections were mutated according to the collection type method of the same name.;;;;;
- `assert_valid_value`: checks if all elements of the given array are accepted by the collection type method of the same name.;;;;;
;;;;;
;;;;;
;;;;;
### Other Information;;;;;
;;;;;
This change also introduces additional `Value#valid_value?` method that is supposed to separate the assertion, which raises an exception from a boolean check that can be reused in other places. This way new types won't have to override the whole `assert_valid_value` method if they want to keep the default error message.;;;;;
;;;;;
Let me know if this change should be implemented in a separate PR. I decided to keep it in this PR for better readability of the change but definitely willing to extract it and have a discussion is a different PR. Thanks!;;;;;
;;;;;
### Documentation;;;;;
;;;;;
Currently only the class itself is covered with documentation. But we have plans to cover public methods as well.;;;;;
Either in this PR, in a separate one or perhaps as part of the https://github.com/rails/rails/pull/44306;;;;;
;;;;;
"Original PR #44324"",2024-03-25T19:38:19Z,2024-04-03T17:01:06Z,""[{'id': 107190, 'node_id': 'MDU6TGFiZWwxMDcxOTA=', 'url': 'https://api.github.com/repos/rails/rails/labels/activemodel', 'name': 'activemodel', 'color': '00E5FF', 'default': False, 'description': None}]""";;;;;
"2206478011,Add `Model` type to Active Model attributes,""### Summary";;;;;
;;;;;
The new Model type handles all operations on conversion around model representations, from POROs to hashes and database string/JSON columns.;;;;;
;;;;;
Attributes that are specified as the Model type are required to also specify a class name, which will be used to cast the given values into model instances. On the database serialization side, the model is represented as a JSON, with its `AttributeSet` being serialized by the types of each respective attribute.;;;;;
;;;;;
;;;;;
;;;;;
### Docs:;;;;;
;;;;;
`type`: returns the :model symbol.;;;;;
;;;;;
`serializable?`: checks if the given value is an instance of the model class that this type was initialized with, returning false otherwise.;;;;;
;;;;;
`serialize`: returns a string with the JSON representation of the given model attributes. It achieves that by calling values_for_database in the model’s AttributeSet, and converts the hash received into a JSON string.;;;;;
;;;;;
`deserialize`: this method expects a JSON string, supposed to be a serialized set of attributes of a model instance. It proceeds to convert the JSON into a Ruby hash, and then instantiates a new model of the appropriate class name with the Ruby hash as its attributes. The mass assignment will allow each attribute to be deserialized accordingly and stored in the instance’s attribute set.;;;;;
;;;;;
`cast`: receives a value that is either a hash of attributes or a model instance. It then instantiates a new model based on the class name with the given attributes. This means that if a model is passed, a new instance with the same attribute values will be returned, but not the exact same object.;;;;;
;;;;;
`changed_in_place?`: Accepts a raw serialized attribute set, deserializes it and compares it with the given model instance. If the deserialized model’s attribute set is equal to the given model’s attribute set, returns true, or false otherwise.;;;;;
;;;;;
`assert_valid_value`: this method checks if the given value can be cast to the model class. It takes either a model or a hash of attributes. If the model is not the same class as the type’s class name, or if the given hash contains keys that do not belong to the class's attribute set, it raises an error.;;;;;
;;;;;
### Other Information;;;;;
;;;;;
`attributes_for_database` was copied from ;;;;;
https://github.com/rails/rails/blob/caced273937cf61c9ed2056877e0c3cd6a6b6577/activerecord/lib/active_record/attribute_methods/before_type_cast.rb#L70;;;;;
with an intention to only exist in Active Model, but kept in both places for simplicity of this PR;;;;;
;;;;;
"Original PR #44380"",2024-03-25T19:02:28Z,2024-03-25T21:39:48Z,""[{'id': 107190, 'node_id': 'MDU6TGFiZWwxMDcxOTA=', 'url': 'https://api.github.com/repos/rails/rails/labels/activemodel', 'name': 'activemodel', 'color': '00E5FF', 'default': False, 'description': None}]""";;;;;
"2204627024,Fix `destroy_async` job for owners with composite primary keys,""Currently, `DestroyAssociationAsyncJob` does not work when we have an owner with a composite primary key. ";;;;;
"This PR fixes that."",2024-03-24T23:55:18Z,2024-03-24T23:56:54Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2203991751,ActiveSupport::Cache.expand_cache_key sometimes returns falsely same key in parallel tests,""### Steps to reproduce";;;;;
Thats the hard part here! I still didnt figure out how to reproduce it safely. ;;;;;
What i can tell is that this does not happen when i execute a single testcase. It also doesnt happen when i set parallel workers to `1`.;;;;;
;;;;;
When parallel workers is set to `processors` and all tests are executed via `rails test`, the following test is breaking repeatedly:;;;;;
```ruby;;;;;
"      it """"returns updated records omitting cache and returning new etag"""" do";;;;;
"        get """"/apis/v1/me/tickets""""";;;;;
        assert_valid_json_response;;;;;
;;;;;
"        assert_changes ->{ last_response.headers[""""etag""""] } do";;;;;
          travel 1.second;;;;;
          tickets(:multi).touch;;;;;
;;;;;
"          get """"/apis/v1/me/tickets""""";;;;;
          assert_valid_json_response;;;;;
        end;;;;;
      end;;;;;
```;;;;;
The etag header is calculated basically via this line of code which i also found out to return the same **wrong key**. The `updated_at` on the record `tickets(:multi)` changes, but the underlying query fetching the `max(tickets.updated_at)` seem to return an older timestamp? At least the timestamp in the key remains the same.;;;;;
```;;;;;
ActiveSupport::Cache.expand_cache_key current_user.tickets.visible;;;;;
```;;;;;
The visible scope: ;;;;;
```;;;;;
"scope :visible, -> { joins(:admittances).where(tickets: {hidden: false}).merge(Admittance.visible).group(""""tickets.id"""")}";;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
The etag header should change in the same way whether i execute a single test or all together without flakiness. ;;;;;
;;;;;
### Actual behavior;;;;;
The etag header **remains equal** which is wrong. But this happens only when executing all tests parallelized which is kinda flaky.;;;;;
;;;;;
### Notes;;;;;
I found out that changing the scope implementation from `group` to `distinct` fixes it:;;;;;
```;;;;;
"scope :visible, -> { joins(:admittances).where(tickets: {hidden: false}).merge(Admittance.visible).select(""""distinct on (#{table_name}.id) #{table_name}.*"""")}";;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.2;;;;;
;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-23T18:20:10Z,2024-03-27T09:26:49Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}]""";;;;;
"2203763430,Ignore destroyed records in CollectionAssociation#empty?,""Fix: https://github.com/rails/rails/issues/51388";;;;;
;;;;;
This commit isn't in a mergeable state, it's just to better understand the issue at hand. There is likely similar issues in other methods and it would need some tests.;;;;;
;;;;;
",2024-03-23T08:08:02Z,2024-03-23T08:08:09Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2203250382,Expose @association as a reader in ActiveRecord_Associations_CollectionProxy,""This makes it possible to reflect on associations. For example, Blog.first.posts.association.owner would show that the blog is the owner of the association.";;;;;
;;;;;
## Why?;;;;;
;;;;;
I have a link helper in my Rails app that reflects on associations, like this: `show(@blog.posts)`. Currently I can't reflect on that association unless I access a private instance variable:;;;;;
;;;;;
```ruby;;;;;
"@blog.posts.instance_variable_get(""""@association"""").target";;;;;
```;;;;;
;;;;;
This commit exposes the `@association` object in a public API so I can reflect on associations.;;;;;
",2024-03-22T20:22:30Z,2024-03-26T21:13:58Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2202930057,`ActiveRecord::Suppressor` not working on associations that are loaded via `inverse_of` on unsaved records,""### Steps to reproduce";;;;;
This issue comes from [this comment](https://github.com/rails/rails/pull/50284#issuecomment-2004506200), and started happening after #50284. @rafaelfranca confirmed this behaviour (outlined by @andrewyoo) is intended:;;;;;
;;;;;
```ruby;;;;;
Loading development environment (Rails 7.2.0.alpha);;;;;
umami(dev)> u = User.new;;;;;
=> ;;;;;
#<User:0x000000012c399b30;;;;;
...;;;;;
umami(dev)> s = Shift.new user: u;;;;;
=> #<Shift:0x0000000129e31d98 id: nil, user_id: nil>;;;;;
umami(dev)> s.user;;;;;
=> ;;;;;
#<User:0x000000012c399b30>;;;;;
umami(dev)> u.shifts;;;;;
=> [#<Shift:0x0000000129e31d98 id: nil, user_id: nil>];;;;;
```;;;;;
;;;;;
However, this has the side effect of breaking `ActiveRecord::Suppressor` if you happen to modify the association owner outside the suppression block. Here's a minimal reproduction script:;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
"require """"debug""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
ActiveRecord::Base.has_many_inversing = true;;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :events, force: true do |t|;;;;;
    t.string :action, limit: 255;;;;;
    t.references :recording;;;;;
;;;;;
    t.timestamps;;;;;
  end;;;;;
;;;;;
  create_table :recordings, force: true do |t|;;;;;
    t.string :content;;;;;
;;;;;
    t.timestamps;;;;;
  end;;;;;
end;;;;;
;;;;;
class Recording < ActiveRecord::Base;;;;;
  has_many :events, dependent: :destroy;;;;;
;;;;;
  after_create :track_created;;;;;
;;;;;
  def track_event(action);;;;;
    Event.create! recording: self, action: action;;;;;
  end;;;;;
;;;;;
  def copy;;;;;
    transaction do;;;;;
      recording = Event.suppress { Recording.create!(content: content) };;;;;
      recording.update!(updated_at: updated_at);;;;;
      recording.track_event(:copied_copy);;;;;
      track_event(:copied_original);;;;;
    end;;;;;
  end;;;;;
;;;;;
  private;;;;;
    def track_created;;;;;
      track_event :created;;;;;
    end;;;;;
end;;;;;
;;;;;
class Event < ActiveRecord::Base;;;;;
  belongs_to :recording, required: false;;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_suppress_events_on_copies;;;;;
"    recording = Recording.create!(content: """"original"""")";;;;;
    assert_equal 1, Event.count;;;;;
;;;;;
    recording.copy;;;;;
;;;;;
    assert_equal 3, Event.count;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
Unless it's decided that this is now the expected behaviour for suppression as well, and needs to be documented, I'd expect the above test to pass. ;;;;;
;;;;;
I think, ideally, we'd fix `ActiveRecord::Suppressor` to deal with this case: a record that was set but not saved while the model was suppressed shouldn't be saved afterwards indirectly via the association owner. ;;;;;
;;;;;
### Actual behavior;;;;;
The test fails with ;;;;;
```;;;;;
Failure:;;;;;
BugTest#test_suppress_events_on_copies [test.rb:75]:;;;;;
Expected: 3;;;;;
  Actual: 4;;;;;
```;;;;;
because we added a `created` event to the copy when we save the original recording outside the `Event.suppress` block. ;;;;;
;;;;;
### System configuration;;;;;
**Rails version**:  Rails version: `main` (7c68c52);;;;;
**Ruby version**: 3.3.0 (though it should happen with any version).;;;;;
",2024-03-22T17:00:08Z,2024-03-25T12:53:02Z,[]
2202177190,Inconsistency between `any?`/`empty?` and `size` for collection associations loaded via `inverse_of`,### Steps to reproduce";;;;;
This behaviour seems to have been uncovered by #50284, but it wasn't introduced by that change. Now, if you have two associations like these: ;;;;;
;;;;;
```ruby;;;;;
class Blob < ActiveRecord::Base;;;;;
  has_many :attachments;;;;;
end;;;;;
 ;;;;;
class Attachment < ActiveRecord::Base;;;;;
  belongs_to :blob, required: false;;;;;
end;;;;;
```;;;;;
with `ActiveRecord::Base.has_many_inversing = true`, the following: ;;;;;
```ruby;;;;;
attachment.blob;;;;;
```;;;;;
would load `attachment` within `attachment.blob.attachments` inside the collection's `@target` without setting it as `loaded!`. The result is what I find a bit inconsistent behaviour if you delete `attachment` but I'm not quite sure what the right behaviour should be. ;;;;;
;;;;;
Here's a reproduction script where the inconsistency can be seen in action:;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
"  gem """"stringio"""", """"3.0.9""""";;;;;
"  gem """"debug""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
 ;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
ActiveRecord::Base.has_many_inversing = true;;;;;
 ;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :attachments, force: true do |t|;;;;;
    t.string :name, limit: 255;;;;;
    t.integer :blob_id;;;;;
;;;;;
    t.timestamps;;;;;
  end;;;;;
 ;;;;;
  create_table :blobs, force: true do |t|;;;;;
    t.timestamps;;;;;
  end;;;;;
end;;;;;
 ;;;;;
class Blob < ActiveRecord::Base;;;;;
  has_many :attachments;;;;;
;;;;;
  def has_attachments?;;;;;
    attachments.any?;;;;;
  end;;;;;
end;;;;;
 ;;;;;
class Attachment < ActiveRecord::Base;;;;;
  belongs_to :blob, required: false;;;;;
;;;;;
  after_destroy :destroy_exclusive_blobs;;;;;
;;;;;
  private;;;;;
    def destroy_exclusive_blobs;;;;;
      blob.destroy if blob && !blob.has_attachments?;;;;;
    end;;;;;
end;;;;;
 ;;;;;
class BugTest < Minitest::Test;;;;;
  def test_destroy_exclusive_blobs;;;;;
    blob = Blob.create!;;;;;
    attachment = Attachment.create!(blob: blob);;;;;
;;;;;
    assert_equal 1, Blob.count;;;;;
;;;;;
    attachment.destroy;;;;;
;;;;;
    assert_equal 0, Blob.count;;;;;
   end;;;;;
 end;;;;;
```;;;;;
;;;;;
The test fails after #50284 as `any?` returns `true`. That comes from `empty?` https://github.com/rails/rails/blob/68b20b6513fe56ca80e4966628c231b4d6113bea/activerecord/lib/active_record/associations/collection_association.rb#L230-L236;;;;;
;;;;;
`loaded?` is false, yet `target` includes an `Attachment` record, so `target.empty?` is false. Note that `target.emtpy?` there was added initially to consider newly created records that hadn't been persisted yet (https://github.com/rails/rails/pull/8912). ;;;;;
;;;;;
If replacing `attachments.any?` with `attachments.size > 0`, like this: ;;;;;
```ruby;;;;;
class Blob < ActiveRecord::Base;;;;;
  has_many :attachments;;;;;
;;;;;
  def has_attachments?;;;;;
    attachments.size > 0;;;;;
  end;;;;;
end;;;;;
```;;;;;
the test passes. ;;;;;
;;;;;
### Expected behavior;;;;;
I'd expect both ways, `attachments.size > 0` and `attachments.any?` to behave in the same way, but I'm not completely sure given the code for `CollectionAssociation#empty?` and `CollectionAssociation#size`. If they're supposed to behave inconsistently in this case, perhaps this should be documented. ;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: `main` (7c68c5210cbc245d778daa7958cab73bc74f4669);;;;;
;;;;;
"**Ruby version**: 3.3.0 (though it should happen with any version). "",2024-03-22T10:25:40Z,2024-03-25T15:49:29Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}]""";;;;;
"2201499276,Inconsistent behaviour with previous encryption schemes at global / attribute level,""### Steps to reproduce";;;;;
;;;;;
ref: https://guides.rubyonrails.org/active_record_encryption.html#support-for-previous-encryption-schemes;;;;;
;;;;;
Consider these three tests, to be added to [encryption_schemes_test.rb](https://github.com/rails/rails/blob/main/activerecord/test/cases/encryption/encryption_schemes_test.rb):;;;;;
;;;;;
```ruby;;;;;
"  test """"deterministic property is retained when using previous schemes at the attribute level"""" do";;;;;
"    ActiveRecord::Encryption.config.deterministic_key = """"12345""""";;;;;
;;;;;
    encrypted_author_class = Class.new(Author) do;;;;;
"      self.table_name = """"authors""""";;;;;
;;;;;
      encrypts :name, deterministic: true, previous: { encryptor: PassthruEncryptor.new };;;;;
    end;;;;;
;;;;;
    assert_includes encrypted_author_class.deterministic_encrypted_attributes, :name;;;;;
;;;;;
"    author = encrypted_author_class.create!(name: """"Stephen King"""")";;;;;
"    assert_equal author, encrypted_author_class.find_by_name(""""Stephen King"""")";;;;;
  end;;;;;
;;;;;
"  test """"deterministic property is retained when using previous schemes at the global level"""" do";;;;;
"    ActiveRecord::Encryption.config.deterministic_key = """"12345""""";;;;;
    ActiveRecord::Encryption.config.previous = [{ encryptor: PassthruEncryptor.new }];;;;;
;;;;;
    encrypted_author_class = Class.new(Author) do;;;;;
"      self.table_name = """"authors""""";;;;;
;;;;;
      encrypts :name, deterministic: true;;;;;
    end;;;;;
;;;;;
    assert_includes encrypted_author_class.deterministic_encrypted_attributes, :name;;;;;
;;;;;
"    author = encrypted_author_class.create!(name: """"Stephen King"""")";;;;;
"    assert_equal author, encrypted_author_class.find_by_name(""""Stephen King"""")";;;;;
  end;;;;;
;;;;;
"  test """"deterministic property can be explicitly provided when using previous schemes at the attribute level"""" do";;;;;
"    ActiveRecord::Encryption.config.deterministic_key = """"12345""""";;;;;
;;;;;
    encrypted_author_class = Class.new(Author) do;;;;;
"      self.table_name = """"authors""""";;;;;
;;;;;
      encrypts :name, deterministic: true, previous: { encryptor: PassthruEncryptor.new, deterministic: true };;;;;
    end;;;;;
;;;;;
    assert_includes encrypted_author_class.deterministic_encrypted_attributes, :name;;;;;
;;;;;
"    author = encrypted_author_class.create!(name: """"Stephen King"""")";;;;;
"    assert_equal author, encrypted_author_class.find_by_name(""""Stephen King"""")";;;;;
  end;;;;;
```;;;;;
;;;;;
The second and third tests pass. The first fails:;;;;;
;;;;;
```;;;;;
Failure:;;;;;
ActiveRecord::Encryption::EncryptionSchemesTest#test_deterministic_property_is_retained_when_using_previous_schemes_at_the_attribute_level [test/cases/encryption/encryption_schemes_test.rb:195]:;;;;;
Expected: #<#<Class:0x00000001055dbcd0> id: 1>;;;;;
  Actual: nil;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
I think either the first and second test should both pass, or they should both fail. I think the third test is passing correctly.;;;;;
;;;;;
I can make a PR but would like some guidance on which behaviour is expected. I think the root cause is that global previous schemes get merged [here](https://github.com/rails/rails/blob/68b20b6513fe56ca80e4966628c231b4d6113bea/activerecord/lib/active_record/encryption/encryptable_record.rb#L73-L74) but attribute-level previous schemes do not.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: `main`;;;;;
;;;;;
**Ruby version**: any;;;;;
",2024-03-22T01:26:00Z,2024-03-22T01:26:20Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 5511275119, 'node_id': 'LA_kwDNIULPAAAAAUh_Ym8', 'url': 'https://api.github.com/repos/rails/rails/labels/encryption', 'name': 'encryption', 'color': '8D3EA8', 'default': False, 'description': ''}]""";;;;;
"2200888087,Add :variants option to render-related documentation [ci skip],""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
This Pull Request has been created because; I couldn't find the `:variants` option in the API documentation. I noticed it was covered in the guidelines, but it didn't go over that render can intake a singular version of `:variant` and partial rendering should only intake a plural version of the option.;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request adds ;;;;;
- `:variants` documentation to `ActionView::PartialRenderer`;;;;;
- `:variants` and `:variant` to `ActionController::Rendering`;;;;;
 ;;;;;
### Additional information;;;;;
;;;;;
It's not clear to me what areas should also include the as an available option, any insights would be helpful! 🙂 ;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-21T18:30:04Z,2024-03-28T13:54:45Z,[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}, {'id': 3666649, 'node_id': 'MDU6TGFiZWwzNjY2NjQ5', 'url': 'https://api.github.com/repos/rails/rails/labels/actionview', 'name': 'actionview', 'color': 'd7e102', 'default': False, 'description': None}]""";;;;;
"2200784853,form_helper documentation using article instead of post [ci skip],""### Motivation / Background";;;;;
;;;;;
This Pull Request has been created because it will make the form_with documentation clearer.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Documentation previously uses post which is confusing as the methods/verb is also post.;;;;;
;;;;;
Before;;;;;
"`<form action=""""/posts"""" method=""""post"""">`";;;;;
;;;;;
After;;;;;
"`<form action=""""/articles"""" method=""""post"""">`";;;;;
;;;;;
### Method;;;;;
;;;;;
Worked through a new Rails app with scaffold of article and checking the output of the HTML. Other HTML changes make it more authentic:;;;;;
- /> => at the end of the input;;;;;
#NOM?;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [X] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-21T17:31:25Z,2024-04-02T09:59:35Z,[{'id': 3666649, 'node_id': 'MDU6TGFiZWwzNjY2NjQ5', 'url': 'https://api.github.com/repos/rails/rails/labels/actionview', 'name': 'actionview', 'color': 'd7e102', 'default': False, 'description': None}]""";;;;;
"2200750652,fix hex bit strings with leading zeroes in postgresql,""### Motivation / Background";;;;;
;;;;;
Currently when casting a hex string argument for a PostgreSQL `bit` or `bit_varying` column, leading zeroes are discarded. This is unexpected, and differs from the behavior of binary strings.;;;;;
;;;;;
### Detail;;;;;
;;;;;
"This Pull Request ensures leading zeroes are preserved, e.g. assigning a bit string column """"0x5F"""" results in the bit string """"01011111"""" instead of """"1011111"""" being sent to Postgres.";;;;;
;;;;;
### Additional information;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-21T17:14:40Z,2024-03-27T20:30:53Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2200234507,Add ability to modify read timeout in runtime,"" ### Motivation / Background";;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Many different factors can impact the database query execution time from an application's point of view, such as network latency, query execution plan, table data shape, and others. ;;;;;
;;;;;
"Currently, the application can provide a """"hardcoded"""" `read_timeout` value in the database.yml, which helps to cap the maximum time it will take to execute one query.";;;;;
;;;;;
However, it is not uncommon for a web request to have multiple query executions, and multiple slow queries can impact its response time. To mitigate the long response times, our application has a maximum allowed request time budget, which can be exhausted by multiple types of these issues. We would like to control the application wait time dynamically and gradually reduce that as the web request progresses. It will allow us to prevent a query from exhausting the request time budget.;;;;;
;;;;;
### Detail;;;;;
;;;;;
I added the ability to customize the database `read_timeout` property dynamically. It will receive the `read_timeout` as a value or a callable object, and a block. Any connection execution within that block will have the read_timeout replaced by the provided value. For example:;;;;;
;;;;;
```ruby;;;;;
ActiveRecord::Base.with_custom_conn_properties(read_timeout: 1) do;;;;;
  ...;;;;;
  Model.where(...).to_a # The read_timeout will be set to 1s;;;;;
  ...;;;;;
end;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-21T13:41:05Z,2024-03-21T20:39:12Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2199929620,Add `ActiveRecord::Relation#readonly?`,""Indicates whether a relation was marked readonly.";;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
There's currently no documented API to check if a relation is readonly. Workarounds include loading the records and checking those for `readonly?` or using accessing the undocumented `readonly_value`.;;;;;
;;;;;
A Relation could be marked readonly and used as an indication to what should be rendered. This change makes that use case simpler.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Adds `ActiveRecord::Relation#readonly?` which behaves the same as `ActiveRecord::Base#readonly?` for the contained records.;;;;;
;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
"* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included."",2024-03-21T11:30:28Z,2024-03-24T09:48:55Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2198596882,Update oracle connection name to match adapter in tests,""";;;;;
<!--;;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
This Pull Request has been created to enable running the activerecord test suite with the oracle-enhanced adapter post activerecord 7.1.0;;;;;
;;;;;
### Detail;;;;;
;;;;;
https://github.com/rails/rails/pull/48015 (specifically 7572a13af6444abf51720051c6a93d72a7aead0e) adds a check to ensure the connection name matches the adapter name for the test run. For oracle databases, the testing files call the connection `oracle`, but the adapter we use is `oracle_enhanced`, resulting in an error when the tests are run:;;;;;
;;;;;
```;;;;;
bundle exec rake test:oracle TEST=test/cases/base_test.rb;;;;;
"/usr/local/bin/ruby -w -I""""lib:test"""" /usr/local/lib/ruby/gems/3.2.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb """"test/cases/base_test.rb""""";;;;;
Using oracle;;;;;
/app/activerecord/test/support/connection.rb:38:in `connect': The connection name did not match the adapter name. Connection name is 'oracle' and the adapter name is 'oracle_enhanced'. (ArgumentError);;;;;
;;;;;
"      raise ArgumentError, """"The connection name did not match the adapter name. Connection name is '#{connection_name}' and the adapter name is '#{arunit_adapter}'.""""";;;;;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;;;;;
"	from /app/activerecord/test/cases/test_case.rb:248:in `<class:TestCase>'";;;;;
"	from /app/activerecord/test/cases/test_case.rb:20:in `<module:ActiveRecord>'";;;;;
"	from /app/activerecord/test/cases/test_case.rb:16:in `<top (required)>'";;;;;
"	from /app/activerecord/test/cases/helper.rb:8:in `require'";;;;;
"	from /app/activerecord/test/cases/helper.rb:8:in `<top (required)>'";;;;;
"	from /app/activerecord/test/cases/base_test.rb:3:in `require'";;;;;
"	from /app/activerecord/test/cases/base_test.rb:3:in `<top (required)>'";;;;;
"	from /usr/local/lib/ruby/gems/3.2.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb:21:in `require'";;;;;
"	from /usr/local/lib/ruby/gems/3.2.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb:21:in `block in <main>'";;;;;
"	from /usr/local/lib/ruby/gems/3.2.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb:6:in `select'";;;;;
"	from /usr/local/lib/ruby/gems/3.2.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb:6:in `<main>'";;;;;
rake aborted!;;;;;
```;;;;;
;;;;;
This change updates the connection name to be `oracle_enhanced` so it matches the adapter. With these changes I can run;;;;;
```;;;;;
bundle exec rake test:oracle_enhanced TEST=test/cases/base_test.rb;;;;;
```;;;;;
without getting the connection name error.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
I did not rename `activerecord/test/schema/oracle_specific_schema.rb` because the config.example.yml has emulate_oracle_adapter set to true so `oracle_specific_schema` is still the name the LoadSchemaHelper looks for.;;;;;
;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-20T21:25:33Z,2024-03-21T21:45:41Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2198129239,Prevent autosave association with has_one defined on child class,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Adjusts the logic in inverse_polymorphic_association_changed? to determine if a has_one association's polymorphic association should autosave the associated record for a type change.;;;;;
;;;;;
Previously this would see the type as changed every time if the has_one is defined on a child class, since the polymorphic relationship saves the parent class as the *_type value. The new check resolves the correct class name to avoid these extra saves.;;;;;
;;;;;
Fixes #51280;;;;;
;;;;;
### Detail;;;;;
;;;;;
Also confirmed that the new test fails without the code change:;;;;;
;;;;;
```;;;;;
Failure:;;;;;
TestAutosaveAssociationOnAHasOneAssociation#test_should_not_saved_for_unchanged_sti_type_on_polymorphic_association [test/cases/autosave_association_test.rb:1652]:;;;;;
Expected: 2;;;;;
  Actual: 3;;;;;
;;;;;
;;;;;
bin/rails test test/cases/autosave_association_test.rb:1620;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-20T17:31:55Z,2024-03-20T17:33:03Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2196727075,[ci skip] Document `ActiveSupport::Subscriber` in guides,""### Motivation / Background";;;;;
;;;;;
`ActiveSupport::Subscriber` provides a nice way to handle `ActiveSupport::Notifications::Event`. However, there is a lack of guide.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Document how to subscribe event of given namespace using `ActiveSupport::Subscriber`.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [X] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-20T06:04:17Z,2024-03-20T06:05:10Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2196576028,""Replace Order with Book in """"Creating Namespaced Models"""" section of docs for consistency"",""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
This Pull Request has been created because the documentation is improved by consistently using the same model names throughout.;;;;;
https://github.com/rails/rails/pull/51226#discussion_r1527578109;;;;;
;;;;;
### Detail;;;;;
;;;;;
"This Pull Request changes the Active Record Basics Guide """"Creating Namespaced Models"""" section to use Book instead of Order in the examples, consistent with the rest of the document.";;;;;
;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-20T03:00:04Z,2024-03-21T18:34:36Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2196082119,Add ability to prevent access to a database,""### Motivation / Background";;;;;
;;;;;
From discussion: https://discuss.rubyonrails.org/t/proposal-prevent-activerecord-access/85322;;;;;
;;;;;
> I have some methods that I know are being called in loops and these methods will become N+1 DB query situations if a database query is generated in any way. What I’m hoping for is some sort of runtime policy that says “no ActiveRecord access is allowed in here, you must load everything you need first”;;;;;
> ;;;;;
> Here’s another way to put it. If I have some business logic that combines data loading with some kind of pure calculation, it would be nice to have the power, when it is useful, to strongly separate these concerns and be sure the separation remains.;;;;;
> ;;;;;
> This power could be useful for any situation where a hot code path must remain free of queries. Perhaps it could be used to implement a policy to prevent database access during the render phase of an HTTP request.;;;;;
;;;;;
N+1 queries can be a real performance concern. It isn't always immediately obvious what the impacts could be of adding a new query. I wish engineers would be constantly watching the query log as they work. But things can get out of hand quickly, and even if you are watching the wall of queries being logged, N+1s can sometimes disappear into the noise.;;;;;
;;;;;
Also, there are times when I want a pure in-memory algorithm. An API like this would allow me to both express and enforce the intention to not be hitting the database in a branch of code.;;;;;
;;;;;
Just today, I was working with some code that broke a test that asserts for a given controller action, exactly 118 queries are dispatched. This is a terrible test to have, but we have it because we have had real problems with query explosions emerging unexpectedly. I believe strict loading could help, but it would not have prevented all of the problems that led to write and maintain this test.;;;;;
;;;;;
This is indeed a heavy hammer to use. But I don't see an alternative that can achieve the same level of assurance, and the implementation was pretty easy thanks to the prior art of `while_preventing_writes`.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request adds `while_preventing_access` to the public API of ActiveRecord::Base much like was done for `while_preventing_writes` in https://github.com/rails/rails/pull/34505;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-19T21:46:17Z,2024-03-23T06:25:57Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2194293557,`PessimisticLockingTest#test_no_locks_no_wait` gets `ERROR:  cached plan must not change result type`,""Managed to reproduce CI error.";;;;;
https://buildkite.com/rails/rails/builds/105748#018e558b-b895-43cc-aa80-71180e80d01b/1235-1330;;;;;
;;;;;
### Steps to reproduce;;;;;
```ruby;;;;;
git clone https://github.com/rails/rails;;;;;
cd rails/activerecord;;;;;
bundle install;;;;;
bundle exec rake db:postgresql:rebuild;;;;;
"ARCONN=postgresql bin/test test/cases/associations/nested_through_associations_test.rb test/cases/connection_management_test.rb test/cases/migration_test.rb test/cases/locking_test.rb -n """"/^(?:NestedThroughAssociationsTest#(?:test_has_many_through_with_foreign_key_option_on_through_reflection)|ActiveRecord::ConnectionAdapters::ConnectionManagementTest#(?:test_cancel_asynchronous_queries_if_an_exception_is_raised)|MigrationTest#(?:test_instance_based_migration_up)|PessimisticLockingTest#(?:test_no_locks_no_wait))$/"""" --seed 38135";;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
It should pass.;;;;;
;;;;;
### Actual behavior;;;;;
`PessimisticLockingTest#test_no_locks_no_wait` gets `ERROR:  cached plan must not change result type`.;;;;;
;;;;;
```ruby;;;;;
"$ ARCONN=postgresql bin/test test/cases/associations/nested_through_associations_test.rb test/cases/connection_management_test.rb test/cases/migration_test.rb test/cases/locking_test.rb -n """"/^(?:NestedThroughAssociationsTest#(?:test_has_many_through_with_foreign_key_option_on_through_reflection)|ActiveRecord::ConnectionAdapters::ConnectionManagementTest#(?:test_cancel_asynchronous_queries_if_an_exception_is_raised)|MigrationTest#(?:test_instance_based_migration_up)|PessimisticLockingTest#(?:test_no_locks_no_wait))$/"""" --seed 38135";;;;;
Using postgresql;;;;;
"Run options: -n """"/^(?:NestedThroughAssociationsTest#(?:test_has_many_through_with_foreign_key_option_on_through_reflection)|ActiveRecord::ConnectionAdapters::ConnectionManagementTest#(?:test_cancel_asynchronous_queries_if_an_exception_is_raised)|MigrationTest#(?:test_instance_based_migration_up)|PessimisticLockingTest#(?:test_no_locks_no_wait))$/"""" --seed 38135";;;;;
;;;;;
# Running:;;;;;
;;;;;
...#<Thread:0x000078a1a0d27b38 /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:809 run> terminated with exception (report_on_exception is true):;;;;;
/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:915:in `rescue in exec_cache': ERROR:  cached plan must not change result type (ActiveRecord::PreparedStatementCacheExpired);;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:893:in `exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:865:in `execute_and_clear'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb:66:in `internal_exec_query'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:630:in `select'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:222:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:62:in `_query_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:51:in `find_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/statement_cache.rb:150:in `execute'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:434:in `cached_find_by'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:255:in `find'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:788:in `block in test_no_locks_no_wait'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:223:in `block in transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_handling.rb:270:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:222:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:812:in `block in duel'";;;;;
/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:903:in `exec_prepared': PG::FeatureNotSupported: ERROR:  cached plan must not change result type (ActiveRecord::StatementInvalid);;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:903:in `block (2 levels) in exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:1112:in `log'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:902:in `block in exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:997:in `block in with_raw_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:969:in `with_raw_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:898:in `exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:865:in `execute_and_clear'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb:66:in `internal_exec_query'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:630:in `select'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:222:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:62:in `_query_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:51:in `find_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/statement_cache.rb:150:in `execute'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:434:in `cached_find_by'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:255:in `find'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:788:in `block in test_no_locks_no_wait'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:223:in `block in transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_handling.rb:270:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:222:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:812:in `block in duel'";;;;;
/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:903:in `exec_prepared': ERROR:  cached plan must not change result type (PG::FeatureNotSupported);;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:903:in `block (2 levels) in exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:1112:in `log'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:902:in `block in exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:997:in `block in with_raw_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:969:in `with_raw_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:898:in `exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:865:in `execute_and_clear'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb:66:in `internal_exec_query'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:630:in `select'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:222:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:62:in `_query_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:51:in `find_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/statement_cache.rb:150:in `execute'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:434:in `cached_find_by'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:255:in `find'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:788:in `block in test_no_locks_no_wait'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:223:in `block in transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_handling.rb:270:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:222:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:812:in `block in duel'";;;;;
Found 1 leaked connections;;;;;
owner: #<Thread:0x000078a1a0d27ca0 /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:799 sleep>;;;;;
backtrace:;;;;;
"[""""/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:53:in `sleep'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:53:in `wait'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:53:in `ns_wait'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/abstract_lockable_object.rb:47:in `ns_wait_until'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/atomic/event.rb:87:in `block in wait'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:48:in `block in synchronize'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:48:in `synchronize'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:48:in `synchronize'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/atomic/event.rb:84:in `wait'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:804:in `block (2 levels) in duel'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction'"""", """"/home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:223:in `block in transaction'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_handling.rb:270:in `with_connection'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:222:in `transaction'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:801:in `block in duel'""""]";;;;;
;;;;;
E;;;;;
;;;;;
Error:;;;;;
PessimisticLockingTest#test_no_locks_no_wait:;;;;;
ActiveRecord::PreparedStatementCacheExpired: ERROR:  cached plan must not change result type;;;;;
;;;;;
    lib/active_record/connection_adapters/postgresql_adapter.rb:915:in `rescue in exec_cache';;;;;
    lib/active_record/connection_adapters/postgresql_adapter.rb:893:in `exec_cache';;;;;
    lib/active_record/connection_adapters/postgresql_adapter.rb:865:in `execute_and_clear';;;;;
    lib/active_record/connection_adapters/postgresql/database_statements.rb:66:in `internal_exec_query';;;;;
    lib/active_record/connection_adapters/abstract/database_statements.rb:630:in `select';;;;;
    lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all';;;;;
    lib/active_record/connection_adapters/abstract/query_cache.rb:222:in `select_all';;;;;
    lib/active_record/querying.rb:62:in `_query_by_sql';;;;;
    lib/active_record/querying.rb:51:in `find_by_sql';;;;;
    lib/active_record/statement_cache.rb:150:in `execute';;;;;
    lib/active_record/core.rb:434:in `cached_find_by';;;;;
    lib/active_record/core.rb:255:in `find';;;;;
    test/cases/locking_test.rb:788:in `block in test_no_locks_no_wait';;;;;
    lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction';;;;;
    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize';;;;;
    lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction';;;;;
    lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction';;;;;
    lib/active_record/transactions.rb:223:in `block in transaction';;;;;
    lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection';;;;;
    lib/active_record/connection_handling.rb:270:in `with_connection';;;;;
    lib/active_record/transactions.rb:222:in `transaction';;;;;
    test/cases/locking_test.rb:812:in `block in duel';;;;;
;;;;;
Error:;;;;;
PessimisticLockingTest#test_no_locks_no_wait:;;;;;
RuntimeError: Found 1 leaked connection after PessimisticLockingTest#test_no_locks_no_wait;;;;;
    test/cases/test_case.rb:82:in `check_connection_leaks';;;;;
    test/cases/test_case.rb:38:in `after_teardown';;;;;
;;;;;
;;;;;
bin/test test/cases/locking_test.rb:787;;;;;
;;;;;
;;;;;
;;;;;
Finished in 1.057243s, 3.7834 runs/s, 10.4044 assertions/s.;;;;;
4 runs, 11 assertions, 0 failures, 1 errors, 0 skips;;;;;
$;;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: main branch;;;;;
;;;;;
**Ruby version**: ruby 3.3.0 (2023-12-25 revision 5124f9ac75) [x86_64-linux];;;;;
",2024-03-19T08:06:22Z,2024-03-19T08:06:39Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 70310659, 'node_id': 'MDU6TGFiZWw3MDMxMDY1OQ==', 'url': 'https://api.github.com/repos/rails/rails/labels/PostgreSQL', 'name': 'PostgreSQL', 'color': 'fbca04', 'default': False, 'description': None}, {'id': 776781281, 'node_id': 'MDU6TGFiZWw3NzY3ODEyODE=', 'url': 'https://api.github.com/repos/rails/rails/labels/ci%20issues', 'name': 'ci issues', 'color': 'aaafff', 'default': False, 'description': None}]""";;;;;
"2192504341,""add `file_exist?` method for ActiveStorage::Blob, ActiveStorage::Variant, ActiveStorage::VariantWithRecord"",""";;;;;
;;;;;
It's help to check if all it's ok on the service storage;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
This Pull Request has been created because we (@captive-studio) handle a large number of files using ActiveStorage in our application where these files are central to the business.;;;;;
;;;;;
For some time now, we have noticed that certain variants are not being properly saved in the storage (specifically Google Cloud Storage). We want to rectify this situation by retrieving the variants for which the file does not exist in the storage.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes add new `file_exist?` method for ActiveStorage::Blob, ActiveStorage::Variant, ActiveStorage::VariantWithRecord;;;;;
;;;;;
This method will help to check if a file exist on the storage service;;;;;
;;;;;
### Additional information;;;;;
;;;;;
/;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-18T15:17:49Z,2024-03-18T15:17:53Z,[{'id': 664533972, 'node_id': 'MDU6TGFiZWw2NjQ1MzM5NzI=', 'url': 'https://api.github.com/repos/rails/rails/labels/activestorage', 'name': 'activestorage', 'color': 'bfd4f2', 'default': False, 'description': None}]""";;;;;
"2192417334,Enable query log tags by default on development env,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
This can be used to trace troublesome SQL statements back to the application code that generated these statements. I feel like this is a good default value that helps with debugging and code discovery.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-18T14:43:38Z,2024-03-25T02:05:54Z,[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}, {'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2190873649,.eager_load when selecting another column sets the ID incorrectly to a record being eager loaded.,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"  # gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :posts, force: true do |t|;;;;;
    t.integer :first_comment_id;;;;;
    t.integer :last_comment_id;;;;;
  end;;;;;
;;;;;
  create_table :comments, force: true do |t|;;;;;
    t.integer :post_id;;;;;
  end;;;;;
end;;;;;
;;;;;
class Post < ActiveRecord::Base;;;;;
  has_many :comments;;;;;
;;;;;
"  belongs_to :first_comment, class_name: """"Comment""""";;;;;
"  belongs_to :last_comment, class_name: """"Comment""""";;;;;
;;;;;
"  scope :select_another_column, -> { select(""""*"""").select(""""TIME('now') as now"""") }";;;;;
end;;;;;
;;;;;
class Comment < ActiveRecord::Base;;;;;
  belongs_to :post;;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_association_stuff;;;;;
    post = Post.create!;;;;;
    post.first_comment = Comment.create!;;;;;
    post.last_comment = Comment.create!;;;;;
;;;;;
    post.save!;;;;;
;;;;;
    post = Post.find(post.id);;;;;
    post_with_eager_loads = Post.eager_load(:first_comment, :last_comment).select_another_column.find(post.id);;;;;
;;;;;
    assert_equal post.id, post_with_eager_loads.id;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
Expect that IDs are consistent when using .eager_load;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
ID gets set to one of the other tables joined in;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: main;;;;;
;;;;;
**Ruby version**: 3.3.0;;;;;
",2024-03-17T21:28:07Z,2024-03-19T19:38:22Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2190758266,Allow one to set `strict_loading_mode` globally,""### Motivation / Background";;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
I was reading through [this summary of Rails' strict loading](https://jordanhollinger.com/2023/11/11/rails-strict-loading/) and came across this paragraph:;;;;;
;;;;;
> If you’re very brave, you can opt your entire application into strict loading. (Oddly, there doesn’t seem to be an equivalent of :n_plus_one_only here. I can’t imagine using this.);;;;;
;;;;;
In my app, we're setting `strict_loading!(mode: :n_plus_one_only)` on individual records; this paragraph made me realize it didn't have to be this way.;;;;
;;;;;
This Pull Request has been created because currently, `strict_loading_mode` is always set to `:all`. It may be preferable for users to have `:n_plus_one_only` on an individual model, or even on the entire app.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request adds a new class_attribute `:strict_loading_mode`, defaulted to `:all`.  If it's set to `:n_plus_one_only`, that mode is used by default when doing strict loading checks.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
n/a;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-17T16:45:34Z,2024-03-28T22:17:42Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2186612406,Autoloaded classes raise NameError when accessed in parent's on_load hook during load,""This is not a new issue with Rails autoloading, but a challenge I feel when working with Engines (either developing engines as a gem maintainer or consuming engines as an application developer)";;;;;
;;;;;
For example, an Engine may have a setup like this:;;;;;
;;;;;
```ruby;;;;;
module GoodJob;;;;;
  class ApplicationJob < ActiveJob::Base;;;;;
    # some configuration;;;;;
    ActiveSupport.run_load_hooks(:good_job_application_job, self);;;;;
  end;;;;;
;;;;;
  class UtilityOneJob < ApplicationJob; end;;;;
  class UtilityTwoJob < ApplicationJob; end;;;;
  class UtilityThreeJob < ApplicationJob; end;;;;
  # ... and many more;;;;;
end;;;;;
```;;;;;
;;;;;
I give an example of GoodJob, but this is a very analogous situation to other Engines with autoloaded classes/subclasses (models, controllers, etc.); for example Devise, which has a `DeviseController` (with load_hook) that is then subclassed with [a desire to extend](https://github.com/heartcombo/devise/wiki/How-To:-Create-custom-layouts#application--devise-config). ;;;;
;;;;;
I want to be able to allow application developers to extend the subclasses, and I want to defer autoloaded constants as much as possible (ideally not touching Action Controller or Active Model at all until during initialization), and this seems like it should be reasonable:;;;;;
;;;;;
```ruby;;;;;
# config/initializers/good_job.rb;;;;;
;;;;;
ActiveSupport.on_load(:good_job_application_job) do;;;;;
  # Customize a subclass;;;;;
"  GoodJob::UtilityJobOne.queue_name = """"something_custom""""";;;;;
end;;;;;
```;;;;;
;;;;;
This _usually_ works ok, except in the case when the `UtilityJobOne` _being loaded causes ApplicationJob to be loaded for the very first time_, in which case it raises a `uninitialized constant UtilityJobOne (NameError)`. This is because of the autoloading chain:;;;;;
;;;;;
`GoodJob::UtilityJobOne` first must load its parent class `GoodJob::ApplicationJob` for the first time, which triggers the load_hook which itself references `UtilityOneJob` which has not yet completed loading and thus a `NameError` 💥 ;;;;;
;;;;;
There is what I consider a workaround for this which is to use `inherited` (which is triggered _after the subclass constant is loaded), but I find it somewhat complex and wonder if there is a better way, or whether this is something that should be turned into a hook pattern:;;;;;
;;;;;
```ruby;;;;;
# config/initializers/good_job.rb;;;;;
;;;;;
module ConfigureUtilityJob;;;;;
  def inherited(subclass);;;;;
    super;;;;;
"    if subclass.to_s == """"UtilityJobOne""""";;;;;
"      subclass.queue_name = """"something_custom""""";;;;;
    end;;;;;
  end;;;;;
end;;;;;
;;;;;
ActiveSupport.on_load(:good_job_application_job) do;;;;;
  GoodJob::ApplicationJob.extend ConfigureUtilityJob;;;;;
end;;;;;
```;;;;;
;;;;;
"I realize that another solution as a engine maintainer is to add load hooks to every subclass, but that seems onerous, and as an application developer I'd have to convince other engine maintainers to do so (which is totally ok, so long as there isn't a better way I'm missing or a reasonable central interface for modifying autoloaded subclasses)."",2024-03-14T15:06:07Z,2024-03-14T15:07:44Z,[]";;;;;
"2183136951,`ActiveRecord::Migration::check_all_pending!` resets connection pool when in use in other threads,""This might not be a bug per se, but is unexpected behaviour that was exposed in our specific use case.";;;;;
;;;;;
### Steps to reproduce;;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
In production, we have a bunch of custom internal health-checks exposed via a controller endpoint that are pinged every 20s or so, one of which is a check for pending migrations. Up until recently we were using `ActiveRecord::Migration::check_pending!` which took an optional connection argument and would use it to access the migration context (presumably releasing the connection back into the pool immediately after) to check for pending migrations.;;;;;
;;;;;
This method [has been deprecated in favour of `check_all_pending!`](https://github.com/rails/rails/commit/03379d1f599653d100dff9fbf3ce4434a930b915) and [was recently removed on `main`](https://github.com/rails/rails/commit/02f66fe3e25cef2b0dec8bca26e777fe788af35c). To comply with this (since we run against Rails edge) we ended up replacing `check_pending!` with `check_all_pending!` (which doesn't take any arguments) in the respective health-check. After deploying this change we started seeing this error intermittently:;;;;;
;;;;;
```;;;;;
ActiveRecord::ConnectionNotEstablished:  No connection pool for 'ActiveRecord::Base' found.;;;;;
```;;;;;
;;;;;
After some debugging we found that it was due to `check_all_pending!` [using a temporary pool under the hood](https://github.com/rails/rails/blob/0dc84e2e7d942dcaac3bd75414ae55bfad9bb18a/activerecord/lib/active_record/tasks/database_tasks.rb#L542-L549), meaning it would establish a new connection for its checks, then establish another one once done, resetting the connection pool object each time. This meant that other threads (we're currently running `puma` with `3` threads) that attempted to retrieve the current (cached) pool during this time (to then retrieve a connection) would fail to find it and raise here:;;;;;
https://github.com/rails/rails/blob/0dc84e2e7d942dcaac3bd75414ae55bfad9bb18a/activerecord/lib/active_record/connection_adapters/abstract/connection_handler.rb#L224;;;;;
;;;;;
We've considered that maybe this specific health-check setup is a bit unconventional, but given that I can find [some public repos utilising this method the same way](https://github.com/search?q=ActiveRecord%3A%3AMigration.check_all_pending%21+language%3ARuby&type=code&l=Ruby), I thought I'd open this up for discussion to see if there's any chance of changing / extending the implementation or even just warning against its use outside of something like a rake task so others don't run into a similar issue.;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# Ensure `ActiveRecord::Base.configurations.configs_for` returns a config for which a temporary pool is yielded.;;;;;
"ActiveRecord::Base.configurations = { development: { adapter: """"sqlite3"""", database: """":memory:"""" } }";;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_connection_pool_does_not_reset;;;;;
    pool_before = ActiveRecord::Base.connection_pool;;;;;
;;;;;
    ActiveRecord::Migration.check_all_pending!;;;;;
;;;;;
    assert_equal pool_before.object_id, ActiveRecord::Base.connection_pool.object_id;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
<!-- Tell us what should happen -->;;;;;
;;;;;
Connection pool is not reset when checking for pending migrations with `check_all_pending!`.;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
;;;;;
Connection pool is reset when checking for pending migrations with `check_all_pending!`.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: Edge;;;;;
;;;;;
"**Ruby version**: 3.2.2"",2024-03-13T05:17:22Z,2024-03-14T06:03:23Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2182989812,Fix a crash when an  Executor wrapped fork exit.,""Fix #51298";;;;;
;;;;;
forking inside an Execution Wrapper crashes when running the completion callbacks.;;;;;
;;;;;
Rails 7.0 was not Execution wrapping the `runner` command. ;;;;;
Rails 7.2 changed the definition of `active_connection?`, the new definition doesn't contain the bug. ;;;;;
;;;;;
Therefore forking inside a script intended to be run with the `runner` command on 7.1 crashes. (see #51298);;;;;
;;;;;
This PR is targeting `7-1-stable`;;;;;
;;;;;
Edit: The regression test (with the fork) blew up the tests. I removed it, I'll revisit. ;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-13T02:22:58Z,2024-03-23T21:16:44Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2182679064,[ci skip] Undocumented - validations enabled by autosave,""### Motivation / Background";;;;;
;;;;;
Fixes #50807;;;;;
;;;;;
As described in Issue #50807,  validations are enabled by default when the autosave option is set to true. Currently, that behavior is not documented for the `has_one` or `belongs_to` associations.   ;;;;;
;;;;;
### Detail;;;;;
;;;;;
To resolve this issue, the  API documentation has been updated to document the validation behavior when the `autosave: true` option is set in `Activerecord::Associations` for the `has_one` or `belongs_to` associations.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-12T21:09:19Z,2024-03-23T17:25:32Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2182219571,Do not use the alpha version if the major version is released,""This PR changes the active storage dependency version for action text. ";;;;;
",2024-03-12T17:04:15Z,2024-03-12T17:04:19Z,[{'id': 1180817762, 'node_id': 'MDU6TGFiZWwxMTgwODE3NzYy', 'url': 'https://api.github.com/repos/rails/rails/labels/actiontext', 'name': 'actiontext', 'color': '3bc667', 'default': False, 'description': ''}]""";;;;;
"2181685435,Model.insert_all can accept an array of records with separate column names,""### Motivation / Background";;;;;
;;;;;
Expanding the `Model.insert_all` functionality to receive an array containing records and column names separately. This improvement eliminates the need for records to be in the hash format, providing a more streamlined approach, especially useful for handling large datasets when both the order of attributes and their alignment with the table structure are known in advance.;;;;;
;;;;;
```ruby;;;;;
column_names = [:name, :author_id];;;;;
book_batches.each do |book_batch|;;;;;
"	Book.insert_all(book_batch, column_names: column_names)";;;;;
end;;;;;
```;;;;;
;;;;;
This update enables users to provide an array of arrays for the records, while also specifying the column names separately. This enhancement enhances code flexibility and readability, simplifying data insertion without requiring pre-formatting into hashes.;;;;;
;;;;;
### Detail;;;;;
;;;;;
#NOM?;;;;;
#NOM?;;;;;
;;;;;
```ruby;;;;;
Book.insert_all([;;;;;
"  [""""Rework"""", 1],";;;;;
"  [""""Patterns of Enterprise Application Architecture"""", 1]";;;;;
], column_names: [:name, :author_id]);;;;;
```;;;;;
;;;;;
"To showcase the API proposal, I opted for the simplest approach, which involved converting the array of records and column names into a Hash, as it aligns with the existing code."",2024-03-12T13:54:28Z,2024-03-12T13:54:34Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2181555060,Add and document ActionText without_layout reader and writer attributes,""If a site follows an `ActionText` editing form with a preview form prior to record creation, the natural way to set the editor content in the preview form is something like:";;;;;
;;;;;
`<%= hidden_field :message, :content %>`;;;;;
;;;;;
"This however does a `to_s`, which includes the content with the """"trix-content"""" div layout wrapping. This wrapping gets saved, and the final rendering with layout has a double wrapping.";;;;;
;;;;;
A solution is to instead use;;;;;
;;;;;
`<%= hidden_field_tag 'message[content]', @message.content.to_trix_html %>`;;;;;
;;;;;
but a cleaner solution would be to provide a non-wrapped accessor like;;;;;
;;;;;
`<%= hidden_field :message, :content_without_layout %>`;;;;;
;;;;;
"This PR does this. It also fixes the incorrect documentation of `has_rich_text` that [shows `to_s` as producing HTML without layout](https://github.com/rails/rails/blob/main/actiontext/lib/action_text/attribute.rb#L20), documents the `without_layout` variant, and adds a sentence suggesting when each should be used."",2024-03-12T12:55:18Z,2024-03-12T12:55:24Z,""[{'id': 1180817762, 'node_id': 'MDU6TGFiZWwxMTgwODE3NzYy', 'url': 'https://api.github.com/repos/rails/rails/labels/actiontext', 'name': 'actiontext', 'color': '3bc667', 'default': False, 'description': ''}]""";;;;;
"2180953140,Fix exception raised from template should not show compiled code,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Fixes #51090 ;;;;;
;;;;;
This Pull Request has been created to fix exceptions raised from template shows the compiled code.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes `activesupport/lib/active_support/core_ext/erb/util.rb`;;;;;
;;;;;
### Additional information;;;;;
1. In this tokenize method we are not handling the text present after `%>` ;;;;;
2. Updated that method to handle text present at end.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-12T07:52:25Z,2024-03-21T17:49:16Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}]""";;;;;
"2180514773,Add composite key support to `Model.exists?`,""Fix #51295";;;;;
;;;;;
`.exists?` does not support composite primary key because it would [clash with the current expectation when passing an array.](https://github.com/rails/rails/blob/main/activerecord/lib/active_record/relation/finder_methods.rb#L351);;;;;
;;;;;
This PR would make it possible to pass a composite primary key by wrapping it in an array:;;;;;
;;;;;
```ruby;;;;;
CpkModel.exists?([[1,1]]) # as in `CpkModel.exists?([composite_primary_key])`;;;;;
```;;;;;
;;;;;
Incidentally, it would also allow searching with multiple keys without having to use the hash form:;;;;;
;;;;;
```ruby;;;;;
CpkModel.exists?([[1,1], [1,2], [3,1]])  ;;;;;
"RegularModel.exists?([[1,2,3]]) # Even works for non regular models! Generates: `SELECT 1 AS one FROM """"regular_models"""" WHERE """"users"""".""""id"""" IN (1, 2, 3)`";;;;;
``` ;;;;;
;;;;;
;;;;;
## Considerations;;;;;
;;;;;
This is a bit of hack and initially thought of answering #51295 by suggesting using the hash form instead, but after looking at what the hash form would look like for a primary key:;;;;;
;;;;;
```ruby;;;;;
CpkModel.exists?(CpkModel.primary_key => [[1,1]]) # You need to wrap the primary key in an array!;;;;;
```;;;;;
This is quite verbose. So perhaps there is value in this.;;;;;
I did not edit the documentation and changelog yet. Only the code, plus a couple tests. If this diff is deemed valuable I'll add the required edits.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-12T00:57:29Z,2024-03-12T01:06:49Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2179543988,Forked child processes created through rails runner throw error from ActiveRecord when exiting,""In Rails 7.1.3.2, child processes which were created using a fork call throw the following error when they are exiting:";;;;;
;;;;;
```;;;;;
.../activerecord-7.1.3.2/lib/active_record/connection_adapters/abstract/connection_pool.rb:197:in `active_connection?': undefined method `[]' for nil (NoMethodError);;;;;
;;;;;
        @thread_cached_conns[connection_cache_key(current_thread)];;;;;
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;;;;;
```;;;;;
;;;;;
These child processes are created using a fork call which does not take a block. Notably, if a block is passed to the fork call then the error does not occur.;;;;;
;;;;;
### Steps to reproduce;;;;;
```;;;;;
> ruby -v;;;;;
ruby 3.3.0 (2023-12-25 revision 5124f9ac75) [x86_64-linux];;;;;
;;;;;
> rails new fork_child_process -G -M -C -A -J -T ;;;;;
rails (7.1.3.2);;;;;
;;;;;
"> echo """"fork"""" > script.rb"; bundle exec rails runner script.rb;;;;
/home/gpallotta/.gem/gems/activerecord-7.1.3.2/lib/active_record/connection_adapters/abstract/connection_pool.rb:197:in `active_connection?': undefined method `[]' for nil (NoMethodError);;;;;
;;;;;
        @thread_cached_conns[connection_cache_key(current_thread)];;;;;
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;;;;;
        from /home/gpallotta/.gem/gems/activerecord-7.1.3.2/lib/active_record/connection_adapters/abstract/query_cache.rb:45:in `disable_query_cache!';;;;;
"	from /home/gpallotta/.gem/gems/activerecord-7.1.3.2/lib/active_record/query_cache.rb:33:in `block in complete'";;;;;
"	from /home/gpallotta/.gem/gems/activerecord-7.1.3.2/lib/active_record/query_cache.rb:33:in `each'";;;;;
"	from /home/gpallotta/.gem/gems/activerecord-7.1.3.2/lib/active_record/query_cache.rb:33:in `complete'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/execution_wrapper.rb:37:in `before'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:426:in `block in make_lambda'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:202:in `block (2 levels) in halting'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:707:in `block (2 levels) in default_terminator'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:706:in `catch'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:706:in `block in default_terminator'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:203:in `block in halting'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:598:in `block in invoke_before'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:598:in `each'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:598:in `invoke_before'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:109:in `run_callbacks'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/execution_wrapper.rb:143:in `complete'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/execution_wrapper.rb:137:in `complete!'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/execution_wrapper.rb:97:in `wrap'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/commands/runner/runner_command.rb:40:in `perform'";;;;;
"	from /home/gpallotta/.gem/gems/thor-1.3.1/lib/thor/command.rb:28:in `run'";;;;;
"	from /home/gpallotta/.gem/gems/thor-1.3.1/lib/thor/invocation.rb:127:in `invoke_command'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/command/base.rb:178:in `invoke_command'";;;;;
"	from /home/gpallotta/.gem/gems/thor-1.3.1/lib/thor.rb:527:in `dispatch'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/command/base.rb:73:in `perform'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/command.rb:71:in `block in invoke'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/command.rb:149:in `with_argv'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/command.rb:69:in `invoke'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/commands.rb:18:in `<main>'";;;;;
"	from /opt/ruby-3.3.0-1/lib/ruby/3.3.0/bundled_gems.rb:74:in `require'";;;;;
"	from /opt/ruby-3.3.0-1/lib/ruby/3.3.0/bundled_gems.rb:74:in `block (2 levels) in replace_require'";;;;;
"	from /home/gpallotta/.gem/gems/bootsnap-1.18.3/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:30:in `require'";;;;;
"	from bin/rails:4:in `<main>'";;;;;
;;;;;
>;;;;;
```;;;;;
;;;;;
If instead a block is given to the fork call, then no error occurs;;;;;
;;;;;
```;;;;;
"> echo """"fork {}"""" > script.rb"; bundle exec rails runner script.rb;;;;
;;;;;
>;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
The forked child process exits cleanly.;;;;;
;;;;;
### Actual behavior;;;;;
The forked child process exits with an error.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
"**Ruby version**: 3.3.0"",2024-03-11T16:17:12Z,2024-03-13T02:26:53Z,[]";;;;;
"2179242804,Missing Active Record encryption credential when using ActiveRecord::Encryption.without_encryption ,""### Steps to reproduce";;;;;
;;;;;
```ruby;;;;;
class SchluesselBrett < ApplicationRecord;;;;;
   encrypts :key ;;;;;
   def destroy;;;;;
     ActiveRecord::Encryption.without_encryption { super };;;;;
   end;;;;;
end;;;;;
;;;;;
Schluesselbrett.last.destroy;;;;;
```;;;;;
### Expected behavior;;;;;
Destroy should work as there are no hooks that depend on the encrypted column.;;;;;
;;;;;
We are using a custom key_provider that needs the user input of a Smartcard PIN every time an encrypted column is encrypted or decrypted.;;;;;
Destruction of a model should work without decrypting it first so that the PIN is not necessary (we accept the fact that we have to ensure ourselves that no hooks will require the encrypted field to be decrypted).;;;;;
In fact, the NullEncryptor that is used in without_encryption:;;;;;
;;;;;
```ruby;;;;;
        def without_encryption(&block);;;;;
          with_encryption_context encryptor: ActiveRecord::Encryption::NullEncryptor.new, &block;;;;;
        end;;;;;
```;;;;;
;;;;;
does not make use of the default key provider (whose initialization is the cause of the backtrace below) anyway.;;;;;
;;;;;
### Actual behavior;;;;;
```;;;;;
activerecord (7.1.3.2) lib/active_record/encryption/config.rb:43:in `block (2 levels) in <class:Config>';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/context.rb:38:in `build_default_key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/context.rb:25:in `key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/configurable.rb:17:in `key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/scheme.rb:92:in `default_key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/scheme.rb:53:in `key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:15:in `key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:147:in `decryption_options';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:90:in `block in decrypt';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/scheme.rb:69:in `with_context';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:15:in `with_context';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:85:in `decrypt';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:36:in `deserialize';;;;;
activemodel (7.1.3.2) lib/active_model/attribute.rb:175:in `type_cast';;;;;
activemodel (7.1.3.2) lib/active_model/attribute.rb:43:in `value';;;;;
activemodel (7.1.3.2) lib/active_model/attribute_set/builder.rb:43:in `fetch_value';;;;;
activerecord (7.1.3.2) lib/active_record/transactions.rb:421:in `block in restore_transaction_record_state';;;;;
activemodel (7.1.3.2) lib/active_model/attribute_set.rb:98:in `transform_values';;;;;
activemodel (7.1.3.2) lib/active_model/attribute_set.rb:98:in `map';;;;;
activerecord (7.1.3.2) lib/active_record/transactions.rb:420:in `restore_transaction_record_state';;;;;
activerecord (7.1.3.2) lib/active_record/transactions.rb:345:in `rolledback!';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:200:in `block in rollback_records';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:263:in `run_action_on_records';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:199:in `rollback_records';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:527:in `block in rollback_transaction';;;;;
activesupport (7.1.3.2) lib/active_support/concurrency/null_lock.rb:9:in `synchronize';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:520:in `rollback_transaction';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:539:in `rescue in block in within_new_transaction';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:538:in `block in within_new_transaction';;;;;
activesupport (7.1.3.2) lib/active_support/concurrency/null_lock.rb:9:in `synchronize';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:532:in `within_new_transaction';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction';;;;;
activerecord (7.1.3.2) lib/active_record/transactions.rb:361:in `with_transaction_returning_status';;;;;
activerecord (7.1.3.2) lib/active_record/transactions.rb:305:in `destroy';;;;;
```;;;;;
;;;;;
### Proposed solution;;;;;
;;;;;
local workaround is something along the lines of:;;;;;
;;;;;
```ruby;;;;;
module ActiveRecord;;;;;
  module Encryption;;;;;
    module Contexts;;;;;
...;;;;;
      class_methods do;;;;;
....  ;;;;;
        def without_encryption(&block);;;;;
          encryptor = ActiveRecord::Encryption::NullEncryptor.new;;;;;
          key_provider = ActiveRecord::Encryption::NullKeyProvider.new;;;;;
          ActiveRecord::Encryption.with_encryption_context(encryptor:, key_provider:, &block);;;;;
        end;;;;;
;;;;;
...;;;;;
;;;;;
    class NullKeyProvider;;;;;
    end;;;;;
```;;;;;
;;;;;
I'm happy to try to provide a pull request if there is hope that it will be accepted.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**:  3.2.2;;;;;
",2024-03-11T14:14:06Z,2024-04-04T11:55:19Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 126910270, 'node_id': 'MDU6TGFiZWwxMjY5MTAyNzA=', 'url': 'https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps', 'name': 'With reproduction steps', 'color': '009800', 'default': False, 'description': None}, {'id': 5511275119, 'node_id': 'LA_kwDNIULPAAAAAUh_Ym8', 'url': 'https://api.github.com/repos/rails/rails/labels/encryption', 'name': 'encryption', 'color': '8D3EA8', 'default': False, 'description': ''}]""";;;;;
"2179081656,Can't use Model.exists? with composite primary keys,""### Steps to reproduce";;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
require 'bundler/inline';;;;;
;;;;;
gemfile(true) do;;;;;
  source 'https://rubygems.org';;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
  gem 'rails';;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"  # gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
  gem 'sqlite3';;;;;
end;;;;;
;;;;;
require 'active_record';;;;;
require 'minitest/autorun';;;;;
require 'logger';;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
ActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:');;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :posts, force: true, primary_key: %i[user_id account_id] do |t|;;;;;
    t.integer 'user_id', null: false;;;;;
    t.integer 'account_id', null: false;;;;;
  end;;;;;
end;;;;;
;;;;;
class Post < ActiveRecord::Base;;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_association_stuff;;;;;
    Post.create!(user_id: 1, account_id: 1);;;;;
;;;;;
    assert_equal [1, 1], Post.find([1, 1]).id;;;;;
    assert_equal true, Post.exists?([1, 1]);;;;;
  end;;;;;
end;;;;;
;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
```exists?``` should return a boolean if a given row exist for this primary key, like it does for not composite keys.;;;;;
;;;;;
### Actual behavior;;;;;
```;;;;;
NoMethodError: undefined method `include?' for 1:Integer;;;;;
;;;;;
"        elsif statement.include?(""""?"""")";;;;;
                       ^^^^^^^^^;;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/sanitization.rb:167:in `sanitize_sql_array';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/sanitization.rb:37:in `sanitize_sql_for_conditions';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/relation/query_methods.rb:1513:in `build_where_clause';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/relation/query_methods.rb:943:in `where!';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/relation/finder_methods.rb:437:in `construct_relation_for_exists';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/relation/finder_methods.rb:366:in `exists?';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/querying.rb:23:in `exists?';;;;;
    bug_report.rb:40:in `test_association_stuff';;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**:  7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.1;;;;;
",2024-03-11T13:01:58Z,2024-03-20T01:49:50Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}]""";;;;;
"2177925782,Empty embeds when RichText is set to an empty content,""Fix #51269";;;;;
;;;;;
Action Text supports saving a RichText model with empty content. Passing _almost_ empty content (such as a space) flushes the embeds, but passing truly empty content does not. This defies expectations.;;;;;
;;;;;
This change ensures that the embeds are flushed when empty content is passed;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-10T22:05:51Z,2024-03-12T04:41:07Z,[{'id': 1180817762, 'node_id': 'MDU6TGFiZWwxMTgwODE3NzYy', 'url': 'https://api.github.com/repos/rails/rails/labels/actiontext', 'name': 'actiontext', 'color': '3bc667', 'default': False, 'description': ''}]""";;;;;
"2177865633,Using preload with composite keys can cause too many records to be read,""### Steps to reproduce";;;;;
;;;;;
Using `preload` with composite keys can cause more records to be read than are required - consider this test case:;;;;;
;;;;;
```ruby;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  gem """"activerecord"""", """"7.1.3.2""""";;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :nodes, primary_key: [:node_id, :node_version] do |t|;;;;;
    t.integer :node_id;;;;;
    t.integer :node_version;;;;;
  end;;;;;
;;;;;
  create_table :node_tags, primary_key: [:node_id, :node_version, :k], force: true do |t|;;;;;
    t.integer :node_id;;;;;
    t.integer :node_version;;;;;
    t.text :k;;;;;
  end;;;;;
end;;;;;
;;;;;
class Node < ActiveRecord::Base;;;;;
"  has_many :tags, class_name: """"NodeTag"""", query_constraints: [:node_id, :node_version], :inverse_of => :node";;;;;
end;;;;;
;;;;;
class NodeTag < ActiveRecord::Base;;;;;
  belongs_to :node, query_constraints: [:node_id, :node_version], :inverse_of => :tags;;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_preload;;;;;
    node = Node.create(id: [1, 1]);;;;;
"    node.tags.create(k: """"a"""")";;;;;
"    node.tags.create(k: """"b"""")";;;;;
    node = Node.create(id: [1, 2]);;;;;
"    node.tags.create(k: """"c"""")";;;;;
"    node.tags.create(k: """"d"""")";;;;;
    node = Node.create(id: [2, 1]);;;;;
"    node.tags.create(k: """"e"""")";;;;;
"    node.tags.create(k: """"f"""")";;;;;
;;;;;
    nodes = Node.preload(:tags);;;;;
              .where(node_id: 1, node_version: 2);;;;;
              .or(Node.where(node_id: 2, node_version: 1));;;;;
              .order(:node_id, :node_version);;;;;
;;;;;
    assert_equal 2, nodes.size;;;;;
;;;;;
    nodes.each do |node|;;;;;
      assert_equal 2, node.tags.size;;;;;
    end;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
The assertions pass, but if you look at the logged SQL for the preload you see this:;;;;;
;;;;;
```sql;;;;;
"SELECT """"node_tags"""".*";;;;;
"FROM """"node_tags""""";;;;;
"WHERE """"node_tags"""".""""node_id"""" IN (?, ?) AND """"node_tags"""".""""node_version"""" IN (?, ?)";;;;;
```;;;;;
;;;;;
where the bound ID values are 1 and 2 as are the bound version values.;;;;;
;;;;;
So not only will that read the tags for `[1, 2]` and `[2, 1]` as expected but it will also read the tags for `[1, 1]` which are not needed.;;;;;
;;;;;
Those records don't appear to get attached to any node so are presumably being discarded when the preload is matched to the original records.;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
The required records are preloaded.;;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
Extra records are preloaded.;;;;;
;;;;;
### System configuration;;;;;
;;;;;
**Rails version**: 7.1.3.2;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-10T19:14:55Z,2024-03-11T18:14:29Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2177504195,Expire caching when a download fail while proxying in ActiveStorage,""Fix #51284";;;;;
;;;;;
Both Proxy controllers in Active Storage set the caching headers early before streaming. ;;;;;
;;;;;
In some instances (see #51284), it is possible for the file download (from the service to server) to fail before we send the first byte to the client (response not yet committed). ;;;;;
;;;;;
In those instances, this change would invalidate the cache and return a better response status before closing the stream.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-10T03:28:10Z,2024-03-10T06:55:14Z,[{'id': 664533972, 'node_id': 'MDU6TGFiZWw2NjQ1MzM5NzI=', 'url': 'https://api.github.com/repos/rails/rails/labels/activestorage', 'name': 'activestorage', 'color': 'bfd4f2', 'default': False, 'description': None}]""";;;;;
"2175998435,Ensure image_processing is installed with Trix,""Currently if the Gemfile does not contain a commented out line for image_processing, or the line uses single, not double quotes, image_processing will not be installed and Trix will not be able to correctly handle image attachments.";;;;;
;;;;;
This ensures image_processing _is_ installed in those circumstances.;;;;;
;;;;;
<!--;;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
This Pull Request has been created because it is possible for the `bin/rails action_text:install` command to fail to add `image_processing` to the Gemfile if the default comment has been removed, or if the double quotes have been changed to single ones (perhaps by a Rubocop auto-fix).;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes the ActionText install script to more thoroughly ensure `image_processing` is installed.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-08T12:59:20Z,2024-03-08T13:29:29Z,[{'id': 1180817762, 'node_id': 'MDU6TGFiZWwxMTgwODE3NzYy', 'url': 'https://api.github.com/repos/rails/rails/labels/actiontext', 'name': 'actiontext', 'color': '3bc667', 'default': False, 'description': ''}]""";;;;;
"2175983514,ActiveStorage ProxyController sets Cache-Control headers on errors like FileNotFoundError,""### Steps to reproduce";;;;;
Ive observed occasional broken **representation** images on our site. After digging a little into this issue it became clear that the proxy cache in front of our application has cached a broken image. A cache purge always fixed it. ;;;;;
;;;;;
After digging a little deeper i think i found the source. The proxy cache is getting a `cache-control` header instructing it to do so by the ActiveStorage::Representations::ProxyController!;;;;;
;;;;;
Ive created a synthetic test which reproduces it. The response is successful with zero length and cache-control header set. The following test falsely passed!;;;;;
;;;;;
```ruby;;;;;
    ActiveStorage::Service::DiskService.any_instance.expects(:download).raises(ActiveStorage::FileNotFoundError);;;;;
    ;;;;;
"    get active_storage_image_url # """"/rails/active_storage/representations/proxy/...""""";;;;;
;;;;;
    assert_response :ok;;;;;
    assert_equal 'image/png', response.content_type;;;;;
"    assert_equal """"0"""", response.headers['Content-Length']";;;;;
    assert response.headers.key? 'ETag';;;;;
"    assert_equal """"max-age=3155695200, public"""", response.headers['Cache-Control']";;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
On an error like `ActiveStorage::FileNotFoundError` the response should not be successful nor should it instruct caches to cache that empty response.;;;;;
;;;;;
### Actual behavior;;;;;
On an error like `ActiveStorage::FileNotFoundError` the response is still successful (Statuscode: 200) and a cache-control header is instructing caches to cache this empty response.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.0.8;;;;;
;;;;;
**Ruby version**: 3.1.2;;;;;
",2024-03-08T12:51:45Z,2024-03-12T02:56:56Z,[{'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}, {'id': 664533972, 'node_id': 'MDU6TGFiZWw2NjQ1MzM5NzI=', 'url': 'https://api.github.com/repos/rails/rails/labels/activestorage', 'name': 'activestorage', 'color': 'bfd4f2', 'default': False, 'description': None}]""";;;;;
"2175446335,Move callsite for to lease_connection in AR::Sanitization up to `sanitize_sql_array`,""After looking at ways to refactor calls to `lease_connection`, this tiny PR came up for `sanitize_sql_array`";;;;;
"cc @byroot "",2024-03-08T07:24:29Z,2024-03-16T08:42:20Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2175354422,Transform attributes during `ActiveModel::Serialization::JSON#from_json`,""### Motivation / Background";;;;;
;;;;;
The problem;;;;;
---;;;;;
;;;;;
Loading JSON into an Active Model instance with;;;;;
`ActiveModel::Serializers:JSON#from_json` assumes that the property casings will match the class attribute casings. This works well with snake_casing, since idiomatic Ruby methods are snake_cased.;;;;;
;;;;;
When `#from_json` loads JSON properties that are camelCased, it silently ignores them:;;;;;
;;;;;
```ruby;;;;;
class Person;;;;;
  include ActiveModel::Serializers::JSON;;;;;
;;;;;
  attr_accessor :name, :born_on;;;;;
;;;;;
  def attributes=(hash);;;;;
"    hash.each { |key, value| send(""""#{key}="""", value) }";;;;;
  end;;;;;
end;;;;;
;;;;;
payload <<~JSON;;;;;
"  { """"name"""": """"Alice"""", """"bornOn"""": """"2024-03-08"""" }";;;;;
JSON;;;;;
;;;;;
person = Person.new.from_json(payload);;;;;
"person.name     # => """"Alice""""";;;;;
person.born_on  # => nil;;;;;
```;;;;;
;;;;;
### Detail;;;;;
;;;;;
The proposal;;;;;
---;;;;;
;;;;;
This commit proposes extending `#from_json` to accept a block. After the JSON string is decoded (and un-nested from its root, depending on the model's configuration), yield the `Hash` to a block if one is passed as an argument:;;;;;
;;;;;
```ruby;;;;;
payload <<~JSON;;;;;
"  { """"name"""": """"Alice"""", """"bornOn"""": """"2024-03-08"""" }";;;;;
JSON;;;;;
;;;;;
person = Person.new.from_json(payload) { _1.deep_transform_keys!(&:underscore) };;;;;
"person.name     # => """"Alice""""";;;;;
"person.born_on  # => """"2024-03-08""""";;;;;
```;;;;;
;;;;;
Supporting a block can be useful for context-specific overrides. If a class needs to provide a default transformation, it can override `#from_json`:;;;;;
;;;;;
```ruby;;;;;
class PersonFromCamelCaseAPI < Person;;;;;
  def from_json(*, &block);;;;;
    default_transform = proc { _1.deep_transform_keys!(&:underscore) };;;;;
;;;;;
    super(*, &(block || defaul_transform));;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
Without built-in support for transforming camelCased properties into snake_cased attributes, callers are responsible decoding the JSON themselves. In addition to the key transformations, they're also responsible for re-creating both the JSON decoding *and* the configurable root un-nesting provided by `#from_json`:;;;;;
;;;;;
```ruby;;;;;
payload <<~JSON;;;;;
"  { """"name"""": """"Alice"""", """"bornOn"""": """"2024-03-08"""" }";;;;;
JSON;;;;;
;;;;;
attributes = ActiveSupport::JSON.decode(payload);;;;;
attributes.deep_transform_keys!(&:underscore);;;;;
person = Person.new(attributes);;;;;
"person.name     # => """"Alice""""";;;;;
"person.born_on  # => """"2024-03-08""""";;;;;
;;;;;
nested_payload <<~JSON;;;;;
"  { """"person"""": { """"name"""": """"Alice"""", """"bornOn"""": """"2024-03-08"""" } }";;;;;
JSON;;;;;
;;;;;
attributes = ActiveSupport::JSON.decode(nested_payload);;;;;
attributes.deep_transform_keys!(&:underscore);;;;;
"person = Person.new(attributes[""""person""""])";;;;;
"person.name     # => """"Alice""""";;;;;
"person.born_on  # => """"2024-03-08""""";;;;;
```;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-08T06:18:38Z,2024-03-08T06:20:19Z,[{'id': 107190, 'node_id': 'MDU6TGFiZWwxMDcxOTA=', 'url': 'https://api.github.com/repos/rails/rails/labels/activemodel', 'name': 'activemodel', 'color': '00E5FF', 'default': False, 'description': None}]""";;;;;
"2174963549,Unnecessary auto save is triggered for polymorphic has_one defined in child class using single-table inheritance,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
This bug is directly related to https://github.com/rails/rails/issues/44986.;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :pictures, force: true do |t|;;;;;
    t.references :imageable, polymorphic: true;;;;;
  end;;;;;
;;;;;
  create_table :employees, force: true do |t|;;;;;
    t.string :type;;;;;
    t.string :name;;;;;
  end;;;;;
end;;;;;
;;;;;
class Picture < ActiveRecord::Base;;;;;
;;;;;
  belongs_to :imageable, polymorphic: true, optional: true;;;;;
;;;;;
  after_save :count_saves;;;;;
;;;;;
  def count_saves;;;;;
    @count ||= 0;;;;;
    @count += 1;;;;;
  end;;;;;
;;;;;
end;;;;;
;;;;;
class Employee < ActiveRecord::Base;;;;;
;;;;;
end;;;;;
;;;;;
class CaliforniaEmployee < Employee;;;;;
;;;;;
  has_one :picture, as: :imageable;;;;;
;;;;;
end;;;;;
;;;;;
class ArizonaEmployee < Employee;;;;;
;;;;;
  has_one :picture, as: :imageable;;;;;
;;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
;;;;;
  def test_association_not_saved_on_update;;;;;
    picture = Picture.create!;;;;;
;;;;;
"    cali_employee = CaliforniaEmployee.create!(name: """"Cali"""", picture: picture)";;;;;
;;;;;
"    cali_employee.update!(name: """"Cali Fornia"""")";;;;;
;;;;;
"    assert_equal """"Employee"""", picture.imageable_type";;;;;
    assert_equal cali_employee.id, picture.imageable_id;;;;;
;;;;;
    # Saves on create of picture and create of employee;;;;;
    assert_equal 2, picture.instance_variable_get(:@count);;;;;
  end;;;;;
;;;;;
  def test_association_saved_on_actual_model_change;;;;;
    picture = Picture.create!;;;;;
;;;;;
"    CaliforniaEmployee.create!(name: """"Cali"""", picture: picture)";;;;;
"    az_employee = ArizonaEmployee.create!(name: """"Arizona"""")";;;;;
;;;;;
    az_employee.update!(picture: picture);;;;;
;;;;;
"    assert_equal """"Employee"""", picture.imageable_type";;;;;
    assert_equal az_employee.id, picture.imageable_id;;;;;
;;;;;
    # Saves on create of picture, create of cali employee, and update to az employee;;;;;
    assert_equal 3, picture.instance_variable_get(:@count);;;;;
  end;;;;;
;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
<!-- Tell us what should happen -->;;;;;
;;;;;
There is no reason to trigger a save on the Picture record when updating a field on CaliforniaEmployee, since the picture record is already correctly pointing at the existing Employee.;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
;;;;;
`inverse_polymorphic_association_changed?` is returning true for this use case causing a subsequent autosave to be triggered on Picture, leading to a failure in both test cases:;;;;;
;;;;;
```;;;;;
Failure:;;;;;
BugTest#test_association_not_saved_on_update [rails-issue.rb:73]:;;;;;
Expected: 2;;;;;
  Actual: 3;;;;;
;;;;;
Failure:;;;;;
BugTest#test_association_saved_on_actual_model_change [rails-issue.rb:85]:;;;;;
Expected: 3;;;;;
  Actual: 4;;;;;
```;;;;;
;;;;;
### Additional Context;;;;;
;;;;;
This appears to specifically fail when the has_one is defined on a child class using Single-table Inheritance. If the `has_one` in the test case above is moved up to the `Employee` model, then the expectation will pass.;;;;;
;;;;;
The issue appears to be here: https://github.com/rails/rails/blob/83702d64c80637cc0debc3917c3419d327f8ee1b/activerecord/lib/active_record/autosave_association.rb#L495-L497.;;;;;
;;;;;
That currently reads the class for the record from the `foreign_type` and then attempts to convert it to the right class for polymorphic relationships, but I believe this is unnecessary, since it already would have been converted to the correct type when set.;;;;;
;;;;;
Instead `reflection.active_record` should actually be updated to use the `polymorphic_name` otherwise we risk looking at the wrong model name that would be ultimately saved.;;;;;
;;;;;
Updating line 497 to this gets these test cases passing for me:;;;;;
;;;;;
```;;;;;
reflection.active_record.polymorphic_name != class_name;;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2, main;;;;;
;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-07T22:52:04Z,2024-03-18T17:47:48Z,[]
2173610664,Fix redundant resource_route Invocations in scaffold generator,### Motivation / Background";;;;;
;;;;;
This PR comes form [this comment](https://github.com/rails/rails/pull/50335#pullrequestreview-1776597506). The rails generate scaffold command triggers the resource_route hook twice.;;;;;
;;;;;
```;;;;;
% bin/rails generate scaffold Post name:string;;;;;
      invoke  active_record;;;;;
      create    db/migrate/20240303140443_create_posts.rb;;;;;
      create    app/models/post.rb;;;;;
      invoke    test_unit;;;;;
      create      test/models/post_test.rb;;;;;
      create      test/fixtures/posts.yml;;;;;
      invoke  resource_route;;;;;
       route    resources :posts;;;;;
      invoke  scaffold_controller;;;;;
      create    app/controllers/posts_controller.rb;;;;;
      invoke    erb;;;;;
      create      app/views/posts;;;;;
      create      app/views/posts/index.html.erb;;;;;
      create      app/views/posts/edit.html.erb;;;;;
      create      app/views/posts/show.html.erb;;;;;
      create      app/views/posts/new.html.erb;;;;;
      create      app/views/posts/_form.html.erb;;;;;
      create      app/views/posts/_post.html.erb;;;;;
      invoke    resource_route;;;;;
      invoke    test_unit;;;;;
      create      test/controllers/posts_controller_test.rb;;;;;
      create      test/system/posts_test.rb;;;;;
      invoke    helper;;;;;
      create      app/helpers/posts_helper.rb;;;;;
      invoke      test_unit;;;;;
      invoke    jbuilder;;;;;
      create      app/views/posts/index.json.jbuilder;;;;;
      create      app/views/posts/show.json.jbuilder;;;;;
      create      app/views/posts/_post.json.jbuilder;;;;;
```;;;;;
;;;;;
Despite setting the --skip-routes option, which is a feature of the ScaffoldControllerGenerator designed to prevent route generation, the command still produces routes.;;;;;
;;;;;
```;;;;;
% bin/rails g scaffold Post name:string --skip-routes;;;;;
      invoke  active_record;;;;;
      create    db/migrate/20240306035406_create_posts.rb;;;;;
      create    app/models/post.rb;;;;;
      invoke    test_unit;;;;;
      create      test/models/post_test.rb;;;;;
      create      test/fixtures/posts.yml;;;;;
      invoke  resource_route;;;;;
       route    resources :posts;;;;;
      invoke  scaffold_controller;;;;;
      create    app/controllers/posts_controller.rb;;;;;
      invoke    erb;;;;;
      create      app/views/posts;;;;;
      create      app/views/posts/index.html.erb;;;;;
      create      app/views/posts/edit.html.erb;;;;;
      create      app/views/posts/show.html.erb;;;;;
      create      app/views/posts/new.html.erb;;;;;
      create      app/views/posts/_form.html.erb;;;;;
      create      app/views/posts/_post.html.erb;;;;;
      invoke    resource_route;;;;;
      invoke    test_unit;;;;;
      create      test/controllers/posts_controller_test.rb;;;;;
      create      test/system/posts_test.rb;;;;;
      invoke    helper;;;;;
      create      app/helpers/posts_helper.rb;;;;;
      invoke      test_unit;;;;;
      invoke    jbuilder;;;;;
      create      app/views/posts/index.json.jbuilder;;;;;
      create      app/views/posts/show.json.jbuilder;;;;;
      create      app/views/posts/_post.json.jbuilder;;;;;
```;;;;;
;;;;;
### Detail;;;;;
Following three parts of the code are related to multiple invocation of resource_route.;;;;;
;;;;;
- `hook_for :resource_route` within the ResourceGenerator, from which the ScaffoldGenerator inherits;;;;;
- `class_option :resource_route` in ScaffoldGenerator;;;;;
- `hook_for :resource_route` in ScaffoldControllerGenerator which is invoked by `hook_for :scaffold_controller` in ScaffoldGenerator;;;;;
;;;;;
The resource_route hook within ScaffoldGenerator has been removed with remove_hook_for to ensure that the hook is called exclusively within the scaffold_controller hook.;;;;;
The `class_option :resource_route, type: :boolean` has also been removed. Despite the removal of the resource_route hook in ScaffoldGenerator, invoking `class_option :resource_route` was still indirectly triggering resource_route.;;;;;
This occurred due to a combination of the following reasons:;;;;;
;;;;;
- generator classes, which inherit from Thor::Group, execute all defined public instance methods upon command execution.;;;;;
- the hook_for method utilizes invoke_from_option, a method defined in Thor::Group to dynamically defines an invoke_from_option_* method at runtime, which persists even if remove_hook_for is called.;;;;;
  - https://github.com/rails/thor/blob/a43d92fad7ebd77d359b7b96eb3db8a73ef9057c/lib/thor/group.rb#L124;;;;;
- the invoke_from_option_* method returns early when the option isn't available but `class_option :resource_route` in ScaffoldGeneratore makes the option available and Rails sets the resource_route option as default.;;;;;
  - https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/railties/lib/rails/generators.rb#L56;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-07T11:11:06Z,2024-03-30T06:24:07Z,[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2173181848,Kebabcase puma-dev configuration suggestion in bin/seutp,""Following up on #51266. Trying to make sure the suggested `puma-dev` setup introduced in #51088 works out of the box.";;;;;
;;;;;
Creating a fresh app with `rails new --main AppName` (or any multi-word app name) will still give us the error message:;;;;;
;;;;;
![image](https://github.com/rails/rails/assets/986290/7dd53909-8566-45ac-960c-84b58f3526a9);;;;;
;;;;;
"This PR simply kebabcases the `puma-dev` symlink suggested in `bin/setup`, making it work without additional configuration."",2024-03-07T07:40:07Z,2024-03-07T07:40:11Z,""[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2172885664,Add escape_html_entities option to JSON encoder,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
This Pull Request has been created because I sometimes want to override the global `Encoding.escape_html_entities_in_json` option for specific call sites.;;;;;
;;;;;
Where I work, we tend to embed JSON in HTML, so the default html entity escaping is appreciated. But there are some cases where we'd like to turn it off.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes ActiveSupport's JSON encoding code to accept an optional flag for whether or not to escape HTML entities (`escape_html_entities`). If not supplied, the existing global configuration flag will be used instead.;;;;;
;;;;;
The idea is to make the following possible:;;;;;
;;;;;
```ruby;;;;;
class MyController < ApplicationController;;;;;
  def index;;;;;
    render json: { some: '<data>' }, escape_html_entities: false;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->;;;;;
Sorry to show up with a code change out of the blue. I did a weird monkey patch like this in our codebase at work to solve a problem, and it seemed easy to upstream so I'm submitting this PR just in case. No hard feelings if it doesn't seem reasonable.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [ x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [ x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
;;;;;
",2024-03-07T03:49:36Z,2024-03-07T03:49:40Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}]""";;;;;
"2172771713,Enable Hash#compact_blank inside ActiveSupport::LogSubscriber,""### Motivation / Background";;;;;
Using ActiveSupport::LogSubscriber#color inside a custom log subscriber causes NoMethodError.;;;;;
;;;;;
### Detail;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  gem """"activesupport""""";;;;;
end;;;;;
;;;;;
"require """"active_support""""";;;;;
;;;;;
class TestLogSubscriber < ActiveSupport::LogSubscriber;;;;;
  attach_to :test;;;;;
;;;;;
  def hi(event);;;;;
    info(color(event.payload[:message], GREEN));;;;;
  end;;;;;
;;;;;
  private;;;;;
    def log_exception(name, e);;;;;
      super;;;;;
      raise e;;;;;
    end;;;;;
end;;;;;
;;;;;
ActiveSupport::LogSubscriber.logger = ActiveSupport::Logger.new(STDOUT);;;;;
"ActiveSupport::Notifications.instrument(""""hi.test"""", message: """"Hello!"""")";;;;;
```;;;;;
;;;;;
```;;;;;
/rails/activesupport/lib/active_support/log_subscriber.rb:193:in `mode_from': undefined method `compact_blank' for an instance of Hash (NoMethodError);;;;;
    ;;;;;
      modes = MODES.values_at(*options.compact_blank.keys);;;;;
                                      ^^^^^^^^^^^^^^;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
I have encountered this while using kredis locally, like;;;;;
;;;;;
```;;;;;
$ cd kredis;;;;;
$ bin/console;;;;;
"irb(main):001> Kredis.string """"mystring""""";;;;;
"Could not log """"meta.kredis"""" event. NoMethodError: undefined method `compact_blank' for an instance of Hash";;;;;
```;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-07T01:39:16Z,2024-03-11T23:11:21Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}]""";;;;;
"2172603548,ActionText::RichText attachments not cleaned up when content made empty,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails""""";;;;;
;;;;;
  gem 'debug';;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"  # gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record/railtie""""";;;;;
"require """"active_storage/engine""""";;;;;
"require """"action_text/engine""""";;;;;
"require """"tmpdir""""";;;;;
;;;;;
class TestApp < Rails::Application;;;;;
  config.load_defaults Rails::VERSION::STRING.to_f;;;;;
;;;;;
  config.root = __dir__;;;;;
"  config.hosts << """"example.org""""";;;;;
  config.eager_load = false;;;;;
"  config.session_store :cookie_store, key: """"cookie_store_key""""";;;;;
"  config.secret_key_base = """"secret_key_base""""";;;;;
;;;;;
  config.logger = Logger.new($stdout);;;;;
  Rails.logger  = config.logger;;;;;
;;;;;
  config.active_storage.service = :local;;;;;
  config.active_storage.service_configurations = {;;;;;
    local: {;;;;;
      root: Dir.tmpdir,;;;;;
"      service: """"Disk""""";;;;;
    };;;;;
  };;;;;
end;;;;;
;;;;;
"ENV[""""DATABASE_URL""""] = """"sqlite3::memory:""""";;;;;
;;;;;
Rails.application.initialize!;;;;;
;;;;;
"require ActiveStorage::Engine.root.join(""""db/migrate/20170806125915_create_active_storage_tables.rb"""").to_s";;;;;
"require ActionText::Engine.root.join(""""db/migrate/20180528164100_create_action_text_tables.rb"""").to_s";;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  CreateActiveStorageTables.new.change;;;;;
  CreateActionTextTables.new.change;;;;;
;;;;;
  create_table :users, force: true;;;;;
end;;;;;
;;;;;
class User < ActiveRecord::Base;;;;;
  has_rich_text :description;;;;;
end;;;;;
;;;;;
"require """"minitest/autorun""""";;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_rich_text_embed_behaviour;;;;;
    attached = ActiveStorage::Blob.create_and_upload!(;;;;;
      io: ::StringIO.new('dummy'),;;;;;
"      filename: 'dummy.txt""""',";;;;;
      content_type: 'text/plain',;;;;;
    );;;;;
;;;;;
"    user = User.create!(description: ActionText::Content.new(""""hello"""").append_attachables(attached))";;;;;
;;;;;
    assert_equal 1, user.description.embeds.size;;;;;
;;;;;
    user.description = ActionText::Content.new('');;;;;
;;;;;
    user.save;;;;;
;;;;;
    assert_empty user.description.embeds;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
When the body of an ActionText::RichText object is set to the empty string.  I would expect attachments to be cleaned up.;;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
ActiveStorage attachments `ActionText::RichText.embeds` are retained until the body is modified to contain some data ;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: Rails 7.1.3.2 [source code is unchanged on mainline](https://github.com/rails/rails/blob/2fa3294618eba90e095020620ca9584190c2ec8e/actiontext/app/models/action_text/rich_text.rb#L55) ;;;;;
;;;;;
**Ruby version**: ruby 3.2.3;;;;;
",2024-03-06T23:13:33Z,2024-03-12T02:56:38Z,[{'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}, {'id': 1180817762, 'node_id': 'MDU6TGFiZWwxMTgwODE3NzYy', 'url': 'https://api.github.com/repos/rails/rails/labels/actiontext', 'name': 'actiontext', 'color': '3bc667', 'default': False, 'description': ''}]""";;;;;
"2171578747,ActionCable::Channel::Broadcasting.serialize_broadcasting leads to unintentional very wide broadcast,""### Steps to reproduce";;;;;
Please consider the following code:;;;;;
;;;;;
```ruby;;;;;
class User < ApplicationRecord;;;;;
  # ...;;;;;
end;;;;;
;;;;;
class Foo;;;;;
  include ActiveModel::Model;;;;;
;;;;;
  def initialize(user:, type:);;;;;
    @user = user;;;;;
    @type = type.to_s;;;;;
  end;;;;;
;;;;;
  def self.find(foo_id);;;;;
"    id, type = foo_id.split("""":"""", 2)";;;;;
    new(user: User.find(id), type: type);;;;;
  end;;;;;
;;;;;
  def id;;;;;
"    """"#{@user.id}:#{type}""""";;;;;
  end;;;;;
;;;;;
  # ... more methods that make Foo actually useful;;;;;
end;;;;;
;;;;;
class FooChannel < ApplicationCable::Channel;;;;;
  def subscribed;;;;;
    foo = Foo.find(params[:foo_id]);;;;;
    authorize foo, :subscribe? # (Pundit);;;;;
    stream_for foo;;;;;
  end;;;;;
;;;;;
  def self.notify_patch(foo);;;;;
"    payload = { event: :patched, id: foo.id, type: """"Foo"""" }";;;;;
    broadcast_to(foo, payload);;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
It is possible to subscribe to patch-events for instances of Foo.;;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
So what happens is that we will fetch the `foo`. This is successful; no exception is raised. We then call `authorize` to see if the `current_user` may subscribe to events on this channel for this resource. `authorize` will raise an exception if it is not allowed; in this example it doesn't; we're on the happy path. And after that we call `stream_for` which **seems** to work fine... We can subscribe and we can call `notify_patch` to send our events.;;
;;;;;
"But there is a subtle issue with this code. `stream_for` has called `broadcasting_for` to generate a unique ID for the stream, but that ID appears to be `""""FooChannel:nil""""` which is really not unique at all!";;;;;
;;;;;
`broadcast_to` also calls `broadcasting_for` returning the same not-so-unique ID. The result is that **every `FooChannel.notify_patch`-event** gets broadcasted to **all `FooChannel`-subscribers**.;;;;;
;;;;;
The reason for this is easy to find:;;;;;
[`broadcasting_for`](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/actioncable/lib/action_cable/channel/broadcasting.rb#L24) calls [`serialize_broadcasting`](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/actioncable/lib/action_cable/channel/broadcasting.rb#L29) which in turn calls [`to_param`](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/actioncable/lib/action_cable/channel/broadcasting.rb#L36) on our `foo`-object. Our foo-object isn't persisted, or in other words: `foo#persisted?` implemented by [`ActiveModel::API#persisted?`](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/activemodel/lib/active_model/api.rb#L95) returns `false`. This makes `foo.to_param` implemented by [`ActiveModel::Conversion#to_param`](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/activemodel/lib/active_model/conversion.rb#L90) return `nil`.;;;;;
;;;;;
Quick solutions for this are easy to produce:;;;;;
;;;;;
1. We could update our implementation of `persisted?`;;;;;
;;;;;
```ruby;;;;;
class Foo;;;;;
  def persisted?;;;;;
    @user.persisted?;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
2. we could also call `stream_for foo.id` and `broadcast_to(foo.id, payload)`;;;;;
3. we could also rewrite `Foo#to_param`;;;;;
4. etcetera.;;;;;
;;;;;
What's *not* easy is figuring out that you are in fact broadcasting all events to everyone.  We gave it some thought but we didn't come up with a solid solution that would prevent this from happening again with the next channel. (`BarChannel` obviously 😄). It's really easy to make the same mistake again and it's not easy to detect if you do.;;;;;
;;;;;
The root cause, from one point of view, is that fetching and authorization are ultimately dependent on an `id`, but that streaming uses `#to_param`. If it could call `#id` instead this would not have happened; but it can't, because `stream_for(model, callback = nil, coder: nil, &block)` basically allows anything as its `model`-parameter. Is this intentional?;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-06T13:57:46Z,2024-03-06T13:57:46Z,[]
2170621291,Default Active Storage strict loading to strict_loading_by_default,### Motivation / Background";;;;;
;;;;;
While Active Storage supports strict loading, it [defaults to false](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/activestorage/lib/active_storage/attached/model.rb#L106). This can be problematic in applications that enforce strict loading by default. It can be assumed that `strict_loading_by_default` includes Active Storage attachments, leading to n+1 issues.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes the default of the `strict_loading` keyword parameter for `has_one_attached` and  `has_many_attached` to use the model's `strict_loading_by_default` to create a consistent developer experience.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-06T04:39:05Z,2024-03-06T04:39:09Z,[{'id': 664533972, 'node_id': 'MDU6TGFiZWw2NjQ1MzM5NzI=', 'url': 'https://api.github.com/repos/rails/rails/labels/activestorage', 'name': 'activestorage', 'color': 'bfd4f2', 'default': False, 'description': None}]""";;;;;
"2170562786,Add support for pattern matching for parameters,""### Motivation / Background";;;;;
;;;;;
I have some RESTful endpoints where it makes sense to pattern match params to deal with different shape of incoming payloads, as illustrated in this endpoint:;;;;;
;;;;;
```ruby;;;;;
def create;;;;;
  case params;;;;;
  in interview_time_availability: { interview_time_id:, person_id: };;;;;
    @interview_time_availabilities.create! interview_time_id:, person_id:;;;;;
  in interview_time: { id: };;;;;
    @students.each do |student|;;;;;
      student.interview_time_availabilities.create interview_time_id: id;;;;;
    end;;;;;
  end;;;;;
;;;;;
  redirect_to students_interview_time_availabilities_path;;;;;
end;;;;;
```;;;;;
;;;;;
### Detail;;;;;
;;;;;
This PR adds a `deconstruct_keys(keys)` method on `StrongParameters` that called `to_unsafe_h` for pattern matching:;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [X] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-06T03:36:54Z,2024-03-11T16:19:18Z,[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}]""";;;;;
"2170466905,has_many relation with joins adding redundant inverse inner join,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
Have the following set of related models, and use the `reverse_dependencies` relation. Observe (via the inline comments in the test case below) that there is an unnecessary/redundant join;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
#!/usr/bin/env ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile do;;;;;
"  source """"https://rubygems.org""""";;;;;
  ;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
  ;;;;;
"  gem """"rails"""", """"~> 7.1.0""""";;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"# gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
  ;;;;;
"  gem """"sqlite3""""";;;;;
  ;;;;;
"  gem 'anbt-sql-formatter', require: """"anbt-sql-formatter/formatter""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :rubygems, force: true do |t|;;;;;
  end;;;;;
  ;;;;;
  create_table :versions, force: true do |t|;;;;;
    t.belongs_to :rubygem;;;;;
    t.integer :position;;;;;
    t.boolean :indexed;;;;;
  end;;;;;
  ;;;;;
  create_table :gem_downloads, force: true do |t|;;;;;
    t.belongs_to :rubygem;;;;;
    t.belongs_to :version, null: true;;;;;
    t.integer :count;;;;;
  end;;;;;
  ;;;;;
  create_table :dependencies, force: true do |t|;;;;;
    t.belongs_to :rubygem;;;;;
    t.belongs_to :version;;;;;
  end;;;;;
end;;;;;
;;;;;
class Rubygem < ActiveRecord::Base;;;;;
  has_many :incoming_dependencies, lambda {;;;;;
                                      joins(:version).where(versions: { indexed: true, position: 0 });;;;;
"                                    }, class_name: """"Dependency"""", inverse_of: :rubygem";;;;;
  has_many :reverse_dependencies, through: :incoming_dependencies, source: :version_rubygem;;;;;
  ;;;;;
  has_many :versions;;;;;
  ;;;;;
  has_many :incoming_dependencies_no_join, lambda {;;;;;
                                      where(versions: { indexed: true, position: 0 });;;;;
"                                    }, class_name: """"Dependency"""", inverse_of: :rubygem";;;;;
  has_many :reverse_dependencies_no_join, through: :incoming_dependencies_no_join, source: :version_rubygem;;;;;
end;;;;;
;;;;;
class Dependency < ActiveRecord::Base;;;;;
  belongs_to :rubygem, optional: true;;;;;
  belongs_to :version;;;;;
  has_one :version_rubygem, through: :version, source: :rubygem;;;;;
end;;;;;
;;;;;
class Version < ActiveRecord::Base;;;;;
  belongs_to :rubygem, touch: true;;;;;
"  has_many :dependencies, -> { order(""""rubygems.name ASC"""").includes(:rubygem) }, dependent: :destroy, inverse_of: :version";;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_assoc_1;;;;;
    rubygem1 = Rubygem.create!;;;;;
    v1 = Version.create!(indexed: true, position: 0, rubygem: rubygem1);;;;;
    rubygem2 = Rubygem.create!;;;;;
    v2 = Version.create!(indexed: true, position: 0, rubygem: rubygem2);;;;;
    d = v2.dependencies.create!(rubygem: rubygem1);;;;;
    ;;;;;
    puts Rails.version;;;;;
    ;;;;;
    # SELECT;;;;;
"    #   """"rubygems"""" . *";;;;;
    #   FROM;;;;;
"    #   """"rubygems""""";;;;;
"    #   INNER JOIN """"versions""""";;;;;
"    #     ON """"rubygems"""".""""id"""" = """"versions"""".""""rubygem_id""""";;;;;
"    #   INNER JOIN """"dependencies""""";;;;;
"    #     ON """"versions"""".""""id"""" = """"dependencies"""".""""version_id""""";;;;;
"    #   INNER JOIN """"versions"""" """"versions_dependencies""""";;;;;
"    #     ON """"versions_dependencies"""".""""id"""" = """"dependencies"""".""""version_id""""";;;;;
    #   WHERE;;;;;
"    #   """"dependencies"""".""""rubygem_id"""" = ?";;;;;
"    #   AND """"versions"""".""""indexed"""" = ?";;;;;
"    #   AND """"versions"""".""""position"""" = ?";;;;;
      ;;;;;
    puts mu_pp(rubygem1.reverse_dependencies.arel);;;;;
    ;;;;;
    assert_equal [rubygem2], rubygem1.reverse_dependencies;;;;;
    assert_equal rubygem1.reverse_dependencies_no_join, rubygem1.reverse_dependencies;;;;;
    ;;;;;
    # Failure:;;;;;
    # BugTest#test_assoc_1 [Untitled.rb:118]:;;;;;
    # --- expected;;;;;
    # +++ actual;;;;;
    # @@ -109,6 +109,53 @@;;;;;
    #           #<ActiveRecord::TypeCaster::Map:0xXXXXXX;;;;;
    #           @klass=;;;;;
    #           Dependency(id: integer, rubygem_id: integer, version_id: integer)>>,;;;;;
"    # +               name=""""version_id"""">>>>,";;;;;
    # +        #<Arel::Nodes::InnerJoin:0xXXXXXX;;;;;
    # +         @left=;;;;;
    # +          #<Arel::Nodes::TableAlias:0xXXXXXX;;;;;
    # +           @left=;;;;;
    # +            #<Arel::Table:0xXXXXXX;;;;;
    # +             @klass=;;;;;
    # +              Version(id: integer, rubygem_id: integer, position: integer, indexed: boolean),;;;;;
"    # +             @name=""""versions"""",";;;;;
    # +             @table_alias=nil,;;;;;
    # +             @type_caster=;;;;;
    # +              #<ActiveRecord::TypeCaster::Map:0xXXXXXX;;;;;
    # +               @klass=;;;;;
    # +                Version(id: integer, rubygem_id: integer, position: integer, indexed: boolean)>>,;;;;;
"    # +           @right=""""versions_dependencies"""">,";;;;;
    # +         @right=;;;;;
    # +          #<Arel::Nodes::On:0xXXXXXX;;;;;
    # +           @expr=;;;;;
    # +            #<Arel::Nodes::Equality:0xXXXXXX;;;;;
    # +             @left=;;;;;
    # +              #<struct Arel::Attributes::Attribute;;;;;
    # +               relation=;;;;;
    # +                #<Arel::Nodes::TableAlias:0xXXXXXX;;;;;
    # +                 @left=;;;;;
    # +                  #<Arel::Table:0xXXXXXX;;;;;
    # +                   @klass=;;;;;
    # +                    Version(id: integer, rubygem_id: integer, position: integer, indexed: boolean),;;;;;
"    # +                   @name=""""versions"""",";;;;;
    # +                   @table_alias=nil,;;;;;
    # +                   @type_caster=;;;;;
    # +                    #<ActiveRecord::TypeCaster::Map:0xXXXXXX;;;;;
    # +                     @klass=;;;;;
    # +                      Version(id: integer, rubygem_id: integer, position: integer, indexed: boolean)>>,;;;;;
"    # +                 @right=""""versions_dependencies"""">,";;;;;
"    # +               name=""""id"""">,";;;;;
    # +             @right=;;;;;
    # +              #<struct Arel::Attributes::Attribute;;;;;
    # +               relation=;;;;;
    # +                #<Arel::Table:0xXXXXXX;;;;;
    # +                 @klass=;;;;;
    # +                  Dependency(id: integer, rubygem_id: integer, version_id: integer),;;;;;
"    # +                 @name=""""dependencies"""",";;;;;
    # +                 @table_alias=nil,;;;;;
    # +                 @type_caster=;;;;;
    # +                  #<ActiveRecord::TypeCaster::Map:0xXXXXXX;;;;;
    # +                   @klass=;;;;;
    # +                    Dependency(id: integer, rubygem_id: integer, version_id: integer)>>,;;;;;
"    #         name=""""version_id"""">>>>]>,";;;;;
    #   @wheres=;;;;;
    #     [#<Arel::Nodes::And:0xXXXXXX;;;;;
    # @@ -213,6 +260,8 @@;;;;;
"    #     ON """"rubygems"""".""""id"""" = """"versions"""".""""rubygem_id""""";;;;;
"    #   INNER JOIN """"dependencies""""";;;;;
"    #     ON """"versions"""".""""id"""" = """"dependencies"""".""""version_id""""";;;;;
"    # +    INNER JOIN """"versions"""" """"versions_dependencies""""";;;;;
"    # +      ON """"versions_dependencies"""".""""id"""" = """"dependencies"""".""""version_id""""";;;;;
    #   WHERE;;;;;
"    #   """"dependencies"""".""""rubygem_id"""" = ?";;;;;
"    #   AND """"versions"""".""""indexed"""" = ?";;;;;
      ;;;;;
    assert_equal rubygem1.reverse_dependencies_no_join.arel.ast, rubygem1.reverse_dependencies.arel.ast;;;;;
  end;;;;;
  ;;;;;
;;;;;
  def test_assoc_2;;;;;
    rubygem1 = Rubygem.create!;;;;;
    v1 = Version.create!(indexed: true, position: 0, rubygem: rubygem1);;;;;
    rubygem2 = Rubygem.create!;;;;;
    v2 = Version.create!(indexed: true, position: 0, rubygem: rubygem2);;;;;
    d = v2.dependencies.create!(rubygem: rubygem1);;;;;
    ;;;;;
    assert_equal [d], rubygem1.incoming_dependencies;;;;;
    # shows that the joins is necessary;;;;;
    assert_raises(ActiveRecord::StatementInvalid) { rubygem1.incoming_dependencies_no_join.to_a };;;;;
  end;;;;;
  ;;;;;
  def mu_pp(obj);;;;;
    case obj;;;;;
    when Arel::Nodes::SelectStatement;;;;;
      rule = AnbtSql::Rule.new;;;;;
      rule.keyword = AnbtSql::Rule::KEYWORD_UPPER_CASE;;;;;
"      rule.kw_multi_words << """"INNER JOIN""""";;;;;
"      rule.kw_nl_x << """"INNER JOIN""""";;;;;
"      rule.indent_string = """"  """"";;;;;
      ;;;;;
"      [""""AST:"""", obj.pretty_inspect, """"SQL:"""",";;;;;
"        AnbtSql::Formatter.new(rule).format(obj.to_sql)].join(""""\n\n"""")";;;;;
    else;;;;;
      obj.pretty_inspect;;;;;
    end;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
"The additional join should not be added, since it's an inner join and the `""""versions"""".""""id"""" = """"dependencies"""".""""version_id""""` restriction guarantees it does not add any additional filtering";;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
"There is an unused join to `""""versions"""" """"versions_dependencies""""`";;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.3.0;;;;;
",2024-03-06T01:49:42Z,2024-03-06T01:49:42Z,[]
2169291575,ActiveRecord::Encryption is encrypting/filtering other similar named attributes,### Steps to reproduce";;;;;
;;;;;
#NOM?;;;;;
```bash;;;;;
  bin/rails g model User first_name last_name email other_first_name;;;;;
  bin/rails db:migrate;;;;;
```;;;;;
#NOM?;;;;;
```ruby;;;;;
User.encrypts(:first_name);;;;;
```;;;;;
;;;;;
#NOM?;;;;;
```ruby;;;;;
"user = User.new(first_name: """"Hello"""", last_name: """"World"""", other_first_name: """"Hi"""")";;;;;
;;;;;
# This outputs;;;;;
"=> #<User:0x000000010c5ea648 id: nil, first_name: """"[FILTERED]"""", last_name: """"World"""", email: nil, other_first_name: """"[FILTERED]"""", created_at: nil, updated_at: nil>";;;;;
;;;;;
# Encrypted attributes only has :first_name in the set;;;;;
User.encrypted_attributes;;;;;
=> <Set: {:first_name}>;;;;;
```;;;;;
"<img width=""""654"""" alt=""""Screenshot 2024-03-05 at 7 21 18 PM"""" src=""""https://github.com/rails/rails/assets/27268721/bbb18517-a068-4982-97ea-39cbd5f492a5"""">";;;;;
;;;;;
### Expected behavior;;;;;
- `other_first_name` should not be [FILTERED];;;;;
;;;;;
### Actual behavior;;;;;
- `other_first_name` is `[FILTERED]`;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: `Edge`;;;;;
;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-05T13:52:33Z,2024-04-06T06:49:55Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}, {'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}]""";;;;;
"2168115785,Raise on `in_batches` used on a relation with unpersisted records,""Prior https://github.com/rails/rails/pull/48876 using `in_batches` on a relation with unpersisted records would work but new records will not be included in the iteration. ";;;;;
;;;;;
Currently using `in_batches` on a loaded relation with unpersisted records will fail when we try to sort records by `id` as new records don't have `id` set and comparison with `nil` fails.;;;;;
;;;;;
Since both raising an ambiguous comparison error or implicitly skipping new records seem sub-option we are proposing to raise a clear error to let application explicitly decide whether it needs to iterate on a loaded relation in slices (i.e. `each_slice`) or explicitly drop / save the un-persisted record and continue using `in_batches` ;;;;;
;;;;;
"cc: @garyhtou "",2024-03-05T01:52:09Z,2024-03-14T06:55:50Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2168018086,QueryAttributes treated as strings in exec_query,""### Steps to reproduce";;;;;
;;;;;
I have a library [dynamic_records](https://github.com/LukeClancy/dynamic-records-meritfront) that uses exec_query alongside QueryAttributes to write sql. Recently I updated rails, pg and psql to a recent version and found that exec_query no longer works as expected.;;;;;
;;;;;
exec_query seems to be converting all parameters into strings. I do not believe this is expected functionality.;;;;;
;;;;;
```ruby;;;;;
value = 1;;;;;
type = ActiveRecord::Type::Integer.new;;;;;
qa = ActiveRecord::Relation::QueryAttribute.new('int_input', value, type);;;;;
"x = ActiveRecord::Base.connection.exec_query(""""select $1"""", 'query name', [qa])";;;;;
out_v = x.rows.first.first;;;;;
;;;;;
"puts """"value: #{out_v.inspect}, class: #{out_v.class.to_s}""""";;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
"value: 1, class: Integer""""";;;;;
;;;;;
### Actual behavior;;;;;
"value \""""1\"""", class: String""""";;;;;
;;;;;
### System configuration;;;;;
ruby 3.2.2p53;;;;;
rails (7.1.3.2);;;;;
activemodel (= 7.1.3.2);;;;;
activerecord (= 7.1.3.2);;;;;
pg (1.5.6);;;;;
;;;;;
"psql (PostgreSQL) 16.2 (Ubuntu 16.2-1.pgdg22.04+1)"",2024-03-05T00:02:57Z,2024-03-05T23:37:09Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2167901158,Unexpected behaviour for CTE joins when CTE has same name as a relation,""### Steps to reproduce";;;;;
;;;;;
We are big users of CTEs and have been using [vlado/activerecord-cte](/vlado/activerecord-cte) for many years now. While trying to upgrade to Rails 7.1, we came across this situation which previously worked in Vlado's extension (stripped down code follows):;;;;;
;;;;;
```ruby;;;;;
class Task < ApplicationRecord;;;;;
  has_many :project_resources;;;;;
  has_many :projects, through: :project_resources;;;;;
end;;;;;
;;;;;
class ProjectResource < ApplicationRecord;;;;;
  belongs_to :resource, polymorphic: true;;;;;
  belongs_to :project;;;;;
end;;;;;
;;;;;
class Project < ApplicationRecord;;;;;
  has_many :project_resources;;;;;
  has_many :tasks, through: :project_resources, source: :resource, source_type: 'Task';;;;;
end;;;;;
;;;;;
Project.with(tasks: Task.active).joins(:tasks);;;;;
```;;;;;
;;;;;
With the extension, this would produce SQL like the following:;;;;;
;;;;;
```sql;;;;;
WITH tasks AS (;;;;;
  SELECT tasks.*;;;;;
  FROM tasks;;;;;
  WHERE active;;;;;
);;;;;
  SELECT projects.*;;;;;
  FROM projects;;;;;
  JOIN project_resources ON project_resources.resource_type = 'Task' AND project_resources.project_id = projects.id;;;;;
  JOIN tasks ON tasks.id = project_resources.resource_id;;;;;
```;;;;;
;;;;;
With the Rails 7.1 CTE joins, this produces the following:;;;;;
;;;;;
```sql;;;;;
WITH tasks AS (;;;;;
  SELECT tasks.*;;;;;
  FROM tasks;;;;;
  WHERE active;;;;;
);;;;;
  SELECT projects.*;;;;;
  FROM projects;;;;;
  JOIN tasks ON tasks.project_id = projects.id;;;;;
```;;;;;
;;;;;
Which is an invalid SQL query, as `project_id` doesn't exist on `tasks` but rather exists on the `project_resources` relation which sits in between `Task` and `Project`. This only happens when the CTE name is the same as an association. For instance, this does not change the join conditions:;;;;;
;;;;;
```ruby;;;;;
Project.with(filtered_tasks: Task.active).joins(:tasks);;;;;
```;;;;;
;;;;;
Produces;;;;;
;;;;;
```sql;;;;;
WITH filtered_tasks AS (;;;;;
  SELECT tasks.*;;;;;
  FROM tasks;;;;;
  WHERE active;;;;;
);;;;;
  SELECT projects.*;;;;;
  FROM projects;;;;;
  JOIN project_resources ON project_resources.resource_type = 'Task' AND project_resources.project_id = projects.id;;;;;
  JOIN tasks.id = project_resources.resource_id;;;;;
```;;;;;
;;;;;
Where the join conditions are retained as expected. (The `filtered_tasks` relation isn't joined here, of course, but the point is is that the `:tasks` join itself is unaffected by the `#with` call.);;;;;
;;;;;
Masking a table name in a CTE is a very useful capability, but it's not really possible if masking the table impacts the joins. ;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
I would expect that the joins would not be affected if the relation alias in the `WITH` query is masking an actual relation.;;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
The join condition should remain unaffected in the case of the CTE alias being the same as a relation name.;;;;;
;;;;;
### System configuration;;;;;
;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.3.0;;;;;
;;;;;
### Potential Fix;;;;;
;;;;;
After playing with it a bit, the following appears to satisfy all of our unit tests for our CTEs:;;;;;
;;;;;
```diff;;;;;
diff --git a/activerecord/lib/active_record/relation/query_methods.rb b/activerecord/lib/active_record/relation/query_methods.rb;;;;;
index 5d63709c3a..f17ed6b562 100644;;;;;
#NOM?;;;;;
#NOM?;;;;;
@@ -1625,7 +1625,7 @@ def build_from;;;;;
 ;;;;;
       def select_named_joins(join_names, stashed_joins = nil, &block);;;;;
         cte_joins, associations = join_names.partition do |join_name|;;;;;
-          Symbol === join_name && with_values.any? { _1.key?(join_name) };;;;;
+          Symbol === join_name && with_values.any? { _1.key?(join_name) } && !reflections[join_name.to_s];;;;;
         end;;;;;
 ;;;;;
         cte_joins.each do |cte_name|;;;;;
```;;;;;
;;;;;
This does not appear to break any existing ActiveRecord tests, so if there is interest in using this I can write up a patch that includes tests.;;;;;
",2024-03-04T22:28:36Z,2024-04-06T22:44:52Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2165733298,[Fix #50118] `:prepend` option not working with `run_after_transaction_callbacks_in_order_defined` config,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Fixes #50118.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Ensures that the `:prepend` option for after transaction callbacks is respected when `config.run_after_transaction_callbacks_in_order_defined = true`. This allows prepending certain `after_commit` and `after_rollback` callbacks while still running the rest in the order defined on the model.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->;;;;;
;;;;;
In addition to the tests here there is also [this script](https://github.com/rails/rails/issues/50118#issuecomment-1975502684) which I tested against.;;;;;
;;;;;
cc @ghiculescu;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-04T01:36:20Z,2024-03-04T05:20:42Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2165611366,[Fix #51242] Rework in_batches(use_ranges: true) to be more efficient,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
Fixes https://github.com/rails/rails/issues/51242;;;;;
;;;;;
In ActiveRecord 7.1, a new option was added to [ActiveRecord::Batches#in_batches](https://api.rubyonrails.org/classes/ActiveRecord/Batches.html#method-i-in_batches), `use_ranges: true`, that enables a more efficient way to generate queries from the provided scope for each batch.;;;;;
;;;;;
The resulting queries use ranges to select record ids, e.g. `WHERE id > 10000 AND id <= 20000` instead of passing a possibly very long list of ids in an `IN` clause, e.g. `IN (10000, 10001, [...,] 19999, 20000)`.;;;;;
;;;;;
This option was implemented in https://github.com/rails/rails/pull/45414.;;;;;
;;;;;
The implementation of `use_ranges: true` relies on the already implemented strategy to select all ids from the range (needed for `use_ranges: false`), when generating the scope for each batch.;;;;;
;;;;;
The typical SQL query to generate a scope for a batch is (example with batches of 10k records):;;;;;
;;;;;
```sql;;;;;
"SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
```;;;;;
;;;;;
But subsequently, all these ids but the last one are discarded:;;;;;
;;;;;
https://github.com/rails/rails/blob/v7.1.3.2/activerecord/lib/active_record/relation/batches.rb#L379-L380;;;;;
;;;;;
**This method wastes resources in the database (CPU, I/O), in transit (bandwidth) and in the Ruby process (RAM).**;;;;;
;;;;;
This Pull Request is a proposal to save these resources by implementing **an additional optimisation**.;;;;;
;;;;;
### Detail;;;;;
;;;;;
The description below applies only to the use of `in_batches` **with** the option `use_ranges: true`.;;;;;
;;;;;
Instead of returning all the ids for each batch, we use `OFFSET` to search for the last id in the next batch and return just one id, e.g.;;;;;
;;;;;
```diff;;;;;
  -- queries for all batches but the last (before/after);;;;;
"- SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
"+ SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 1 OFFSET 9999";;;;;
```;;;;;
;;;;;
There is one downside, however.;;;;;
;;;;;
Our `OFFSET`-based query won't be able to return the last id if the next batch is smaller than the limit or if there's no next batch. We always need one additional query to get the size and last id of the very last batch. We use the same query as before the optim for that purpose:;;;;;
;;;;;
```diff;;;;;
  -- queries for the last batch (before/after);;;;;
"- SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
"+ SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 1 OFFSET 9999";;;;;
"+ SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
```;;;;;
;;;;;
Unless we only have a handful of small batches, this strategy is a winner overall, as it reduces the time and network resources spent generating batches, as shown by the benchmark below.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
#### Benchmark;;;;;
;;;;;
Let's reuse the benchmark from the description of https://github.com/rails/rails/pull/45414, i.e. the same `users` table with `10M` records, but with two modifications:;;;;;
;;;;;
* Batches of 10k records instead of 1k;;;;;
* No call to `batch.count` on each batch since we are measuring only on the time and resources needed to generate the scopes, not to use them.;;;;;
;;;;;
Here is the code used:;;;;;
;;;;;
```sql;;;;;
CREATE TABLE users (id bigserial PRIMARY KEY, val integer DEFAULT 0);;;;;
INSERT INTO users SELECT i FROM generate_series(1, 10000000) AS i;;;;;
```;;;;;
;;;;;
```ruby;;;;;
start = Process.clock_gettime(Process::CLOCK_MONOTONIC);;;;;
;;;;;
count = 0;;;;;
User.in_batches(of: 10_000) do |batch|;;;;;
  count += 1  # previously: batch.count, but we don't want to trigger any other queries in this benchmark;;;;;
end;;;;;
;;;;;
"puts """"Count = #{count}""""";;;;;
elapsed = Process.clock_gettime(Process::CLOCK_MONOTONIC) - start;;;;;
"puts """"Elapsed: #{elapsed}s""""";;;;;
```;;;;;
;;;;;
The benchmark is executed on a single machine (a recent macbook), with a round-trip-time < 1ms.;;;;;
;;;;;
The network (I/O) stats are obtained by comparing the result of this command before/after a benchmark run:;;;;;
;;;;;
```;;;;;
docker stats --no-stream postgres --format 'table {{.NetIO}}';;;;;
```;;;;;
;;;;;
**Here are the results:**;;;;;
;;;;;
| Batching method                      | Duration | Network (I/O)     |;;;;;
|--------------------------------------|---------:|------------------:|;;;;;
| in_batches(use_ranges: true)         |    5.6 s.  |   &nbsp;&nbsp;1.2 MB / &nbsp;&nbsp;180 MB   |;
| in_batches(use_ranges: true) + optim from this PR |     2.3 s.  |   &nbsp;&nbsp;< 0.5 MB /  < 0.2 MB   |;;;
;;;;;
In this benchmark, we managed to **generate scopes for batches `x2.4` times faster and with `x900` times less bandwidth**. These results will of course typically vary with the batch size used, and the network speed.;;;;;
;;;;;
The absolute values may not seem like huge gains, but I'm considering using `in_batches(use_ranges: true)` on tables with over 3 billion records, where this benchmark would show a saving of at least `16+ minutes` and `52.7 GB` of bandwidth (+ the database resources needed to extract/send this traffic).;;;;;
;;;;;
#### Other strategies considered;;;;;
;;;;;
Using `OFFSET` is not be the only way to achieve the same kind of optimisation.;;;;;
;;;;;
For example, we could consider using a strategy based on the calculation of the maximum id + batch size for each batch (details folded below).;;;;;
;;;;;
<details>;;;;;
  <summary>Using a CTE</summary>;;;;;
<br />;;;;;
We could use a CTE like this one:;;;;;
;;;;;
```sql;;;;;
"WITH """"batch_ids"""" AS (";;;;;
    -- same query as today;;;;;
"    SELECT """"users"""".""""id"""" FROM """"users"""" WHERE (id > 10000) ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
);;;;;
SELECT COUNT(id) AS last_batch_size, MAX(id) AS last_batch_id FROM batch_ids;;;;;
```;;;;;
;;;;;
"This would be advantageous, as we would not have to use that """"extra"""" query for the last batch as we did above.";;;;;
;;;;;
Nevertheless, using a CTE would have the following downsides:;;;;;
;;;;;
1. CTEs are not supported yet by all RDBMS supported by Active Record (MySQL < 8.0);;;;;
"2. To my knowledge, ActiveRecord does not provide any way to easily generate a query with two distinct calculations such as a count and a maximum. The """"manual"""" workarounds for this could be complicated.";;;;;
;;;;;
For the record, the query above can be generated with:;;;;;
;;;;;
```ruby;;;;;
User.connection.select_one(;;;;;
  User;;;;;
    .with(batch_ids: User.select('id').where('id > 10000').order(:id).limit(10000));;;;;
    .from('batch_ids');;;;;
    .select('COUNT(id) AS last_batch_size', 'MAX(id) AS last_batch_id');;;;;
);;;;;
```;;;;;
</details>;;;;;
;;;;;
;;;;;
<details>;;;;;
  <summary>Using a subquery</summary>;;;;;
<br />;;;;;
We could use a subquery like this one:;;;;;
;;;;;
```sql;;;;;
SELECT;;;;;
    COUNT(id) AS last_batch_size, MAX(id) AS last_batch_id;;;;;
FROM (;;;;;
    -- same query as today;;;;;
"    SELECT """"users"""".""""id"""" FROM """"users"""" WHERE (id > 10000) ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
) subquery;;;;;
```;;;;;
;;;;;
Even better than the CTE version because this would be compatible with all RDBMS supported by ActiveRecord.;;;;;
;;;;;
For the record, the query above can be generated with:;;;;;
;;;;;
```ruby;;;;;
User.connection.select_one(;;;;;
  User.select('COUNT(id) AS last_batch_size', 'MAX(id) AS last_batch_id').from(;;;;;
    User.select('id').where('id > 10000').order(:id).limit(10000);;;;;
  );;;;;
);;;;;
```;;;;;
;;;;;
But to support all sorts of primary keys (including composite) and multiple calculations in a single query, I suspect some complicated work is required in Active Record. If you think this is feasible at a reasonable cost, please provide some guidance 🙏 ;;;;;
</details>;;;;;
;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-03T23:02:55Z,2024-04-06T22:48:12Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2229968422,Improve ActionCable redis config example [skip ci],""While using `{}` inside yaml files is valid and will be correctly parsed, it looks strange and not idiomatic."",2024-04-07T21:32:04Z,2024-04-07T21:32:08Z,""[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2229766221,Skip ActiveStorage previewer tests if required tools are unavailable,""These tests require certain tools to be available, if they aren't these tests will fail. Skip instead."",2024-04-07T13:14:48Z,2024-04-07T13:14:53Z,""[{'id': 664533972, 'node_id': 'MDU6TGFiZWw2NjQ1MzM5NzI=', 'url': 'https://api.github.com/repos/rails/rails/labels/activestorage', 'name': 'activestorage', 'color': 'bfd4f2', 'default': False, 'description': None}]""";;;;;
"2229284323,Remove usage of `OpenStruct`,""Follow up to https://github.com/rails/rails/pull/51491#issuecomment-2037429653.";;;;;
;;;;;
"There was one more error regarding the missing `require """"ostruct""""` after that PR merge (https://buildkite.com/rails/rails/builds/106158#018eaee1-7e2b-4e8a-9876-8d3c358d5576), so maybe we can just remove its usage instead?";;;;;
;;;;;
"cc @byroot "",2024-04-06T14:58:05Z,2024-04-06T18:57:07Z,""[{'id': 107188, 'node_id': 'MDU6TGFiZWwxMDcxODg=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionmailer', 'name': 'actionmailer', 'color': '8B00FC', 'default': False, 'description': None}, {'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}, {'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}, {'id': 3666649, 'node_id': 'MDU6TGFiZWwzNjY2NjQ5', 'url': 'https://api.github.com/repos/rails/rails/labels/actionview', 'name': 'actionview', 'color': 'd7e102', 'default': False, 'description': None}, {'id': 123812746, 'node_id': 'MDU6TGFiZWwxMjM4MTI3NDY=', 'url': 'https://api.github.com/repos/rails/rails/labels/activejob', 'name': 'activejob', 'color': '5319e7', 'default': False, 'description': None}]""";;;;;
"2229169236,Don't buffer things that shouldn't be buffered.,""Assigning `ActionDispatch::Response` to `self.response` causes the response body to be buffered (and potentially evaluated multiple times).";;;;;
;;;;;
```ruby;;;;;
class StreamingController < ApplicationController;;;;;
  def simple;;;;;
    body = Enumerator.new do |enumerator|;;;;;
"      enumerator << """"."""" * 1024";;;;;
      ;;;;;
      100.times do |i|;;;;;
"        enumerator << """"This is line #{i}\n""""";;;;;
        sleep 0.1;;;;;
      end;;;;;
    end;;;;;
;;;;;
    # Works, puma, falcon, Rails 7.1;;;;;
"    # self.response = Rack::Response[200, {""""content-type"""" => """"text/plain""""}, body]";;;;;
;;;;;
    # Doesn't work because the response is buffered:;;;;;
"    self.response = ActionDispatch::Response.new(200, {""""content-type"""" => """"text/plain""""}, body)";;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
In both Puma and Falcon, the response is buffered without this change.;;;;;
;;;;;
"cc @willcosgrove "",2024-04-06T09:53:30Z,2024-04-06T10:08:35Z,""[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}]""";;;;;
"2229046933,[Fix #40109] Incorrect joins for polymorphic `has_many through:` with association scope,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Fixes https://github.com/rails/rails/issues/40109;;;;;
;;;;;
### Detail;;;;;
;;;;;
Updates `ActiveRecord::Reflection::PolymorphicReflection#join_scopes` to not apply the previous reflection's join scopes if it's a through reflection.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-06T03:10:42Z,2024-04-06T07:14:24Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2228498012,add navbar highlighting to guides [ci skip],""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
@jathayde @AmandaPerino This Pull Request has been created to add the highlighting to the navigation bar. ;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request adds on scroll event to control highlighting and css rules for the for highlight. ;;;;;
;;;;;
Right now there are comments in the css labeling the parts that draw the highlight and the square because I wasn't sure it would be obvious what the pseudo-elements were for, but I can remove them if you want. ;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-05T17:27:03Z,2024-04-07T15:34:07Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2228287663,UnrecognizedCommandError can be corrected and retried,""### Motivation / Background";;;;;
;;;;;
"This is a follow up to https://github.com/rails/rails/pull/50941. """"Did you mean?"""" style errors were introduced in rails/rails@2530160 for unrecognized commands. With this change, we give the user the option to retry with the corrected command name - instead of needing to retype and rerun the command.";;;;;
;;;;;
### Detail;;;;;
;;;;;
We iterate through all the possible commands returned by `DidYouMean::SpellChecker` and give the user the option to rerun the suggested correction.;;;;;
;;;;;
```;;;;;
 ➜  myapp git:(main) bin/rails vershen;;;;;
"Unrecognized command """"vershen""""";;;;;
;;;;;
Did you mean?  version [Yn] y;;;;;
Rails 7.2.0.alpha;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-05T15:19:49Z,2024-04-05T22:31:25Z,[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2228096494,Improve accessibility,""### Motivation / Background";;;;;
;;;;;
As requested by @AmandaPerino, this PR aims to improve the accessibility of the guides. It continues on the work in #51341 #51372 #51385 and #51444. It also addresses whatever wasn't addressed from https://github.com/rails/rails/pull/51341#issuecomment-2007717282.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Each commit in the PR has a descriptive title and often a message why the change was made, which I recommend we keep when merging instead of squashing it. Screenshots are listed below. A few of the commits that introduce fixes or features are listed here:;;;;;
;;;;;
* [Add label and accessible content](https://github.com/rails/rails/commit/4f2b25ba54d82bc897fb33f681214f5bf05cb0bd) ;;;;;
  ;;;;;
  Having a select element without a label outside a form isn't directly problematic, but the text Version is the label of the select and should act as such.;;;;;
;;;;;
  Because the select element is set up to browse to a different page which loses the current focus position, users must be instructed about this context change. It would be much better to display this content to everyone, but having this for screenreaders only is better than not having it at all.;;;;;
;;;;;
* [Fix accessible text for voice commands](https://github.com/rails/rails/commit/1863e5590cecac6ecfd0c4c031f1c4c967d0d768) ;;;;;
  ;;;;;
  Using the title attribute means some screenreaders will not be able to show the expanded accessible text at all, but using aria-label loses the hover text currently available.;;;;;
;;;;;
  If the title attribute is still used, the accessible label should start with the same content as the visible label. This is necessary for most voice operated tooling which only match starting text.;;;;;
;;;;;
"  Having """"Return"""" as the start of the accessible label and """"Guides"""" as the start of the visible label means in most cases users that rely on voice commands will not be able to browse here.";;;;;
;;;;;
* [Add landmarks to all guide pages](https://github.com/rails/rails/commit/9669f4be012f34488d52e16d0b6e40a11399e414) ;;;;;
  ;;;;;
  Landmarks such as header, section, footer, article, and the main content landmark help navigating when using assistive tooling.;;;;;
;;;;;
  Since each guide is a self-contained article, a header section with the guide introduction and navigation, a footer section which is not part of the content but a call to action, and the rest can be clearly separated, landmarks here are appropriate.;;;;;
;;;;;
* [Make back-to-top work without JavaScript](https://github.com/rails/rails/commit/b33278c01384a7612d0adf2270456718181b5acb) ;;;;;
;;;;;
  By doing feature detection on animation timeline CSS, the graceful degradation can take care of the visibility of the back-to-top button. In case no JavaScript is available, it should always be shown.;;;;;
;;;;;
* [Enable back-to-top without JavaScript](https://github.com/rails/rails/commit/430f27c959f0df30b6baeea3d688d8fa5448f842) ;;;;;
;;;;;
  And add an accessible label to the button. It would be better to just show the text back to top underneath the arrow, but this change is again better than not having it at all.;;;;;
;;;;;
* [Consistent scrolling behaviour respecting pref](https://github.com/rails/rails/commit/f2ae0318736a286a13d896cad8527bd2d1443c50) ;;;;;
;;;;;
  Use the preference to detect if a user wants reduced motion and if not enable smooth scrolling. This takes care of the back-to-top smooth scrolling, and also adds it to anchor links. If this is unwanted, the change can be reverted and a matchmedia check should be done in JavaScript instead before smooth scrolling;;;;;
;;;;;
* [Add skip links to quickly navigate past navs](https://github.com/rails/rails/commit/653b292ac26b2df59ebeb44fc9415ebc8130243b) ;;;;;
  ;;;;;
  Skip links are a common practice to allow keyboard and other users to skip past large blocks of content that are present on every page, which in this case are the secondary navigation at the top,;;;;;
the version selector, and the chapter navigation.;;;;;
;;;;;
  The skip links only show when focused.;;;;;
;;;;;
* [Wrap tables to make them responsive](https://github.com/rails/rails/commit/e2cfe8fdfccfcb47aec2f358b0badab79c817981);;;;;
;;;;;
* [Make back-to-top link to skip link](https://github.com/rails/rails/commit/ad966a42de9e166ab33026b28fc8dda64f5fbdd1) ;;;;;
;;;;;
  This allow screen readers to announce something, because linking to an empty fragment or the body element doesn't announce anything useful.;;;;;
;;;;;
* [Add branded selectable color](https://github.com/rails/rails/commit/2557614d872629462e354b2bd1536736aa2077be) ;;;;;
;;;;;
  Fixes selecting text in dark mode and brands it for both modes.;;;;;
;;;;;
* [Make more info and guides index accessible](https://github.com/rails/rails/commit/f9eaeb18d8c5712ae0f2edf351ff9829c996bf78) ;;;;;
;;;;;
  * Adds aria-controls, which binds the control to the content.;;;;;
  * Adds aria-expanded, which signals the current expansion state.;;;;;
  * Adds focus handling, which focuses the first link or the button;;;;;
    depending on the expansion state.;;;;;
  * Adds keyboard closing for the more info button.;;;;;
  * Adds outside click tracking to close the expanded content.;;;;;
  * Fixes the more info button to not be focusable.;;;;;
;;;;;
* [Fix dark mode for guide selector](https://github.com/rails/rails/commit/9c4cfd00492a2bd55db9ed5b5a9a616a962c153a);;;;;
;;;;;
* [Add accessible label for guide navigator](https://github.com/rails/rails/commit/93f9819c62890301f398e752b6083c9d2c9f6c40);;;;;
;;;;;
### Additional information;;;;;
;;;;;
Please note that this PR doesn't necessarily make the guides completely accessible and we should continue to improve on this, but this gets us (a big) part of the way there, together with the changes that were already made prior.;;;;;
;;;;;
| Before | After |;;;;;
| ------ | ----- |;;;;;
"| You could not focus the selector pressing """"Version"""" | ![a11y-focusable-label-version](https://github.com/rails/rails/assets/1964376/58f5d1a7-a6ef-47e2-86ac-6e1e0288a18c) |";;;;;
| The element (version selector) was broken if JavaScript was disabled | ![a11y-no-js-desktop](https://github.com/rails/rails/assets/1964376/0a93871b-c55a-4f9b-a524-86f6024f39b7) |;;;;;
| The element (version selector) was broken if JavaScript was disabled | ![a11y-no-js-mobile](https://github.com/rails/rails/assets/1964376/5075e1ac-c888-496e-8fa4-4f9066d6aa43) |;;;;;
| ![a11y-before-table-wrap](https://github.com/rails/rails/assets/1964376/29e41733-60ce-4933-9d4f-36a9fad972e8) | ![a11y-after-table-wrap](https://github.com/rails/rails/assets/1964376/303818b1-d3af-45e3-9ea7-08121c91f04c) |;;;;;
| You could not skip past the secondary top navigation | ![a11y-main-skip-link](https://github.com/rails/rails/assets/1964376/8d2c1af0-7575-4089-8e89-e7cfb42c8975) |;;;;;
| You could not skip past the chapter navigation | ![a11y-chapter-skip-link](https://github.com/rails/rails/assets/1964376/87cccb26-f7ae-4ae9-a382-145d6cbd963e) |;;;;;
| ![a11y-selectable-text-before](https://github.com/rails/rails/assets/1964376/e9e9b56f-08de-45d8-955f-c7884b33a387) | ![a11y-selectable-text](https://github.com/rails/rails/assets/1964376/c938bbde-54ee-480b-b295-6a91bdd8c7e7) |;;;;;
| There was no label indicating what the select does | ![a11y-guide-selector](https://github.com/rails/rails/assets/1964376/cfaf0501-516b-4ad3-bc30-d77701f01164) |;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [X] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-05T13:53:30Z,2024-04-07T15:35:24Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2226955930,Handle path_params gracefully when a user sends `?path_params=string`,""In some cases it's possible for `path_params` to be passed into `url_for` by an end-user of a rails app. Kaminari currently triggers this.";;;;;
;;;;;
"It's also currently inconvenient to write a test to ensure this doesn't happen. Passing `path_params: """"string""""` in a functional test crashes the test runner. (see [this example in a rails bug report template](https://github.com/rails/rails/compare/main...martinemde:rails:bug-report-path-params) that crashes.)";;;;;
;;;;;
A string value will cause a 500 error in rails internals. A hash `?path_params[inject]=string` can be used to inject a path_param into the url generation. However, I don't believe there is any vulnerability since path_params are lower priority than actual params and get ignored when there are no matches. Also, given that the very similar #39616 did not raise alarm bells, I'm not considering this a vulnerability. Still, it is probably good to scrub this key. A vulnerability once existed for a similar problem: https://github.com/advisories/GHSA-r5jw-62xg-j433;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
I was trying to fix a 500 caused by a security scan of rubygems.org. An unknown researcher sent a huge list of params to many pages, snipped here:;;;;;
;;;;;
![image](https://github.com/rails/rails/assets/989/84f481a9-dfc5-40dd-93e9-1ccacd445489);;;;;
;;;;;
This caused at least two 500 errors on rubygems.org, a minor annoyance but enough to potentially page someone on-call.;;;;;
;;;;;
I tracked the actual issue down to kaminari for which I opened https://github.com/kaminari/kaminari/pull/1123.;;;;;
;;;;;
While I think that this should be fixed in kaminari, I also think rails should fix this because it is somewhat difficult to write a test to ensure that this key is handled well. (see bug report template linked at top) ;;;;;
;;;;;
This PR also saves one hash allocation and one merge for every URL generate that doesn't have a `path_params:` key (most of them?), but the `option = option.dup` might negate most of the benefit (it could be reconfigured to save that dup, most likely).;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes `ActionDispatch::Journey::Formatter#generate` to only extract and merge path_params when it is a hash.;;;;;
;;;;;
This PR does not address in any way filtering `path_params`. I believe kaminari should do this. However, this addresses the crash when path_params is not a Hash and makes most url generations slightly more efficient. ;;;;;
;;;;;
### Additional information;;;;;
;;;;;
This is very similar to another fix by my colleague @simi submitted to rails, #39616, which I think also deserves attention for the same reason, if it is still applicable to current rails code.;;;;;
;;;;;
I'm also patching this on rubygems.org in the meantime so we don't get needless 500s.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [X] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-05T04:01:48Z,2024-04-05T16:48:09Z,[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}]""";;;;;
"2226911350,Use ActionController::TestCase in bug_report_template/action_controller.rb,""### Motivation / Background";;;;;
;;;;;
This Pull Request has been created because I was trying to submit a bug report and had to spend time getting the bug report template to work more like a functional test in rails.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes `guides/bug_report_template/action_controller.rb` to draw a route and use `ActionController::TestCase` to make testing easier.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-05T03:32:15Z,2024-04-05T03:32:49Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2226602219,Should Active Model's `ImmutableString` type observe the `limit` parameter?,""TL";DR: should `attribute :foobar, :string, limit: 30` chop the value to 30 characters?;;;;
;;;;;
`ActiveModel::Type::String` inherits;;;;;
`ActiveModel::Type::ImmutableString` inherits;;;;;
 `ActiveModel::Type::Value`  which accepts three `limit, scale, precision` options [but lets the base type decide what to do with them](https://api.rubyonrails.org/classes/ActiveModel/Type/Value.html#method-c-new).;;;;;
;;;;;
I was wondering whether it would make sense for the string types to interpret `limit` as a max length and chop on `cast` or `serialize`. I've got some custom initializer code at the moment which does:;;;;;
;;;;;
```rb;;;;;
class ActiveModel::Type::String;;;;;
  def cast(value);;;;;
    if @limit;;;;;
      super(value.to_s.first(@limit));;;;;
    else;;;;;
      super;;;;;
    end;;;;;
  end;;;;;
end;;;;;
 ```;;;;;
;;;;;
Which reuses the `ImmutableString#cast` logic and chops the value, not great but works well, well enough to ask the question here.;;;;;
;;;;;
What do people think? Happy to submit a PR if we can agree it's nice to have.;;;;;
;;;;;
"NOTE: `ActiveModel::Type::Integer` interprets `limit` as [the number of bytes to store the integer with](https://api.rubyonrails.org/classes/ActiveModel/Type/Integer.html), which makes the option a bit confusing. However, a `t.string :column_name, limit: 42` will effectively [limit the length of that string column in Active Record](https://api.rubyonrails.org/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_column)."",2024-04-04T22:07:58Z,2024-04-06T06:57:37Z,""[{'id': 107190, 'node_id': 'MDU6TGFiZWwxMDcxOTA=', 'url': 'https://api.github.com/repos/rails/rails/labels/activemodel', 'name': 'activemodel', 'color': '00E5FF', 'default': False, 'description': None}]""";;;;;
"2224752118,Update Filter Attributes to perform exact matches instead of Fuzzy matches,""### Motivation / Background";;;;;
;;;;;
This Pull Request has been created because of a bug mentioned in #51254 wherein encrypting one attribute in a model filters out other similar matching attributes in inspect.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This PR makes the following changes:;;;;;
- Updates `filter_attributes` to exact regex matches instead of fuzzy matching;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-04T07:52:45Z,2024-04-06T12:55:46Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}, {'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2224488321,Fix textdecorator specificity on hovering in index [ci skip],""In the guides index section, the text-decorator and color are not showing properly on hovering. And the issue is causing because of the higher specificity. ";;;;;
![Screenshot 2024-04-04 at 10 26 58 AM](https://github.com/rails/rails/assets/22231095/2c36b760-594c-43c9-9991-f6318e279d4c);;;;;
;;;;;
![Screenshot 2024-04-04 at 10 17 39 AM](https://github.com/rails/rails/assets/22231095/03381990-fa57-4ce4-8d20-288477265470);;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request fixes the hovering style issue.;;;;;
![Screenshot 2024-04-04 at 9 06 11 AM](https://github.com/rails/rails/assets/22231095/7b34dec4-9f69-416a-b46b-172408e811df);;;;;
;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
;;;;;
cc/ @jathayde ;;;;;
",2024-04-04T04:50:13Z,2024-04-07T15:36:37Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2224165865,Add a Date decoder to the pg adapter ,""Fix #51448";;;;;
;;;;;
Add a Date decoder to the pg adapter to type cast dates at the connection level;;;;;
;;;;;
This would type cast columns of type `date` to ruby `Date` when running a raw query through `ActiveRecord::Base.connection.select_all`.;;;;;
;;;;;
Before:;;;;;
;;;;;
```ruby;;;;;
"ActiveRecord::Base.connection.select_value(""""select '2024-01-01'::date"""").class ";;;;;
#=> String;;;;;
```;;;;;
;;;;;
After:;;;;;
```ruby;;;;;
"ActiveRecord::Base.connection.select_value(""""select '2024-01-01'::date"""").class ";;;;;
#=>  Date ;;;;;
```;;;;;
;;;;;
;;;;;
While I don't think we'd want to to set a type cast expectation at this level (not all adapters have dates), this would brings the PG adapter to parity (for dates) with the Mysql2 adapter. ;;;;;
;;;;;
We already convert timestamp, it would makes sense to also convert dates. ;;;;;
;;;;;
I wasn't sure if I should add a test. I am thinking that a test sets an expectation about type casting at the adapter level. ;;;;;
This changes a public API, albeit a pretty low level one, but it seems like we don't test the other types either. I removed timestamps + float/numeric and all tests still pass. ;;;;;
;;;;;
I added a message in the changelog entry to make sure it doesn't burn anyone. ;;;;;
;;;;;
Unsure if we should merge this. Impact radius is large, but after digging into it and running the tests, it looks pretty benign.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-04T00:27:33Z,2024-04-04T00:29:16Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2224128597,Trix toolbar doesn't render correctly with Propshaft,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
;;;;;
```bash;;;;;
# In bash, get a new rails app setup using propshaft;;;;;
bin/rails new . -a propshaft;;;;;
bin/rails generate scaffold post title:string body:text;;;;;
;;;;;
# Install Action Text:;;;;;
bin/rails action_text:install;;;;;
bundle install;;;;;
bin/rails db:migrate;;;;;
;;;;;
#  post body is rich text;;;;;
cat << EOF > app/models/post.rb;;;;;
class Post < ApplicationRecord;;;;;
  has_rich_text :body;;;;;
end;;;;;
EOF;;;;;
;;;;;
# ensure it's a rich_text_area in the form;;;;;
sed -i 's/<%= form.text_area :body %>/<%= form.rich_text_area :body %>/' app/views/posts/_form.html.erb;;;;;
;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
http://localhost:3000/posts/new should render the text area with Trix toolbar.;;;;;
;;;;;
Here is what renders if I follow all the same steps above, but instead of `bin/rails new . -a propshaft`, just using `bin/rails new .`:;;;;;
;;;;;
![image](https://github.com/rails/rails/assets/1312348/e53bc1e9-a793-410d-a7cd-a779e10faa31);;;;;
;;;;;
;;;;;
;;;;;
### Actual behavior;;;;;
The toolbar is just HTML buttons.;;;;;
;;;;;
![image](https://github.com/rails/rails/assets/1312348/521a03ca-e8fe-4cd2-9bfa-adbc24f716e1);;;;;
;;;;;
I cannot figure out how to get it working in Propshaft.;;;;;
;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.3.0;;;;;
",2024-04-03T23:45:27Z,2024-04-04T15:31:10Z,[]
2224104767,Use devcontainer features for optional dependencies,### Motivation / Background";;;;;
;;;;;
We have created our own features for optional Rails dependencies needed for active storage, postgres and mysql. Features provide a bit better ergonomics for adding or removing these from the devcontainer, and previously we were always installing these dependencies via the devcontainer's dockerfile, whether the app was using them or not.;;;;;
;;;;;
### Detail;;;;;
;;;;;
With this change, when we generate the app, we just add the features we need to the `devcontainer.json`. And also, we swap features in and out as need when doing `db:system:change`.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-03T23:15:11Z,2024-04-03T23:31:28Z,[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2223710666,Don't preload Selenium browser when remote,""### Motivation / Background";;;;;
Fixes #50827 ;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request stops the preloading of the Selenium browser when the browser is remote.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] NA - Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] NA - CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-03T19:09:14Z,2024-04-03T19:20:04Z,[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}]""";;;;;
"2223231248,`validates_associated` does not work with `accepts_nested_attributes_for` for `has_many` associations,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
I have a model like this:;;;;;
```ruby;;;;;
class OrderLine < ApplicationRecord;;;;;
  has_many :order_line_resources;;;;;
  accepts_nested_attributes_for :order_line_resources;;;;;
  validates_associated :order_line_resources;;;;;
end;;;;;
```;;;;;
Which is associated to this model:;;;;;
```ruby;;;;;
class OrderLineResource < ApplicationRecord;;;;;
  belongs_to :order_line;;;;;
  validates :order_line_id, uniqueness: { scope: :resource_id };;;;;
end;;;;;
```;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
However, if I write something like this:;;;;;
```ruby;;;;;
order_line.update!(order_line_resources_attributes: [{ resource_id: 1 }, { resource_id: 1 }]);;;;;
```;;;;;
"I receive an error triggered by my unique index on database level: `ActiveRecord::RecordNotUnique: PG::UniqueViolation: ERROR:  duplicate key value violates unique constraint """"idx_order_line_resources_order_line_id_resource_id""""` but not the validation error I was expecting.";;;;;
;;;;;
### Expected behavior;;;;;
<!-- Tell us what should happen -->;;;;;
I would like to get a validation error from ActiveRecord directly (`ActiveRecord::RecordInvalid`) and not by my pg database.;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
The error is triggered on database level, so my app raises `ActiveRecord::RecordNotUnique: PG::UniqueViolation`;;;;;
;;;;;
### System configuration;;;;;
**Rails version**:;;;;;
7.1.3.2;;;;;
;;;;;
**Ruby version**:;;;;;
3.3.0;;;;;
;;;;;
I hope everything is clear! 🙂 ;;;;;
"Thanks a lot for your help and keep up the good work, Rails team, you're doing an amazing job! ✨ "",2024-04-03T15:24:52Z,2024-04-04T08:40:58Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 126910270, 'node_id': 'MDU6TGFiZWwxMjY5MTAyNzA=', 'url': 'https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps', 'name': 'With reproduction steps', 'color': '009800', 'default': False, 'description': None}]""";;;;;
"2223118248,""Fix """"no anonymous block parameter"""" in ruby 3.1"",""### Motivation / Background";;;;;
;;;;;
On;;;;;
ruby 3.1.2p20 (2022-04-12 revision 4491bb740a) [x86_64-linux-gnu] (e.g. Ubuntu 23.10), simple rails commands fail with;;;;;
`no anonymous block parameter`:;;;;;
;;;;;
```;;;;;
vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:38:in `require': vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:190: no anonymous block parameter (SyntaxError);;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:38:in `<class:AbstractAdapter>';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:31:in `<module:ConnectionAdapters>';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:15:in `<module:ActiveRecord>';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:14:in `<top (required)>';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb:3:in `require';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/sqlite3_adapter.rb:3:in `<top (required)>';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters.rb:100:in `require';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters.rb:100:in `resolve';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/database_configurations/database_config.rb:18:in `adapter_class';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/database_configurations/database_config.rb:26:in `validate!';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract/connection_handler.rb:268:in `resolve_pool_config';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_adapters/abstract/connection_handler.rb:116:in `establish_connection';;;;;
        from vendor/bundle/ruby/3.1.0/bundler/gems/rails-0e0da316ca80/activerecord/lib/active_record/connection_handling.rb:53:in `establish_connection';;;;;
        from repro.rb:20:in `<main>';;;;;
;;;;;
```;;;;;
;;;;;
One file repro:;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
require 'bundler';;;;;
Bundler.configure;;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
;;;;;
```;;;;;
;;;;;
This Pull Request has been created to fix this issue.;;;;;
;;;;;
### Detail;;;;;
;;;;;
"I do not know why this triggers """"no anonymous block parameter"""", as the parameter is clearly there.";;;;;
It was introduced when a named parameter was added, without the named parameter the error does not occur.;;;;;
However, converting to a named block parameter fixes this issue.;;;;;
",2024-04-03T14:36:24Z,2024-04-06T19:34:45Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2221347874,ActiveSupport::OrderedOptions#respond_to?(:call) true - breaking check for callable objects,""`ActiveSupport::OrderedOptions` returns `true` for `.respond_to?(:call)`, which breaks various duck-type approach to detect callable objects. Example is pretty popular [carrierwave-aws gem](https://github.com/carrierwaveuploader/carrierwave-aws/?tab=readme-ov-file#usage) which checks if one of the options is callable by checking `respond_to?(:call)`. ";;;;;
There is no reason to return true for any possible key. OpenStruct also returns 'nil` for non-existing keys, but `respond_to?` only returns `true` for existing keys.;;;;;
On the other hand someone did it on purpose, otherwise why implement `respond_to_missing?` as hard-coded `true`, so I'm not sure if there was no higher design here.;;;;;
### Steps to reproduce;;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
```;;;;;
ActiveSupport::OrderedOptions.new.respond_to?(:call) # => true;;;;;
ActiveSupport::InheritableOptions.new.respond_to?(:call) # => true;;;;;
```;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails""""";;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"  # gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
end;;;;;
;;;;;
"require """"active_support""""";;;;;
"require """"active_support/core_ext/object/blank""""";;;;;
"require """"minitest/autorun""""";;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_ordered_options_respond_to;;;;;
    assert ActiveSupport::OrderedOptions.new.update(aaa: 1).respond_to?(:aaa);;;;;
    refute ActiveSupport::OrderedOptions.new.respond_to?(:call);;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
<!-- Tell us what should happen -->;;;;;
ActiveSupport::OrderedOptions.new.respond_to?(:call) # => should return false;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
ActiveSupport::OrderedOptions.new.respond_to?(:call) # => returns true;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.0.8.1;;;;;
**Ruby version**: 3.0.4;;;;;
",2024-04-02T19:59:36Z,2024-04-07T12:45:38Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}]""";;;;;
"2219772792,counter_cache doesn't work with composite PKs (revisited),""In the past I opened issue [#50968](https://github.com/rails/rails/issues/50968) about `counter_cache` not working with composite PKs. The corresponding PR fixed the error, but I still have a case in my codebase where I still get a different error.";;;;;
;;;;;
### Steps to reproduce;;;;;
;;;;;
Unfortunately I was not able to reproduce this with a script, so the script below does NOT reproduce the error. In any case, I am attaching it is because this is my mapping. The difference between my codebase and the script below is that I am running against Postgres, however I don't see how that could play a role.;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :test_background_check_requests, force: true do |t|;;;;;
    t.integer :candidate_id;;;;;
    t.integer :account_id;;;;;
    t.string :name;;;;;
  end;;;;;
;;;;;
  create_table :test_candidates, force: true, primary_key: %i[candidate_id account_id] do |t|;;;;;
    t.integer :candidate_id;;;;;
    t.integer :account_id;;;;;
    t.integer :test_background_check_requests_count;;;;;
    t.string :name;;;;;
  end;;;;;
end;;;;;
;;;;;
class TestCandidate < ActiveRecord::Base;;;;;
  self.primary_key = %i[candidate_id account_id];;;;;
  has_many :test_background_check_requests, query_constraints: [:candidate_id, :account_id], inverse_of: :test_candidate;;;;;
end;;;;;
;;;;;
class TestBackgroundCheckRequest < ActiveRecord::Base;;;;;
  belongs_to :test_candidate, counter_cache: true, query_constraints: [:candidate_id, :account_id];;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_association_stuff;;;;;
"    test_candidate = TestCandidate.create!(candidate_id: 1, account_id: 1, name: """"Foo Barson"""")";;;;;
"    test_candidate.test_background_check_requests.create!(candidate_id: 1, account_id: 1, name: """"Background check request 1"""")";;;;;
;;;;;
    assert_equal 1, TestBackgroundCheckRequest.count;;;;;
    assert_equal 1, test_candidate.reload.test_background_check_requests_count;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
I was expecting the creation to take place correctly, and the counter to increase.;;;;;
;;;;;
### Actual behavior;;;;;
I am getting the following exception:;;;;;
;;;;;
```;;;;;
"Minitest::UnexpectedError: ArgumentError: Expected corresponding value for [""""id"""", """"account_id""""] to be an Array";;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:82:in `block (2 levels) in expand_from_hash';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:81:in `map';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:81:in `block in expand_from_hash';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:79:in `each';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:79:in `flat_map';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:79:in `expand_from_hash';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/predicate_builder.rb:25:in `build_from_hash';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/query_methods.rb:1526:in `build_where_clause';;;;;
    activerecord (7.1.3.2) lib/active_record/relation/query_methods.rb:943:in `where!';;;;;
    activerecord (7.1.3.2) lib/active_record/counter_cache.rb:115:in `update_counters';;;;;
    activerecord (7.1.3.2) lib/active_record/locking/optimistic.rb:182:in `update_counters';;;;;
    activerecord (7.1.3.2) lib/active_record/persistence.rb:974:in `increment!';;;;;
    activerecord (7.1.3.2) lib/active_record/locking/optimistic.rb:64:in `increment!';;;;;
    activerecord (7.1.3.2) lib/active_record/callbacks.rb:436:in `increment!';;;;;
    activerecord (7.1.3.2) lib/active_record/associations/has_many_association.rb:100:in `update_counter';;;;;
    activerecord (7.1.3.2) lib/active_record/associations/has_many_association.rb:122:in `delete_or_nullify_all_records';;;;;
    activerecord (7.1.3.2) lib/active_record/associations/collection_association.rb:161:in `delete_all';;;;;
    activerecord (7.1.3.2) lib/active_record/associations/collection_proxy.rb:475:in `delete_all';;;;;
    test/services/candidates/copier_base_test.rb:602:in `block in <class:CopierBaseTest>';;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: ;;;;;
7.1.3.2 (branch `7-1-stable`);;;;;
;;;;;
**Ruby version**: ;;;;;
3.2.2;;;;;
",2024-04-02T07:31:16Z,2024-04-03T22:56:59Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 1071962662, 'node_id': 'MDU6TGFiZWwxMDcxOTYyNjYy', 'url': 'https://api.github.com/repos/rails/rails/labels/more-information-needed', 'name': 'more-information-needed', 'color': 'bfdadc', 'default': False, 'description': 'When reporter needs to provide more information'}]""";;;;;
"2219541327,[Fix #51463] Raise an error when invalid `:on` or `:except` options are given to `#resource` or `#resources`,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Fixes https://github.com/rails/rails/issues/51463.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Raises an `ArgumentError` when a `ActionDispatch::Routing::Mapper::Resources::Resource` is initalized with `:on` or `:except` options that aren't default (index, create, new, show, update, and destroy) actions .;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
See my comment below as to why this seems like more changes than it needs to be.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-02T04:30:58Z,2024-04-04T09:38:53Z,[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}]""";;;;;
"2219534455,`#resource` and `#resources` fail quietly and succeed quietly when invalid arguments are passed to `:only` and `:except` options respectively,""This came up when pairing with a dev who is newish to Rails. They assumed that passing a custom action argument to `:only` when using `#resources` would auto-magically define a route for it with some defaults. Reading the examples in the documentation for these methods, it's not clear (especially to beginners) what all the accepted arguments for these options are, [there are only examples using default actions](https://www.rubydoc.info/docs/rails/ActionDispatch%2FRouting%2FMapper%2FResources:resources).";;;;;
;;;;;
I think it would be beneficial if an error was raised if invalid arguments are passed in.;;;;;
;;;;;
### Steps to reproduce;;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
end;;;;;
;;;;;
"require """"action_controller/railtie""""";;;;;
;;;;;
class TestApp < Rails::Application;;;;;
  config.root = __dir__;;;;;
"  config.hosts << """"example.org""""";;;;;
"  config.secret_key_base = """"secret_key_base""""";;;;;
;;;;;
  config.logger = Logger.new($stdout);;;;;
  Rails.logger  = config.logger;;;;;
end;;;;;
;;;;;
"require """"minitest/autorun""""";;;;;
"require """"rack/test""""";;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  include Rack::Test::Methods;;;;;
;;;;;
  def test_invalid_resources_only_option;;;;;
    assert_raises(ArgumentError) do # ❌ fails quietly, no routes generated;;;;;
      app.routes.draw do;;;;;
        resources :posts, only: :foo;;;;;
      end;;;;;
;;;;;
      # => routes: [];;;;;
"      Rails.logger.info(""""routes: #{app.routes.routes.map { |r| r.defaults[:action] }}"""")";;;;;
    end;;;;;
  end;;;;;
;;;;;
  def test_invalid_resources_except_option;;;;;
    assert_raises(ArgumentError) do # ❌ succeeds quietly, all default routes generated;;;;;
      app.routes.draw do;;;;;
        resources :posts, except: :foo;;;;;
      end;;;;;
;;;;;
"      # => routes: [""""index"""", """"create"""", """"new"""", """"edit"""", """"show"""", """"update"""", """"update"""", """"destroy""""]";;;;;
"      Rails.logger.info(""""routes: #{app.routes.routes.map { |r| r.defaults[:action] }}"""")";;;;;
    end;;;;;
  end;;;;;
;;;;;
  private;;;;;
    def app;;;;;
      Rails.application;;;;;
    end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
<!-- Tell us what should happen -->;;;;;
;;;;;
Passing invalid options to `:only` or `:except` should raise an error with an informative message.;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
;;;;;
Passing invalid options to `:only` fails quietly and no routes are generated.;;;;;
Passing invalid arguments to `:except` succeeds quietly and all default routes are generated (index, create, new, show, update, and destroy).;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: Edge;;;;;
;;;;;
"**Ruby version**: 3.3.0"",2024-04-02T04:24:01Z,2024-04-02T11:17:11Z,[]";;;;;
"2219354900,Fix inline habtm fixtures for tables with composite primary keys,Fixes https://github.com/rails/rails/issues/51461.,2024-04-02T00:43:32Z,2024-04-02T00:43:37Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2218168973,Composite PKs break fixture loading for many-to-many associations,""### Steps to reproduce";;;;;
;;;;;
Copy the following fixture files in a directory:;;;;;
;;;;;
**posts.yml**;;;;;
```yaml;;;;;
one:;;;;;
"    title: """"My first post""""";;;;;
    account_id: 1;;;;;
    labels: one, two;;;;;
```;;;;;
**labels.yml**;;;;;
```yaml;;;;;
one:;;;;;
"    text: """"Label 1""""";;;;;
two:;;;;;
"    text: """"Label 2""""";;;;;
```;;;;;
;;;;;
and use them here:;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails""""";;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"  # gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
;;;;;
  create_table :posts, force: true, primary_key: %i[id account_id] do |t|;;;;;
    t.integer :id;;;;;
    t.integer :account_id;;;;;
    t.string :title;;;;;
  end;;;;;
;;;;;
  create_table :posts_labels, force: true do |t|;;;;;
    t.integer :post_id;;;;;
    t.integer :account_id;;;;;
    t.references :label, foreign_key: true;;;;;
  end;;;;;
;;;;;
  create_table :labels, force: true do |t|;;;;;
    t.string :text;;;;;
  end;;;;;
end;;;;;
;;;;;
class Post < ActiveRecord::Base;;;;;
  self.primary_key = %i[id account_id];;;;;
  has_many :posts_labels;;;;;
  has_many :labels, through: :posts_labels;;;;;
end;;;;;
;;;;;
class PostsLabel < ActiveRecord::Base;;;;;
  belongs_to :post, query_constraints: [:post_id, :account_id];;;;;
  belongs_to :label;;;;;
end;;;;;
;;;;;
class Label < ActiveRecord::Base;;;;;
  has_many :posts_labels;;;;;
  has_many :posts, through: :posts_labels;;;;;
end;;;;;
;;;;;
# Load the fixtures into the database (update the directory);;;;;
"ActiveRecord::FixtureSet.create_fixtures(""""/fixtures-directory/"""", %w[posts labels])";;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_association_stuff;;;;;
    assert_equal 1, Post.count;;;;;
    assert_equal 2, Label.count;;;;;
    assert_equal 2, Post.first.labels.count # Fails here;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
According to the documentation of [ActiveRecord::FixtureSet](https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html), the fixture for the intermediate many-to-many table [can be skipped](https://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html#:~:text=Let%E2%80%99s%20make%20the%20HABTM%20fixture%20go%20away.).;;;;;
;;;;;
### Actual behavior;;;;;
The fixtures are not loaded correctly. These are the sql statements for the fixtures (notice the `null`):;;;;;
;;;;;
```sql;;;;;
"DELETE FROM """"posts""""";;;;;
"DELETE FROM """"posts_labels""""";;;;;
"DELETE FROM """"labels""""";;;;;
"INSERT INTO """"posts"""" (""""id"""", """"account_id"""", """"title"""") VALUES (980190962, 1, 'My first post')";;;;;
"INSERT INTO """"posts_labels"""" (""""post_id"""", """"label_id"""") VALUES (NULL, 980190962)";;;;;
"INSERT INTO """"posts_labels"""" (""""post_id"""", """"label_id"""") VALUES (NULL, 298486374)";;;;;
"INSERT INTO """"labels"""" (""""id"""", """"text"""") VALUES (980190962, 'Label 1')";;;;;
"INSERT INTO """"labels"""" (""""id"""", """"text"""") VALUES (298486374, 'Label 2')";;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: `7.1.3.2`;;;;;
;;;;;
**Ruby version**: `3.2.2`;;;;;
",2024-04-01T12:30:45Z,2024-04-02T06:41:43Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 126910270, 'node_id': 'MDU6TGFiZWwxMjY5MTAyNzA=', 'url': 'https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps', 'name': 'With reproduction steps', 'color': '009800', 'default': False, 'description': None}]""";;;;;
"2217292282,New print styles and generator to add to build,""";;;;;
"<img width=""""958"""" alt=""""Screenshot 2024-03-31 at 8 43 35 PM"""" src=""""https://github.com/rails/rails/assets/2223/995815e6-1d34-4550-b49c-c7a78e213cc1"""">";;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
This updates print CSS to be more inline with the overall style. The sidebar is inlined (same as mobile), and content is 100%. Previous code in the launch from boilerplate has been struck or integrated better.;;;;;
;;;;;
* Links show in text after the original link text;;;;;
* Border line around code and copy button are removed;;;;;
* Print is now generated from SCSS to CSS via the generator that builds the other CSS files ;;;;;
;;;;;
### Additional information;;;;;
;;;;;
Some browsers will override backgrounds on print;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-04-01T00:58:28Z,2024-04-01T14:57:32Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2217108029,Add `touch` option to `#update_columns` and `#update_column` methods,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
I've created this Pull Request because not all ActiveRecord persistence methods affect timestamps or have a touch option. This can be problematic, especially when there is some ETL processing that relies on the `updated_at` timestamps instead of copying the whole table. For instance, if someone uses `#update_columns` for performance reasons, it may result in lost updates. This is particularly an issue for `#update_column`. If a user wants to keep timestamps current, they have to explicitly call the `#touch` method after using `#update_column`.;;;;;
;;;;;
Examples:;;;;;
```ruby;;;;;
# we don't want to perform any callbacks or validations here so use #update_columns;;;;;
current_user.update_columns(;;;;;
  last_ip: request.remote_ip,;;;;;
  updated_at: Time.current # but we still want to keep track of the last changes, so have to provide a timestamp explicitly;;;;;
);;;;;
```;;;;;
;;;;;
```ruby;;;;;
current_user.update_column(:last_ip, request.remote_ip);;;;;
current_user.touch;;;;;
```;;;;;
;;;;;
Rails discussion: https://discuss.rubyonrails.org/t/proposal-add-touch-option-for-update-columns-update-column/85388;;;;;
;;;;;
### Detail;;;;;
;;;;;
This PR adds a `touch` option to the `#update_columns` and `#update_column` methods.;;;;;
The option allows to update `updated_at`/`updated_on` attributes with ;;;;;
;;;;;
```ruby;;;;;
    person.update_columns(name: 'John Doe', touch: true);;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-31T17:50:27Z,2024-04-03T09:44:15Z,[{'id': 107190, 'node_id': 'MDU6TGFiZWwxMDcxOTA=', 'url': 'https://api.github.com/repos/rails/rails/labels/activemodel', 'name': 'activemodel', 'color': '00E5FF', 'default': False, 'description': None}, {'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2216178575,Action Cable Guide - add Transmit method,""### Motivation / Background";;;;;
;;;;;
I was exploring making use of Action Cables for a project I was working on, and didn't find any mention of the `transmit` method of channels, which allows you to transmit data to the specific subscriber that initiated the interaction.;;;;;
;;;;;
As someone relatively new to Rails and entirely new to Action Cables I spun my wheels for a bit trying to figure out how interactions like this should be handled, and I was surprised to see the method wasn't even mentioned in the guide on Action Cables.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Documentation PR;;;;;
;;;;;
This Pull Request updates the Action Cable guide to add information on the existence of the `transmit` method, allowing channels to send data to a specific subscriber.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-30T03:23:34Z,2024-03-31T05:19:57Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2215236766,Postgresql date type is not properly typecasted when using direct SQL queries like select_all,""When using direct SQL query, the date is not properly typecasted on Postgresql:";;;;;
```;;;;;
"> ActiveRecord::Base.connection.select_all(""""  SELECT '2024-01-01'::date """")";;;;;
   (0.5ms)    SELECT '2024-01-01'::date;;;;;
  ↳ config/initializers/local.rb:52:in `sa';;;;;
=> #<ActiveRecord::Result:0x0000000115516010;;;;;
 @column_types=;;;;;
  {0=>#<ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Date:0x0000000116a5acf0 @limit=nil, @precision=nil, @scale=nil, @timezone=nil>,;;;;;
"   """"date""""=>#<ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Date:0x0000000116a5acf0 @limit=nil, @precision=nil, @scale=nil, @timezone=nil>},";;;;;
" @columns=[""""date""""],";;;;;
 @hash_rows=nil,;;;;;
" @rows=[[""""2024-01-01""""]]>";;;;;
```;;;;;
;;;;;
### Notes;;;;;
;;;;;
* The column type seems to be recognized correctly, but typecast is not applied;;;;;
* SQLite seems to generate even worth result like `2024` as integer.;;;;;
* Timestamp doesn't have this problem;;;;;
;;;;;
### Reproduce;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
require 'bundler/inline';;;;;
;;;;;
gemfile(true) do;;;;;
  source 'https://rubygems.org';;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
  gem 'rails';;;;;
;;;;;
  gem 'pg';;;;;
  # gem 'sqlite3';;;;;
end;;;;;
;;;;;
require 'active_record';;;;;
require 'minitest/autorun';;;;;
require 'logger';;;;;
;;;;;
# `CREATE DATABASE rails_51428_test;`;;;;
ActiveRecord::Base.establish_connection(adapter: 'postgresql', database: 'rails_test');;;;;
# ActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:');;;;;
ActiveRecord::Base.logger = Logger.new($stdout);;;;;
;;;;;
;;;;;
class DateTest < Minitest::Test;;;;;
  def test_stuff;;;;;
    value = ActiveRecord::Base.connection.select_value(;;;;;
"      """"select cast('2024-01-01' as date)""""";;;;;
    );;;;;
    assert_equal Date.new(2024, 01, 01), value;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
```;;;;;
Expected: Mon, 01 Jan 2024;;;;;
"  Actual: """"2024-01-01""""";;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3;;;;;
;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-29T12:13:51Z,2024-04-05T17:17:41Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 70310659, 'node_id': 'MDU6TGFiZWw3MDMxMDY1OQ==', 'url': 'https://api.github.com/repos/rails/rails/labels/PostgreSQL', 'name': 'PostgreSQL', 'color': 'fbca04', 'default': False, 'description': None}]""";;;;;
"2214734569,Fix an error for `apply_rubocop_autocorrect_after_generate!` with `--pretend`,""## Motivation / Background";;;;;
;;;;;
An issue was identified where an error occurs when executing `apply_rubocop_autocorrect_after_generate!` with `--pretend` option, according to feedback from https://github.com/rubocop/rubocop-rails/pull/1263.;;;;;
;;;;;
## Details;;;;;
;;;;;
This PR fixes the following error when executing `apply_rubocop_autocorrect_after_generate!` with `--pretend` option:;;;;;
;;;;;
```console;;;;;
$ bin/rails g migration create_users -p;;;;;
```;;;;;
;;;;;
### Before;;;;;
;;;;;
An `Errno::ENOENT` error occurs:;;;;;
;;;;;
```console;;;;;
invoke  active_record;;;;;
create    db/migrate/20240329060627_create_users.rb;;;;;
/Users/koic/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/bundler/gems/rails-8e46af8c9396/railties/lib/rails/configuration.rb:138:in;;;;;
`system': No such file or directory - bin/rubocop (Errno::ENOENT);;;;;
```;;;;;
;;;;;
### After;;;;;
;;;;;
No errors.;;;;;
;;;;;
## Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-29T06:17:20Z,2024-03-30T10:23:42Z,[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2214519753,Remove node_modules from the final image,,2024-03-29T02:55:34Z,2024-04-01T03:46:51Z,""[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2214042050,Emit deprecation warning about inverse_of inference only for valid reflections,""### Motivation / Background";;;;;
;;;;;
This is a small follow-up to https://github.com/rails/rails/pull/50883. ;;;;;
;;;;;
As we went through all deprecation warnings while we run Rails edge with;;;;;
```ruby;;;;;
config.active_record.automatically_invert_plural_associations = false;;;;;
```;;;;;
we realised that we had warnings for an inferred reflection that would be wrong to infer. Digging deeper into whether this meant that enabling `automatically_invert_plural_associations` would actually mean we'd have completely wrong values in the collection of the inferred association, we realised that no, the reflection was correctly not inferred. However, the warning was emitted regardless. ;;;;;
;;;;;
This happens because the deprecation warning is emitted without checking whether the found `reflection` is valid. The warning says that the inverse association could have been automatically inferred but wasn't because `automatically_invert_plural_associations` is disabled. However, this is not true, because later on, when we check whether the reflection is valid, we see it's not, and end up returning `nil`.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This pull request just adds the `valid_inverse_reflection?(reflection)` condition to determine whether the deprecation warning needs to happen. That already checks that `reflection` is truthy. ;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-28T20:11:38Z,2024-03-29T06:35:20Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2213953232,Make it possible to opt-out of sending Link header in `preload_link_tag`,""This commit adds a `preload_links_header` option to `preload_link_tag` to disable sending of the Link header in the HTTP response.";;;;;
;;;;;
Currently `ActionView::Helpers::AssetTagHelper.preload_links_header` only controls whether `javascript_include_tag` and `stylesheet_link_tag` send the Link header, but there is no way to control the behavior of `preload_link_tag`. We could just check that variable, but existing applications might be relying on `preload_link_tag` to add the header. Users also might want control over this on a per call basis.;;;;;
;;;;;
Closes #51436;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-28T19:18:46Z,2024-03-28T21:03:36Z,[{'id': 3666649, 'node_id': 'MDU6TGFiZWwzNjY2NjQ5', 'url': 'https://api.github.com/repos/rails/rails/labels/actionview', 'name': 'actionview', 'color': 'd7e102', 'default': False, 'description': None}]""";;;;;
"2213933174,Bump mysql2 to fix build error with mysql-client 8.3,""### Motivation / Background";;;;;
;;;;;
This fixes bundle install when using the latest version of mysql-client, 8.3;;;;;
;;;;;
### Detail;;;;;
;;;;;
<details>;;;;;
<summary>Sample installation log</summary>;;;;;
;;;;;
```;;;;;
bundle install;;;;;
Fetching gem metadata from https://rubygems.org/.........;;;;;
Installing mysql2 0.5.5 with native extensions;;;;;
Gem::Ext::BuildError: ERROR: Failed to build gem native extension.;;;;;
;;;;;
    current directory: /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/mysql2-0.5.5/ext/mysql2;;;;;
/Users/josh/.rbenv/versions/3.3.0/bin/ruby extconf.rb;;;;;
checking for rb_absint_size()... yes;;;;;
checking for rb_absint_singlebit_p()... yes;;;;;
checking for rb_gc_mark_movable()... yes;;;;;
checking for rb_wait_for_single_fd()... yes;;;;;
checking for rb_enc_interned_str() in ruby.h... yes;;;;;
-----;;;;;
Using --with-openssl-dir=/opt/homebrew/opt/openssl@3;;;;;
-----;;;;;
-----;;;;;
Using mysql_config at /opt/homebrew/bin/mysql_config;;;;;
-----;;;;;
checking for mysql.h... yes;;;;;
checking for errmsg.h... yes;;;;;
checking for SSL_MODE_DISABLED in mysql.h... yes;;;;;
checking for SSL_MODE_PREFERRED in mysql.h... yes;;;;;
checking for SSL_MODE_REQUIRED in mysql.h... yes;;;;;
checking for SSL_MODE_VERIFY_CA in mysql.h... yes;;;;;
checking for SSL_MODE_VERIFY_IDENTITY in mysql.h... yes;;;;;
checking for MYSQL.net.vio in mysql.h... yes;;;;;
checking for MYSQL.net.pvio in mysql.h... no;;;;;
checking for MYSQL_DEFAULT_AUTH in mysql.h... yes;;;;;
checking for MYSQL_ENABLE_CLEARTEXT_PLUGIN in mysql.h... yes;;;;;
checking for SERVER_QUERY_NO_GOOD_INDEX_USED in mysql.h... yes;;;;;
checking for SERVER_QUERY_NO_INDEX_USED in mysql.h... yes;;;;;
checking for SERVER_QUERY_WAS_SLOW in mysql.h... yes;;;;;
checking for MYSQL_OPTION_MULTI_STATEMENTS_ON in mysql.h... yes;;;;;
checking for MYSQL_OPTION_MULTI_STATEMENTS_OFF in mysql.h... yes;;;;;
checking for my_bool in mysql.h... no;;;;;
-----;;;;;
Don't know how to set rpath on your system, if MySQL libraries are not in path mysql2 may not load;;;;;
-----;;;;;
-----;;;;;
Setting libpath to /opt/homebrew/Cellar/mysql/8.3.0/lib;;;;;
-----;;;;;
creating Makefile;;;;;
;;;;;
current directory: /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/mysql2-0.5.5/ext/mysql2;;;;;
make DESTDIR\= sitearchdir\=./.gem.20240328-28015-xyw7df sitelibdir\=./.gem.20240328-28015-xyw7df clean;;;;;
;;;;;
current directory: /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/mysql2-0.5.5/ext/mysql2;;;;;
make DESTDIR\= sitearchdir\=./.gem.20240328-28015-xyw7df sitelibdir\=./.gem.20240328-28015-xyw7df;;;;;
compiling client.c;;;;;
In file included from client.c:15:;;;;;
./mysql_enc_name_to_ruby.h:43:1: warning: a function definition without a prototype is deprecated in all versions of C and is;;;;;
not supported in C2x [-Wdeprecated-non-prototype];;;;;
mysql2_mysql_enc_name_to_rb_hash (str, len);;;;;
^;;;;;
./mysql_enc_name_to_ruby.h:86:1: warning: a function definition without a prototype is deprecated in all versions of C and is;;;;;
not supported in C2x [-Wdeprecated-non-prototype];;;;;
mysql2_mysql_enc_name_to_rb (str, len);;;;;
^;;;;;
client.c:1438:3: error: call to undeclared function 'mysql_ssl_set'; ISO C99 and later do not support implicit function;;;;
declarations [-Wimplicit-function-declaration];;;;;
  mysql_ssl_set(wrapper->client,;;;;;
  ^;;;;;
client.c:1438:3: note: did you mean 'mysql_close'?;;;;;
/opt/homebrew/Cellar/mysql/8.3.0/include/mysql/mysql.h:797:14: note: 'mysql_close' declared here;;;;;
void STDCALL mysql_close(MYSQL *sock);;;;;
             ^;;;;;
2 warnings and 1 error generated.;;;;;
make: *** [client.o] Error 1;;;;;
;;;;;
make failed, exit code 2;;;;;
;;;;;
Gem files will remain installed in /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/mysql2-0.5.5 for inspection.;;;;;
Results logged to;;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/extensions/arm64-darwin-23/3.3.0/mysql2-0.5.5/gem_make.out;;;;;
;;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:125:in `run';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:51:in `block in make';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:43:in `each';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:43:in `make';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/ext_conf_builder.rb:42:in `build';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:193:in `build_extension';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:227:in `block in build_extensions';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:224:in `each';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/ext/builder.rb:224:in `build_extensions';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/site_ruby/3.3.0/rubygems/installer.rb:852:in `build_extensions';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/rubygems_gem_installer.rb:76:in;;;;;
`build_extensions';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/rubygems_gem_installer.rb:28:in;;;;;
`install';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/source/rubygems.rb:205:in `install';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/installer/gem_installer.rb:54:in;;;;;
`install';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/installer/gem_installer.rb:16:in;;;;;
`install_from_spec';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/installer/parallel_installer.rb:132:in;;;;;
`do_install';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/installer/parallel_installer.rb:123:in;;;;;
`block in worker_pool';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/worker.rb:62:in `apply_func';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/worker.rb:57:in `block in;;;;;
process_queue';;;;;
  <internal:kernel>:187:in `loop';;;;;
  /Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/worker.rb:54:in `process_queue';;;;;
/Users/josh/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/bundler-2.5.4/lib/bundler/worker.rb:90:in `block (2 levels) in;;;;;
create_threads';;;;;
;;;;;
An error occurred while installing mysql2 (0.5.5), and Bundler cannot continue.;;;;;
;;;;;
In Gemfile:;;;;;
  mysql2;;;;;
```;;;;;
;;;;;
</details>;;;;;
;;;;;
### Additional information;;;;;
;;;;;
- [GitHub Issue in mysql2](https://github.com/brianmario/mysql2/issues/1346);;;;;
- [0.5.6 release notes listing the fix](https://github.com/brianmario/mysql2/releases/tag/0.5.6);;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] n/a - Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] n/a - CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-28T19:05:52Z,2024-03-28T19:55:23Z,[]
2213880505,Disable send_preload_links_header outright,### Steps to reproduce";;;;;
;;;;;
Suppose you have a partial like this:;;;;;
;;;;;
```haml;;;;;
= cache([ActionController::Base.asset_host], expires_in: 1.minute) do;;;;;
    = preload_link_tag(path_to_stylesheet('application');;;;;
```;;;;;
;;;;;
If the partial is not cached, then `preload_link_tag` will call `send_preload_links_header`, which modifies the `Link` HTTP header.;;;;;
;;;;;
However, if the partial is cached, then the `Link` HTTP header is not sent.;;;;;
;;;;;
This is a surprising side effect of caching `preload_link_tag`. I was surprised that `send_preload_links_header` is even called in the first place.;;;;;
;;;;;
https://github.com/rails/rails/pull/48405 lowered the max header size from 8K to 1000 bytes, but I think Rails should go farther than that: provide an option to disable this sending altogether, perhaps as an argument to `preload_link_tag`. For example:;;;;;
;;;;;
```diff;;;;;
diff --git a/actionview/lib/action_view/helpers/asset_tag_helper.rb b/actionview/lib/action_view/helpers/asset_tag_helper.rb;;;;;
index 11528eb33d..0dd3ff517a 100644;;;;;
#NOM?;;;;;
#NOM?;;;;;
@@ -325,6 +325,7 @@ def preload_link_tag(source, options = {});;;;;
"         crossorigin = """"anonymous"""" if crossorigin == true || (crossorigin.blank? && as_type == """"font"""")";;;;;
         integrity = options[:integrity];;;;;
         nopush = options.delete(:nopush) || false;;;;;
+        send_link_header = options.key?(:preload_links_header) ? options.delete(:preload_links_header) : true;;;;;
"         rel = mime_type == """"module"""" ? """"modulepreload"""" : """"preload""""";;;;;
 ;;;;;
         link_tag = tag.link(**{;;;;;
@@ -341,7 +342,7 @@ def preload_link_tag(source, options = {});;;;;
"         preload_link += """"";" integrity=#{integrity}"""" if integrity";;;;
"         preload_link += """"";" nopush"""" if nopush";;;;
 ;;;;;
-        send_preload_links_header([preload_link]);;;;;
+        send_preload_links_header([preload_link]) if send_link_header;;;;;
 ;;;;;
         link_tag;;;;;
       end;;;;;
diff --git a/actionview/test/template/asset_tag_helper_test.rb b/actionview/test/template/asset_tag_helper_test.rb;;;;;
index f0c8a10f57..cd6cdd8925 100644;;;;;
#NOM?;;;;;
#NOM?;;;;;
@@ -628,6 +628,13 @@ def test_should_set_preload_early_hints_with_rel_modulepreload;;;;;
     end;;;;;
   end;;;;;
 ;;;;;
#NOM?;;;;;
#NOM?;;;;;
"+      preload_link_tag(""""http://example.com/all.js"""", type: """"module"""", preload_links_header: false)";;;;;
"+      assert_nil @response.headers[""""Link""""]";;;;;
#NOM?;;;;;
#NOM?;;;;;
+;;;;;
   def test_should_set_preload_links_with_integrity_hashes;;;;;
     with_preload_links_header do;;;;;
"       stylesheet_link_tag(""""http://example.com/style.css"""", integrity: """"sha256-AbpHGcgLb+kRsJGnwFEktk7uzpZOCcBY74+YBdrKVGs"""")";;;;;
```;;;;;
;;;;;
",2024-03-28T18:33:40Z,2024-03-28T21:07:42Z,[{'id': 3666649, 'node_id': 'MDU6TGFiZWwzNjY2NjQ5', 'url': 'https://api.github.com/repos/rails/rails/labels/actionview', 'name': 'actionview', 'color': 'd7e102', 'default': False, 'description': None}, {'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}]""";;;;;
"2213548177,[RF-DOCS] Action View Overview Guide [ci-skip],""## Motivation / Background";;;;;
;;;;;
This Pull Request is for updating and improving the Action View Overview guide. ;;;;;
;;;;;
Note: This guide was intertwined with a different guide (Layouts and Rendering) with duplicate content and overlapping concepts. A follow-on PR will focus on the other guide and then we will do a pass over both guides together.;;;;;
;;;;;
## Details;;;;;
;;;;;
#NOM?;;;;;
#NOM?;;;;;
#NOM?;;;;;
#NOM?;;;;;
;;;;;
## Testing;;;;;
;;;;;
- [x] Run `guides:generate`;;;;;
- [x] Run `guides:lint` ;;;;;
"- [x] Run rubocop on code samples"",2024-03-28T15:41:52Z,2024-04-06T01:04:57Z,""[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2213456024,[Bug][ActiveRecord] #count(:all) on grouped query should clear ORDER BY if it clears SELECT,""### Steps to reproduce";;;;;
;;;;;
"Build a query that uses `.count(:all)` and `.group(...)` with a custom `.select(""""... AS alias"""")` and a `.order(:alias)`";;;;;
;;;;;
It seems ActiveRecord when calling `.count(:all)` will remove from the SELECT the `alias` column and everything else but the primary key, however it keeps the `ORDER BY alias`. To execute `COUNT(...)`, the `ORDER BY` is kind of irrelevant, it should probably be removed.;;;;;
;;;;;
ActiveRecord seems to already clear ORDER BY for some specific scenario as seen here: https://github.com/rails/rails/blob/main/activerecord/lib/active_record/relation/calculations.rb#L240 however in my scenario, the `has_include(...)` returns false and goes straight to `perform_calculation(operation, column_name)`;;;;;
;;;;;
Here https://github.com/rails/rails/blob/main/activerecord/lib/active_record/relation/calculations.rb#L536 select values are redefined, maybe we should simply add;;;;;
;;;;;
```;;;;;
relation.order_values = [];;;;;
```;;;;;
;;;;;
;;;;;
**Test code**;;;;;
;;;;;
Note: It ain't specific to Postgres. Error is present with SQLite too.;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
# Toggle this to test with SQLite;;;;;
use_postgres = false;;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", """"7.1.3.2""""";;;;;
;;;;;
"  gem """"database_cleaner""""";;;;;
;;;;;
  if use_postgres;;;;;
"    gem """"pg""""";;;;;
  else ;;;;;
"    gem """"sqlite3""""";;;;;
  end;;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
"require """"database_cleaner""""";;;;;
;;;;;
if use_postgres;;;;;
"  ActiveRecord::Base.establish_connection(adapter: """"postgresql"""", host: """"localhost"""", database: """"dev"""", username: """"dev"""",";;;;;
"  password: """"dev"""", port: 5437)";;;;;
else;;;;;
"  ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
end;;;;;
;;;;;
ActiveRecord::Base.logger = Logger.new($stdout);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :conversations, force: true do |t| # rubocop:disable Style/SymbolProc;;;;;
    t.timestamps;;;;;
  end;;;;;
;;;;;
  create_table :messages, force: true do |t|;;;;;
    t.references :conversation;;;;;
    t.timestamps;;;;;
  end;;;;;
end;;;;;
;;;;;
class Conversation < ActiveRecord::Base # rubocop:disable Rails/ApplicationRecord;;;;;
  has_many :messages, dependent: :destroy;;;;;
end;;;;;
;;;;;
class Message < ActiveRecord::Base # rubocop:disable Rails/ApplicationRecord;;;;;
  belongs_to :conversation;;;;;
end;;;;;
;;;;;
DatabaseCleaner.strategy = :truncation;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  class SuccessException < StandardError; end;;;;
;;;;;
  def setup;;;;;
    DatabaseCleaner.start;;;;;
    Conversation.create!.tap do |conversation|;;;;;
      Message.create!(conversation: conversation);;;;;
      Message.create!(conversation: conversation);;;;;
      Message.create!(conversation: conversation);;;;;
    end;;;;;
  end;;;;;
  ;;;;;
  def teardown;;;;;
    DatabaseCleaner.clean;;;;;
  end;;;;;
;;;;;
  def assert_not_raise(&block);;;;;
    assert_raises(SuccessException) do;;;;;
      block.call;;;;;
      raise SuccessException;;;;;
    end;;;;;
  end;;;;;
;;;;;
  def sql_now;;;;;
"    if ActiveRecord::Base.connection_db_config.adapter == """"sqlite3""""";;;;;
"      """"DATE('NOW')""""";;;;;
    else;;;;;
"      """"NOW()""""";;;;;
    end;;;;;
  end;;;;;
;;;;;
  def base_query;;;;;
    Conversation;;;;;
            .select(;;;;;
"              """"conversations.*"""",";;;;;
"              """"COUNT(messages.id) AS messages_count"""",";;;;;
"              """"#{sql_now} AS last_activity_at""""";;;;;
            );;;;;
            .left_joins(:messages);;;;;
            .group(:id);;;;;
  end;;;;;
;;;;;
  def test_it_should_work_with_aliased_order_by;;;;;
"    query = base_query.order(""""last_activity_at DESC"""")";;;;;
;;;;;
    assert_not_raise { query.count(:all) };;;;;
  end;;;;;
;;;;;
  def test_it_demonstrates_that_non_aliased_order_by_work;;;;;
"    query = base_query.order(Arel.sql(""""#{sql_now} DESC""""))";;;;;
;;;;;
;;;;;
    assert_not_raise { query.count(:all) };;;;;
  end;;;;;
;;;;;
  def test_without_order_by_it_always_work;;;;;
"    query = base_query # .order(""""last_activity_at DESC"""")";;;;;
;;;;;
    assert_not_raise { query.count(:all) };;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
This query should work;;;;;
;;;;;
```ruby;;;;;
    Conversation;;;;;
            .select(;;;;;
"              """"conversations.*"""",";;;;;
"              """"COUNT(messages.id) AS messages_count"""",";;;;;
"              """"NOW() AS last_activity_at""""";;;;;
            );;;;;
            .left_joins(:messages);;;;;
            .order(:last_activity_at);;;;;
            .group(:id);;;;;
```;;;;;
;;;;;
Expected query;;;;;
;;;;;
```;;;;;
SELECT ;;;;;
"  COUNT(*) AS """"count_all"""", ";;;;;
"  """"conversations"""".""""id"""" AS """"conversations_id"""" ";;;;;
"FROM """"conversations"""" ";;;;;
"LEFT OUTER JOIN """"messages"""" ON """"messages"""".""""conversation_id"""" = """"conversations"""".""""id"""" ";;;;;
"GROUP BY """"conversations"""".""""id""""";;;;;
;;;;;
#NOM?;;;;;
#NOM?;;;;;
```;;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
```;;;;;
"ActiveRecord::StatementInvalid <""""PG::UndefinedColumn: ERROR:  column \""""last_activity_at\"""" does not exist";;;;;
;;;;;
SELECT ;;;;;
"  COUNT(*) AS """"count_all"""", ";;;;;
"  """"conversations"""".""""id"""" AS """"conversations_id"""" ";;;;;
"FROM """"conversations"""" ";;;;;
"LEFT OUTER JOIN """"messages"""" ON """"messages"""".""""conversation_id"""" = """"conversations"""".""""id"""" ";;;;;
"GROUP BY """"conversations"""".""""id""""";;;;;
ORDER BY last_activity_at DESC;;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.0.0;;;;;
",2024-03-28T14:59:27Z,2024-04-02T15:15:35Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2210141203,[RF-DOCS] Action View Helpers Documentation [ci-skip],""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
This Pull Request has been created to provide clarity to the Action View Helpers guide.;;;;;
;;;;;
### Detail;;;;;
;;;;;
;;;;;
Here are some notes on what has changed:;;;;;
;;;;;
Some notes:;;;;;
;;;;;
- AssetTagHelper talks about a bunch of *_tag helpers, but also some of them mention *_url and *_path helpers. (which live in AssetUrlHelper). Those are helpful to know, but less frequently used I think. It's also incomplete (some mention it, others don't, *_tag helpers have their *_url/*_path counterparts, or use the basic `asset_path/url`.) I don't think it's worth expanding with all these variants, I'd rather remove the individual ones, and if we want to mention, we can maybe bundle them together within the same subsection instead, or just as examples of the related *_tag sections.;;;;;
- The cache helper could use some more info. I don't think it's worth linking to the Fragments API, but rather to the [fragments caching piece of the caching guide](https://edgeguides.rubyonrails.org/caching_with_rails.html#fragment-caching), where it goes into more details. The example could also be expanded to show something that at least gets a record as an example too.;;;;;
- `content_for` could perhaps benefit from showing `content_for?` in the example, somehow.;;;;;
- We do not want to show any form helpers here, just link to the specific guide, but we can maybe make that paragraph clearer.;;;;;
- `escape_javascript` could use an example (not the one that's on the API as it seems very jquery-related... maybe some other example of embedding some Ruby in JS or something);;;;;
- mention of `rails-html-sanitizer` could be linked.;;;;;
"- """"NB: The output may still contain unescaped '<', '>', '&' characters and confuse browsers."""" should be a note?";;;;;
- UrlHelper could have a few extra items like `current_page?` and `mail_to`, which can be commonly used. (no need to show each and every method, just the most common ones);;;;;
- CsrfHelper seems unnecessary to explain here. (we don't add CspHelper for instance... not sure we need to get into those, can probably skip them.);;;;;
- We could have a section on `TextHelper` mentioning things like `simple_format`, `truncate`, `excerpt`, maybe some other(s). (again, not everything, just the most commonly used ones);;;;;
- We could have a section on `TagHelper` mentioning `content_tag` and `tag`.;;;;;
;;;;;
- Updated the 'what you will know section';;;;;
#NOM?;;;;;
#NOM?;;;;;
#NOM?;;;;;
#NOM?;;;;;
- Added more clarity to `capture` and `content_for`;;;;;
#NOM?;;;;;
#NOM?;;;;;
#NOM?;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-27T08:14:18Z,2024-04-04T09:42:14Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}, {'id': 6434393529, 'node_id': 'LA_kwDNIULPAAAAAX-FDbk', 'url': 'https://api.github.com/repos/rails/rails/labels/rails%20foundation', 'name': 'rails foundation', 'color': 'e99695', 'default': False, 'description': 'Rails Foundation PRs'}]""";;;;;
"2209113208,Fix PostgreSQL `include` indexes with keyword column names,Fixes #51428.,2024-03-26T19:13:53Z,2024-03-27T16:01:54Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2208982733,Problem with field named timestamp and index with include,""### Steps to reproduce";;;;;
;;;;;
"When you have a field named """"timestamp"""" and want to add an index including this field, the schema is generated with escape characters, making it impossible to run the load schema";;;;;
;;;;;
```ruby;;;;;
class ChangeIndexStatusToEvent < ActiveRecord::Migration[7.1];;;;;
  def change;;;;;
    add_index :events, [:status, :name, :app_id], name: 'index_events_on_status_name_app_id', include: [:id, :timestamp];;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
This schema is generated when running the migrate above:;;;;;
;;;;;
```ruby;;;;;
"t.index [""""status"""", """"name"""", """"app_id"""", """"timestamp""""], name: """"index_events_on_status_name_app_id"""", include: [""""id"""", """"\""""timestamp\""""""""]";;;;;
```;;;;;
;;;;;
Test case:;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
require 'bundler/inline';;;;;
;;;;;
gemfile(true) do;;;;;
  source 'https://rubygems.org';;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
  gem 'rails';;;;;
;;;;;
  gem 'pg';;;;;
end;;;;;
;;;;;
require 'active_record';;;;;
require 'minitest/autorun';;;;;
require 'logger';;;;;
;;;;;
# `CREATE DATABASE rails_51428_test;`;;;;
ActiveRecord::Base.establish_connection(adapter: 'postgresql', database: 'rails_51428_test');;;;;
ActiveRecord::Base.logger = Logger.new($stdout);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :events, force: true do |t|;;;;;
    t.decimal :amount, precision: 10, scale: 0, default: 0, null: false;;;;;
    t.datetime :timestamp;;;;;
  end;;;;;
;;;;;
  add_index :events, [:amount], name: 'index_events_on_timestamp', include: [:timestamp];;;;;
end;;;;;
;;;;;
ActiveRecord::SchemaDumper.dump;;;;;
;;;;;
class Event < ActiveRecord::Base; end;;;;
;;;;;
class EventTest < Minitest::Test;;;;;
  def test_stuff;;;;;
    assert_equal 0, Event.count;;;;;
    Event.create!(amount: 1);;;;;
    assert_equal 1, Event.count;;;;;
;;;;;
    # Note: this fails silently. I later discovered that neither this nor;;;;;
    # `ActiveRecord::Tasks::DatabaseTasks.load_schema_current(:ruby, ENV['SCHEMA'])`;;;;;
    # fail. See comments below.;;;;;
    puts `rails db:schema:load`;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
"I am not sure if the word """"timestamp"""" is reserved for the system, but I started having this problem after upgrading the rails version from 7.0.3 to 7.1.0";;;;;
;;;;;
;;;;;
### Expected behavior;;;;;
"Don't escape the characters at include in index or add this explanation to take care to use field named """"timestamp"""" in Rails Guide.";;;;;
;;;;;
### Actual behavior;;;;;
"Using field named """"timestamp"""" and adding index with this field in include, results in the schema with escaped characters, making it impossible to run the load schema.";;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.0;;;;;
;;;;;
**Ruby version**: 3.3.0;;;;;
",2024-03-26T18:15:15Z,2024-03-27T20:46:42Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 70310659, 'node_id': 'MDU6TGFiZWw3MDMxMDY1OQ==', 'url': 'https://api.github.com/repos/rails/rails/labels/PostgreSQL', 'name': 'PostgreSQL', 'color': 'fbca04', 'default': False, 'description': None}, {'id': 126910270, 'node_id': 'MDU6TGFiZWwxMjY5MTAyNzA=', 'url': 'https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps', 'name': 'With reproduction steps', 'color': '009800', 'default': False, 'description': None}]""";;;;;
"2208080356,Request session id unavailable when streaming HTML,""The default Content Security Policy nonce generator returns the `request.session.id`, but this isn’t available when streaming an HTML response.";;;;;
;;;;;
### Steps to reproduce;;;;;
1. Enable the default Content Security Policy by uncommenting the code generated in `config/initializers/content_security_policy.rb`;;;;;
2. Stream an HTML response form a controller;;;;;
;;;;;
**Content Security Policy Config:**;;;;;
```ruby;;;;;
Rails.application.configure do;;;;;
  config.content_security_policy do |policy|;;;;;
    policy.default_src :self, :https;;;;;
    policy.font_src    :self, :https, :data;;;;;
    policy.img_src     :self, :https, :data;;;;;
    policy.object_src  :none;;;;;
    policy.script_src  :self, :https;;;;;
    policy.style_src   :self, :https;;;;;
  end;;;;;
;;;;;
  config.content_security_policy_nonce_generator = ->(request) { request.session.id };;;;;
  config.content_security_policy_nonce_directives = %w(script-src style-src);;;;;
end;;;;;
```;;;;;
;;;;;
**Example controller:**;;;;;
;;;;;
```ruby;;;;;
class DashboardController < ApplicationController;;;;;
  def index;;;;;
"    headers[""""X-Accel-Buffering""""] = """"no""""";;;;;
"    headers[""""Cache-Control""""] = """"no-transform""""";;;;;
"    headers[""""Last-Modified""""] = Time.now.httpdate";;;;;
"    headers[""""Content-Type""""] = """"text/html";" charset=utf-8""""";;;;
;;;;;
    self.response_body = Enumerator.new do |buffer|;;;;;
"      buffer << """"<html><head><title>Dashboard</title></head><body>""""";;;;;
"      buffer << """"<h1>Dashboard</h1>""""";;;;;
"      buffer << """"<p>Welcome to the dashboard</p>""""";;;;;
"      buffer << """"</body></html>""""";;;;;
    end;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behaviour;;;;;
The Content Security Policy headers should include a nonce based on the session id.;;;;;
;;;;;
```;;;;;
Content-Security-Policy: default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src 'none'; script-src 'self' https: 'nonce-2c3f06bf498ed7295cc4612bdc7ad90e'; style-src 'self' https: 'nonce-2c3f06bf498ed7295cc4612bdc7ad90e'
```;;;;;
;;;;;
### Actual behaviour;;;;;
The Content Security Policy headers do not include a nonce.;;;;;
;;;;;
```;;;;;
Content-Security-Policy: default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src 'none'; script-src 'self' https:; style-src 'self' https:
```;;;;;
;;;;;
### Workaround;;;;;
As a workaround, you can set a session attribute and remove it before setting the `response_body`.;;;;;
;;;;;
```ruby;;;;;
session[:foo] = 1;;;;;
session.delete(:foo);;;;;
```;;;;;
;;;;;
This seems to get the session into a state where it has an `id`.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
"**Ruby version**: 3.3.0"",2024-03-26T12:13:22Z,2024-03-26T12:14:52Z,[]";;;;;
"2206546795,Add Active Model `Collection` attribute type,""### Summary";;;;;
;;;;;
One case that is not yet covered by the current standard types is for attributes that represent a collection of multiple values. For example, one might need to represent a subset of strings as a list in a single attribute; or even an entire group of associated models that are all embedded in a named collection. ;;;;
;;;;;
;;;;;
This PR aims to implement a new Collection type.;;;;;
It subclasses the base Value class and overrides the necessary methods so casting and serialization work for an array of objects that are themselves valid for one of the types in the Registry. This ensures that each element of the collection can be cast and serialized individually by delegating the operation to the appropriate type instance.;;;;;
;;;;;
Collection serializes itself as a JSON array on the database. For casting, it attempts to convert values to a Ruby array.;;;;;
;;;;;
Methods:;;;;;
;;;;;
- `type`: returns the :collection symbol.;;;;;
- `serializable?`: checks if the given value is an array containing only elements in which are all serializable for the collection type. It will instantiate the type passed during its own initialization and call serializable? for each element.;;;;;
- `serialize`: returns a JSON string of an array with all elements serialized by the collection type.;;;;;
- `deserialize`: expects a JSON array string and converts it into a Ruby array with each element deserialized by the collection type.;;;;;
- `cast`: converts the given array into a normalized collection of cast values. It will map the given array to a new one in which each element is cast into a new value by the collection type.;;;;;
- `changed_in_place?`: Accepts raw serialized value, deserializes it and checks if any of the elements of the collections were mutated according to the collection type method of the same name.;;;;;
- `assert_valid_value`: checks if all elements of the given array are accepted by the collection type method of the same name.;;;;;
;;;;;
;;;;;
;;;;;
### Other Information;;;;;
;;;;;
This change also introduces additional `Value#valid_value?` method that is supposed to separate the assertion, which raises an exception from a boolean check that can be reused in other places. This way new types won't have to override the whole `assert_valid_value` method if they want to keep the default error message.;;;;;
;;;;;
Let me know if this change should be implemented in a separate PR. I decided to keep it in this PR for better readability of the change but definitely willing to extract it and have a discussion is a different PR. Thanks!;;;;;
;;;;;
### Documentation;;;;;
;;;;;
Currently only the class itself is covered with documentation. But we have plans to cover public methods as well.;;;;;
Either in this PR, in a separate one or perhaps as part of the https://github.com/rails/rails/pull/44306;;;;;
;;;;;
"Original PR #44324"",2024-03-25T19:38:19Z,2024-04-03T17:01:06Z,""[{'id': 107190, 'node_id': 'MDU6TGFiZWwxMDcxOTA=', 'url': 'https://api.github.com/repos/rails/rails/labels/activemodel', 'name': 'activemodel', 'color': '00E5FF', 'default': False, 'description': None}]""";;;;;
"2206478011,Add `Model` type to Active Model attributes,""### Summary";;;;;
;;;;;
The new Model type handles all operations on conversion around model representations, from POROs to hashes and database string/JSON columns.;;;;;
;;;;;
Attributes that are specified as the Model type are required to also specify a class name, which will be used to cast the given values into model instances. On the database serialization side, the model is represented as a JSON, with its `AttributeSet` being serialized by the types of each respective attribute.;;;;;
;;;;;
;;;;;
;;;;;
### Docs:;;;;;
;;;;;
`type`: returns the :model symbol.;;;;;
;;;;;
`serializable?`: checks if the given value is an instance of the model class that this type was initialized with, returning false otherwise.;;;;;
;;;;;
`serialize`: returns a string with the JSON representation of the given model attributes. It achieves that by calling values_for_database in the model’s AttributeSet, and converts the hash received into a JSON string.;;;;;
;;;;;
`deserialize`: this method expects a JSON string, supposed to be a serialized set of attributes of a model instance. It proceeds to convert the JSON into a Ruby hash, and then instantiates a new model of the appropriate class name with the Ruby hash as its attributes. The mass assignment will allow each attribute to be deserialized accordingly and stored in the instance’s attribute set.;;;;;
;;;;;
`cast`: receives a value that is either a hash of attributes or a model instance. It then instantiates a new model based on the class name with the given attributes. This means that if a model is passed, a new instance with the same attribute values will be returned, but not the exact same object.;;;;;
;;;;;
`changed_in_place?`: Accepts a raw serialized attribute set, deserializes it and compares it with the given model instance. If the deserialized model’s attribute set is equal to the given model’s attribute set, returns true, or false otherwise.;;;;;
;;;;;
`assert_valid_value`: this method checks if the given value can be cast to the model class. It takes either a model or a hash of attributes. If the model is not the same class as the type’s class name, or if the given hash contains keys that do not belong to the class's attribute set, it raises an error.;;;;;
;;;;;
### Other Information;;;;;
;;;;;
`attributes_for_database` was copied from ;;;;;
https://github.com/rails/rails/blob/caced273937cf61c9ed2056877e0c3cd6a6b6577/activerecord/lib/active_record/attribute_methods/before_type_cast.rb#L70;;;;;
with an intention to only exist in Active Model, but kept in both places for simplicity of this PR;;;;;
;;;;;
"Original PR #44380"",2024-03-25T19:02:28Z,2024-03-25T21:39:48Z,""[{'id': 107190, 'node_id': 'MDU6TGFiZWwxMDcxOTA=', 'url': 'https://api.github.com/repos/rails/rails/labels/activemodel', 'name': 'activemodel', 'color': '00E5FF', 'default': False, 'description': None}]""";;;;;
"2204627024,Fix `destroy_async` job for owners with composite primary keys,""Currently, `DestroyAssociationAsyncJob` does not work when we have an owner with a composite primary key. ";;;;;
"This PR fixes that."",2024-03-24T23:55:18Z,2024-03-24T23:56:54Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2203991751,ActiveSupport::Cache.expand_cache_key sometimes returns falsely same key in parallel tests,""### Steps to reproduce";;;;;
Thats the hard part here! I still didnt figure out how to reproduce it safely. ;;;;;
What i can tell is that this does not happen when i execute a single testcase. It also doesnt happen when i set parallel workers to `1`.;;;;;
;;;;;
When parallel workers is set to `processors` and all tests are executed via `rails test`, the following test is breaking repeatedly:;;;;;
```ruby;;;;;
"      it """"returns updated records omitting cache and returning new etag"""" do";;;;;
"        get """"/apis/v1/me/tickets""""";;;;;
        assert_valid_json_response;;;;;
;;;;;
"        assert_changes ->{ last_response.headers[""""etag""""] } do";;;;;
          travel 1.second;;;;;
          tickets(:multi).touch;;;;;
;;;;;
"          get """"/apis/v1/me/tickets""""";;;;;
          assert_valid_json_response;;;;;
        end;;;;;
      end;;;;;
```;;;;;
The etag header is calculated basically via this line of code which i also found out to return the same **wrong key**. The `updated_at` on the record `tickets(:multi)` changes, but the underlying query fetching the `max(tickets.updated_at)` seem to return an older timestamp? At least the timestamp in the key remains the same.;;;;;
```;;;;;
ActiveSupport::Cache.expand_cache_key current_user.tickets.visible;;;;;
```;;;;;
The visible scope: ;;;;;
```;;;;;
"scope :visible, -> { joins(:admittances).where(tickets: {hidden: false}).merge(Admittance.visible).group(""""tickets.id"""")}";;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
The etag header should change in the same way whether i execute a single test or all together without flakiness. ;;;;;
;;;;;
### Actual behavior;;;;;
The etag header **remains equal** which is wrong. But this happens only when executing all tests parallelized which is kinda flaky.;;;;;
;;;;;
### Notes;;;;;
I found out that changing the scope implementation from `group` to `distinct` fixes it:;;;;;
```;;;;;
"scope :visible, -> { joins(:admittances).where(tickets: {hidden: false}).merge(Admittance.visible).select(""""distinct on (#{table_name}.id) #{table_name}.*"""")}";;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.2;;;;;
;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-23T18:20:10Z,2024-03-27T09:26:49Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}]""";;;;;
"2203763430,Ignore destroyed records in CollectionAssociation#empty?,""Fix: https://github.com/rails/rails/issues/51388";;;;;
;;;;;
This commit isn't in a mergeable state, it's just to better understand the issue at hand. There is likely similar issues in other methods and it would need some tests.;;;;;
;;;;;
",2024-03-23T08:08:02Z,2024-03-23T08:08:09Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2203250382,Expose @association as a reader in ActiveRecord_Associations_CollectionProxy,""This makes it possible to reflect on associations. For example, Blog.first.posts.association.owner would show that the blog is the owner of the association.";;;;;
;;;;;
## Why?;;;;;
;;;;;
I have a link helper in my Rails app that reflects on associations, like this: `show(@blog.posts)`. Currently I can't reflect on that association unless I access a private instance variable:;;;;;
;;;;;
```ruby;;;;;
"@blog.posts.instance_variable_get(""""@association"""").target";;;;;
```;;;;;
;;;;;
This commit exposes the `@association` object in a public API so I can reflect on associations.;;;;;
",2024-03-22T20:22:30Z,2024-03-26T21:13:58Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2202930057,`ActiveRecord::Suppressor` not working on associations that are loaded via `inverse_of` on unsaved records,""### Steps to reproduce";;;;;
This issue comes from [this comment](https://github.com/rails/rails/pull/50284#issuecomment-2004506200), and started happening after #50284. @rafaelfranca confirmed this behaviour (outlined by @andrewyoo) is intended:;;;;;
;;;;;
```ruby;;;;;
Loading development environment (Rails 7.2.0.alpha);;;;;
umami(dev)> u = User.new;;;;;
=> ;;;;;
#<User:0x000000012c399b30;;;;;
...;;;;;
umami(dev)> s = Shift.new user: u;;;;;
=> #<Shift:0x0000000129e31d98 id: nil, user_id: nil>;;;;;
umami(dev)> s.user;;;;;
=> ;;;;;
#<User:0x000000012c399b30>;;;;;
umami(dev)> u.shifts;;;;;
=> [#<Shift:0x0000000129e31d98 id: nil, user_id: nil>];;;;;
```;;;;;
;;;;;
However, this has the side effect of breaking `ActiveRecord::Suppressor` if you happen to modify the association owner outside the suppression block. Here's a minimal reproduction script:;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
"require """"debug""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
ActiveRecord::Base.has_many_inversing = true;;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :events, force: true do |t|;;;;;
    t.string :action, limit: 255;;;;;
    t.references :recording;;;;;
;;;;;
    t.timestamps;;;;;
  end;;;;;
;;;;;
  create_table :recordings, force: true do |t|;;;;;
    t.string :content;;;;;
;;;;;
    t.timestamps;;;;;
  end;;;;;
end;;;;;
;;;;;
class Recording < ActiveRecord::Base;;;;;
  has_many :events, dependent: :destroy;;;;;
;;;;;
  after_create :track_created;;;;;
;;;;;
  def track_event(action);;;;;
    Event.create! recording: self, action: action;;;;;
  end;;;;;
;;;;;
  def copy;;;;;
    transaction do;;;;;
      recording = Event.suppress { Recording.create!(content: content) };;;;;
      recording.update!(updated_at: updated_at);;;;;
      recording.track_event(:copied_copy);;;;;
      track_event(:copied_original);;;;;
    end;;;;;
  end;;;;;
;;;;;
  private;;;;;
    def track_created;;;;;
      track_event :created;;;;;
    end;;;;;
end;;;;;
;;;;;
class Event < ActiveRecord::Base;;;;;
  belongs_to :recording, required: false;;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_suppress_events_on_copies;;;;;
"    recording = Recording.create!(content: """"original"""")";;;;;
    assert_equal 1, Event.count;;;;;
;;;;;
    recording.copy;;;;;
;;;;;
    assert_equal 3, Event.count;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
Unless it's decided that this is now the expected behaviour for suppression as well, and needs to be documented, I'd expect the above test to pass. ;;;;;
;;;;;
I think, ideally, we'd fix `ActiveRecord::Suppressor` to deal with this case: a record that was set but not saved while the model was suppressed shouldn't be saved afterwards indirectly via the association owner. ;;;;;
;;;;;
### Actual behavior;;;;;
The test fails with ;;;;;
```;;;;;
Failure:;;;;;
BugTest#test_suppress_events_on_copies [test.rb:75]:;;;;;
Expected: 3;;;;;
  Actual: 4;;;;;
```;;;;;
because we added a `created` event to the copy when we save the original recording outside the `Event.suppress` block. ;;;;;
;;;;;
### System configuration;;;;;
**Rails version**:  Rails version: `main` (7c68c52);;;;;
**Ruby version**: 3.3.0 (though it should happen with any version).;;;;;
",2024-03-22T17:00:08Z,2024-03-25T12:53:02Z,[]
2202177190,Inconsistency between `any?`/`empty?` and `size` for collection associations loaded via `inverse_of`,### Steps to reproduce";;;;;
This behaviour seems to have been uncovered by #50284, but it wasn't introduced by that change. Now, if you have two associations like these: ;;;;;
;;;;;
```ruby;;;;;
class Blob < ActiveRecord::Base;;;;;
  has_many :attachments;;;;;
end;;;;;
 ;;;;;
class Attachment < ActiveRecord::Base;;;;;
  belongs_to :blob, required: false;;;;;
end;;;;;
```;;;;;
with `ActiveRecord::Base.has_many_inversing = true`, the following: ;;;;;
```ruby;;;;;
attachment.blob;;;;;
```;;;;;
would load `attachment` within `attachment.blob.attachments` inside the collection's `@target` without setting it as `loaded!`. The result is what I find a bit inconsistent behaviour if you delete `attachment` but I'm not quite sure what the right behaviour should be. ;;;;;
;;;;;
Here's a reproduction script where the inconsistency can be seen in action:;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
"  gem """"stringio"""", """"3.0.9""""";;;;;
"  gem """"debug""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
 ;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
ActiveRecord::Base.has_many_inversing = true;;;;;
 ;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :attachments, force: true do |t|;;;;;
    t.string :name, limit: 255;;;;;
    t.integer :blob_id;;;;;
;;;;;
    t.timestamps;;;;;
  end;;;;;
 ;;;;;
  create_table :blobs, force: true do |t|;;;;;
    t.timestamps;;;;;
  end;;;;;
end;;;;;
 ;;;;;
class Blob < ActiveRecord::Base;;;;;
  has_many :attachments;;;;;
;;;;;
  def has_attachments?;;;;;
    attachments.any?;;;;;
  end;;;;;
end;;;;;
 ;;;;;
class Attachment < ActiveRecord::Base;;;;;
  belongs_to :blob, required: false;;;;;
;;;;;
  after_destroy :destroy_exclusive_blobs;;;;;
;;;;;
  private;;;;;
    def destroy_exclusive_blobs;;;;;
      blob.destroy if blob && !blob.has_attachments?;;;;;
    end;;;;;
end;;;;;
 ;;;;;
class BugTest < Minitest::Test;;;;;
  def test_destroy_exclusive_blobs;;;;;
    blob = Blob.create!;;;;;
    attachment = Attachment.create!(blob: blob);;;;;
;;;;;
    assert_equal 1, Blob.count;;;;;
;;;;;
    attachment.destroy;;;;;
;;;;;
    assert_equal 0, Blob.count;;;;;
   end;;;;;
 end;;;;;
```;;;;;
;;;;;
The test fails after #50284 as `any?` returns `true`. That comes from `empty?` https://github.com/rails/rails/blob/68b20b6513fe56ca80e4966628c231b4d6113bea/activerecord/lib/active_record/associations/collection_association.rb#L230-L236;;;;;
;;;;;
`loaded?` is false, yet `target` includes an `Attachment` record, so `target.empty?` is false. Note that `target.emtpy?` there was added initially to consider newly created records that hadn't been persisted yet (https://github.com/rails/rails/pull/8912). ;;;;;
;;;;;
If replacing `attachments.any?` with `attachments.size > 0`, like this: ;;;;;
```ruby;;;;;
class Blob < ActiveRecord::Base;;;;;
  has_many :attachments;;;;;
;;;;;
  def has_attachments?;;;;;
    attachments.size > 0;;;;;
  end;;;;;
end;;;;;
```;;;;;
the test passes. ;;;;;
;;;;;
### Expected behavior;;;;;
I'd expect both ways, `attachments.size > 0` and `attachments.any?` to behave in the same way, but I'm not completely sure given the code for `CollectionAssociation#empty?` and `CollectionAssociation#size`. If they're supposed to behave inconsistently in this case, perhaps this should be documented. ;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: `main` (7c68c5210cbc245d778daa7958cab73bc74f4669);;;;;
;;;;;
"**Ruby version**: 3.3.0 (though it should happen with any version). "",2024-03-22T10:25:40Z,2024-03-25T15:49:29Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}]""";;;;;
"2201499276,Inconsistent behaviour with previous encryption schemes at global / attribute level,""### Steps to reproduce";;;;;
;;;;;
ref: https://guides.rubyonrails.org/active_record_encryption.html#support-for-previous-encryption-schemes;;;;;
;;;;;
Consider these three tests, to be added to [encryption_schemes_test.rb](https://github.com/rails/rails/blob/main/activerecord/test/cases/encryption/encryption_schemes_test.rb):;;;;;
;;;;;
```ruby;;;;;
"  test """"deterministic property is retained when using previous schemes at the attribute level"""" do";;;;;
"    ActiveRecord::Encryption.config.deterministic_key = """"12345""""";;;;;
;;;;;
    encrypted_author_class = Class.new(Author) do;;;;;
"      self.table_name = """"authors""""";;;;;
;;;;;
      encrypts :name, deterministic: true, previous: { encryptor: PassthruEncryptor.new };;;;;
    end;;;;;
;;;;;
    assert_includes encrypted_author_class.deterministic_encrypted_attributes, :name;;;;;
;;;;;
"    author = encrypted_author_class.create!(name: """"Stephen King"""")";;;;;
"    assert_equal author, encrypted_author_class.find_by_name(""""Stephen King"""")";;;;;
  end;;;;;
;;;;;
"  test """"deterministic property is retained when using previous schemes at the global level"""" do";;;;;
"    ActiveRecord::Encryption.config.deterministic_key = """"12345""""";;;;;
    ActiveRecord::Encryption.config.previous = [{ encryptor: PassthruEncryptor.new }];;;;;
;;;;;
    encrypted_author_class = Class.new(Author) do;;;;;
"      self.table_name = """"authors""""";;;;;
;;;;;
      encrypts :name, deterministic: true;;;;;
    end;;;;;
;;;;;
    assert_includes encrypted_author_class.deterministic_encrypted_attributes, :name;;;;;
;;;;;
"    author = encrypted_author_class.create!(name: """"Stephen King"""")";;;;;
"    assert_equal author, encrypted_author_class.find_by_name(""""Stephen King"""")";;;;;
  end;;;;;
;;;;;
"  test """"deterministic property can be explicitly provided when using previous schemes at the attribute level"""" do";;;;;
"    ActiveRecord::Encryption.config.deterministic_key = """"12345""""";;;;;
;;;;;
    encrypted_author_class = Class.new(Author) do;;;;;
"      self.table_name = """"authors""""";;;;;
;;;;;
      encrypts :name, deterministic: true, previous: { encryptor: PassthruEncryptor.new, deterministic: true };;;;;
    end;;;;;
;;;;;
    assert_includes encrypted_author_class.deterministic_encrypted_attributes, :name;;;;;
;;;;;
"    author = encrypted_author_class.create!(name: """"Stephen King"""")";;;;;
"    assert_equal author, encrypted_author_class.find_by_name(""""Stephen King"""")";;;;;
  end;;;;;
```;;;;;
;;;;;
The second and third tests pass. The first fails:;;;;;
;;;;;
```;;;;;
Failure:;;;;;
ActiveRecord::Encryption::EncryptionSchemesTest#test_deterministic_property_is_retained_when_using_previous_schemes_at_the_attribute_level [test/cases/encryption/encryption_schemes_test.rb:195]:;;;;;
Expected: #<#<Class:0x00000001055dbcd0> id: 1>;;;;;
  Actual: nil;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
I think either the first and second test should both pass, or they should both fail. I think the third test is passing correctly.;;;;;
;;;;;
I can make a PR but would like some guidance on which behaviour is expected. I think the root cause is that global previous schemes get merged [here](https://github.com/rails/rails/blob/68b20b6513fe56ca80e4966628c231b4d6113bea/activerecord/lib/active_record/encryption/encryptable_record.rb#L73-L74) but attribute-level previous schemes do not.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: `main`;;;;;
;;;;;
**Ruby version**: any;;;;;
",2024-03-22T01:26:00Z,2024-03-22T01:26:20Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 5511275119, 'node_id': 'LA_kwDNIULPAAAAAUh_Ym8', 'url': 'https://api.github.com/repos/rails/rails/labels/encryption', 'name': 'encryption', 'color': '8D3EA8', 'default': False, 'description': ''}]""";;;;;
"2200888087,Add :variants option to render-related documentation [ci skip],""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
This Pull Request has been created because; I couldn't find the `:variants` option in the API documentation. I noticed it was covered in the guidelines, but it didn't go over that render can intake a singular version of `:variant` and partial rendering should only intake a plural version of the option.;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request adds ;;;;;
- `:variants` documentation to `ActionView::PartialRenderer`;;;;;
- `:variants` and `:variant` to `ActionController::Rendering`;;;;;
 ;;;;;
### Additional information;;;;;
;;;;;
It's not clear to me what areas should also include the as an available option, any insights would be helpful! 🙂 ;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-21T18:30:04Z,2024-03-28T13:54:45Z,[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}, {'id': 3666649, 'node_id': 'MDU6TGFiZWwzNjY2NjQ5', 'url': 'https://api.github.com/repos/rails/rails/labels/actionview', 'name': 'actionview', 'color': 'd7e102', 'default': False, 'description': None}]""";;;;;
"2200784853,form_helper documentation using article instead of post [ci skip],""### Motivation / Background";;;;;
;;;;;
This Pull Request has been created because it will make the form_with documentation clearer.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Documentation previously uses post which is confusing as the methods/verb is also post.;;;;;
;;;;;
Before;;;;;
"`<form action=""""/posts"""" method=""""post"""">`";;;;;
;;;;;
After;;;;;
"`<form action=""""/articles"""" method=""""post"""">`";;;;;
;;;;;
### Method;;;;;
;;;;;
Worked through a new Rails app with scaffold of article and checking the output of the HTML. Other HTML changes make it more authentic:;;;;;
- /> => at the end of the input;;;;;
#NOM?;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [X] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-21T17:31:25Z,2024-04-02T09:59:35Z,[{'id': 3666649, 'node_id': 'MDU6TGFiZWwzNjY2NjQ5', 'url': 'https://api.github.com/repos/rails/rails/labels/actionview', 'name': 'actionview', 'color': 'd7e102', 'default': False, 'description': None}]""";;;;;
"2200750652,fix hex bit strings with leading zeroes in postgresql,""### Motivation / Background";;;;;
;;;;;
Currently when casting a hex string argument for a PostgreSQL `bit` or `bit_varying` column, leading zeroes are discarded. This is unexpected, and differs from the behavior of binary strings.;;;;;
;;;;;
### Detail;;;;;
;;;;;
"This Pull Request ensures leading zeroes are preserved, e.g. assigning a bit string column """"0x5F"""" results in the bit string """"01011111"""" instead of """"1011111"""" being sent to Postgres.";;;;;
;;;;;
### Additional information;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-21T17:14:40Z,2024-03-27T20:30:53Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2200234507,Add ability to modify read timeout in runtime,"" ### Motivation / Background";;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Many different factors can impact the database query execution time from an application's point of view, such as network latency, query execution plan, table data shape, and others. ;;;;;
;;;;;
"Currently, the application can provide a """"hardcoded"""" `read_timeout` value in the database.yml, which helps to cap the maximum time it will take to execute one query.";;;;;
;;;;;
However, it is not uncommon for a web request to have multiple query executions, and multiple slow queries can impact its response time. To mitigate the long response times, our application has a maximum allowed request time budget, which can be exhausted by multiple types of these issues. We would like to control the application wait time dynamically and gradually reduce that as the web request progresses. It will allow us to prevent a query from exhausting the request time budget.;;;;;
;;;;;
### Detail;;;;;
;;;;;
I added the ability to customize the database `read_timeout` property dynamically. It will receive the `read_timeout` as a value or a callable object, and a block. Any connection execution within that block will have the read_timeout replaced by the provided value. For example:;;;;;
;;;;;
```ruby;;;;;
ActiveRecord::Base.with_custom_conn_properties(read_timeout: 1) do;;;;;
  ...;;;;;
  Model.where(...).to_a # The read_timeout will be set to 1s;;;;;
  ...;;;;;
end;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [ ] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-21T13:41:05Z,2024-03-21T20:39:12Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2199929620,Add `ActiveRecord::Relation#readonly?`,""Indicates whether a relation was marked readonly.";;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
There's currently no documented API to check if a relation is readonly. Workarounds include loading the records and checking those for `readonly?` or using accessing the undocumented `readonly_value`.;;;;;
;;;;;
A Relation could be marked readonly and used as an indication to what should be rendered. This change makes that use case simpler.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Adds `ActiveRecord::Relation#readonly?` which behaves the same as `ActiveRecord::Base#readonly?` for the contained records.;;;;;
;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
"* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included."",2024-03-21T11:30:28Z,2024-03-24T09:48:55Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2198596882,Update oracle connection name to match adapter in tests,""";;;;;
<!--;;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
This Pull Request has been created to enable running the activerecord test suite with the oracle-enhanced adapter post activerecord 7.1.0;;;;;
;;;;;
### Detail;;;;;
;;;;;
https://github.com/rails/rails/pull/48015 (specifically 7572a13af6444abf51720051c6a93d72a7aead0e) adds a check to ensure the connection name matches the adapter name for the test run. For oracle databases, the testing files call the connection `oracle`, but the adapter we use is `oracle_enhanced`, resulting in an error when the tests are run:;;;;;
;;;;;
```;;;;;
bundle exec rake test:oracle TEST=test/cases/base_test.rb;;;;;
"/usr/local/bin/ruby -w -I""""lib:test"""" /usr/local/lib/ruby/gems/3.2.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb """"test/cases/base_test.rb""""";;;;;
Using oracle;;;;;
/app/activerecord/test/support/connection.rb:38:in `connect': The connection name did not match the adapter name. Connection name is 'oracle' and the adapter name is 'oracle_enhanced'. (ArgumentError);;;;;
;;;;;
"      raise ArgumentError, """"The connection name did not match the adapter name. Connection name is '#{connection_name}' and the adapter name is '#{arunit_adapter}'.""""";;;;;
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;;;;;
"	from /app/activerecord/test/cases/test_case.rb:248:in `<class:TestCase>'";;;;;
"	from /app/activerecord/test/cases/test_case.rb:20:in `<module:ActiveRecord>'";;;;;
"	from /app/activerecord/test/cases/test_case.rb:16:in `<top (required)>'";;;;;
"	from /app/activerecord/test/cases/helper.rb:8:in `require'";;;;;
"	from /app/activerecord/test/cases/helper.rb:8:in `<top (required)>'";;;;;
"	from /app/activerecord/test/cases/base_test.rb:3:in `require'";;;;;
"	from /app/activerecord/test/cases/base_test.rb:3:in `<top (required)>'";;;;;
"	from /usr/local/lib/ruby/gems/3.2.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb:21:in `require'";;;;;
"	from /usr/local/lib/ruby/gems/3.2.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb:21:in `block in <main>'";;;;;
"	from /usr/local/lib/ruby/gems/3.2.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb:6:in `select'";;;;;
"	from /usr/local/lib/ruby/gems/3.2.0/gems/rake-13.0.6/lib/rake/rake_test_loader.rb:6:in `<main>'";;;;;
rake aborted!;;;;;
```;;;;;
;;;;;
This change updates the connection name to be `oracle_enhanced` so it matches the adapter. With these changes I can run;;;;;
```;;;;;
bundle exec rake test:oracle_enhanced TEST=test/cases/base_test.rb;;;;;
```;;;;;
without getting the connection name error.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
I did not rename `activerecord/test/schema/oracle_specific_schema.rb` because the config.example.yml has emulate_oracle_adapter set to true so `oracle_specific_schema` is still the name the LoadSchemaHelper looks for.;;;;;
;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-20T21:25:33Z,2024-03-21T21:45:41Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2198129239,Prevent autosave association with has_one defined on child class,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Adjusts the logic in inverse_polymorphic_association_changed? to determine if a has_one association's polymorphic association should autosave the associated record for a type change.;;;;;
;;;;;
Previously this would see the type as changed every time if the has_one is defined on a child class, since the polymorphic relationship saves the parent class as the *_type value. The new check resolves the correct class name to avoid these extra saves.;;;;;
;;;;;
Fixes #51280;;;;;
;;;;;
### Detail;;;;;
;;;;;
Also confirmed that the new test fails without the code change:;;;;;
;;;;;
```;;;;;
Failure:;;;;;
TestAutosaveAssociationOnAHasOneAssociation#test_should_not_saved_for_unchanged_sti_type_on_polymorphic_association [test/cases/autosave_association_test.rb:1652]:;;;;;
Expected: 2;;;;;
  Actual: 3;;;;;
;;;;;
;;;;;
bin/rails test test/cases/autosave_association_test.rb:1620;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-20T17:31:55Z,2024-03-20T17:33:03Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2196727075,[ci skip] Document `ActiveSupport::Subscriber` in guides,""### Motivation / Background";;;;;
;;;;;
`ActiveSupport::Subscriber` provides a nice way to handle `ActiveSupport::Notifications::Event`. However, there is a lack of guide.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Document how to subscribe event of given namespace using `ActiveSupport::Subscriber`.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [X] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [X] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-20T06:04:17Z,2024-03-20T06:05:10Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2196576028,""Replace Order with Book in """"Creating Namespaced Models"""" section of docs for consistency"",""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
This Pull Request has been created because the documentation is improved by consistently using the same model names throughout.;;;;;
https://github.com/rails/rails/pull/51226#discussion_r1527578109;;;;;
;;;;;
### Detail;;;;;
;;;;;
"This Pull Request changes the Active Record Basics Guide """"Creating Namespaced Models"""" section to use Book instead of Order in the examples, consistent with the rest of the document.";;;;;
;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-20T03:00:04Z,2024-03-21T18:34:36Z,[{'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2196082119,Add ability to prevent access to a database,""### Motivation / Background";;;;;
;;;;;
From discussion: https://discuss.rubyonrails.org/t/proposal-prevent-activerecord-access/85322;;;;;
;;;;;
> I have some methods that I know are being called in loops and these methods will become N+1 DB query situations if a database query is generated in any way. What I’m hoping for is some sort of runtime policy that says “no ActiveRecord access is allowed in here, you must load everything you need first”;;;;;
> ;;;;;
> Here’s another way to put it. If I have some business logic that combines data loading with some kind of pure calculation, it would be nice to have the power, when it is useful, to strongly separate these concerns and be sure the separation remains.;;;;;
> ;;;;;
> This power could be useful for any situation where a hot code path must remain free of queries. Perhaps it could be used to implement a policy to prevent database access during the render phase of an HTTP request.;;;;;
;;;;;
N+1 queries can be a real performance concern. It isn't always immediately obvious what the impacts could be of adding a new query. I wish engineers would be constantly watching the query log as they work. But things can get out of hand quickly, and even if you are watching the wall of queries being logged, N+1s can sometimes disappear into the noise.;;;;;
;;;;;
Also, there are times when I want a pure in-memory algorithm. An API like this would allow me to both express and enforce the intention to not be hitting the database in a branch of code.;;;;;
;;;;;
Just today, I was working with some code that broke a test that asserts for a given controller action, exactly 118 queries are dispatched. This is a terrible test to have, but we have it because we have had real problems with query explosions emerging unexpectedly. I believe strict loading could help, but it would not have prevented all of the problems that led to write and maintain this test.;;;;;
;;;;;
This is indeed a heavy hammer to use. But I don't see an alternative that can achieve the same level of assurance, and the implementation was pretty easy thanks to the prior art of `while_preventing_writes`.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request adds `while_preventing_access` to the public API of ActiveRecord::Base much like was done for `while_preventing_writes` in https://github.com/rails/rails/pull/34505;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, references to other repositories, or alternative solutions. -->;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-19T21:46:17Z,2024-03-23T06:25:57Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2194293557,`PessimisticLockingTest#test_no_locks_no_wait` gets `ERROR:  cached plan must not change result type`,""Managed to reproduce CI error.";;;;;
https://buildkite.com/rails/rails/builds/105748#018e558b-b895-43cc-aa80-71180e80d01b/1235-1330;;;;;
;;;;;
### Steps to reproduce;;;;;
```ruby;;;;;
git clone https://github.com/rails/rails;;;;;
cd rails/activerecord;;;;;
bundle install;;;;;
bundle exec rake db:postgresql:rebuild;;;;;
"ARCONN=postgresql bin/test test/cases/associations/nested_through_associations_test.rb test/cases/connection_management_test.rb test/cases/migration_test.rb test/cases/locking_test.rb -n """"/^(?:NestedThroughAssociationsTest#(?:test_has_many_through_with_foreign_key_option_on_through_reflection)|ActiveRecord::ConnectionAdapters::ConnectionManagementTest#(?:test_cancel_asynchronous_queries_if_an_exception_is_raised)|MigrationTest#(?:test_instance_based_migration_up)|PessimisticLockingTest#(?:test_no_locks_no_wait))$/"""" --seed 38135";;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
It should pass.;;;;;
;;;;;
### Actual behavior;;;;;
`PessimisticLockingTest#test_no_locks_no_wait` gets `ERROR:  cached plan must not change result type`.;;;;;
;;;;;
```ruby;;;;;
"$ ARCONN=postgresql bin/test test/cases/associations/nested_through_associations_test.rb test/cases/connection_management_test.rb test/cases/migration_test.rb test/cases/locking_test.rb -n """"/^(?:NestedThroughAssociationsTest#(?:test_has_many_through_with_foreign_key_option_on_through_reflection)|ActiveRecord::ConnectionAdapters::ConnectionManagementTest#(?:test_cancel_asynchronous_queries_if_an_exception_is_raised)|MigrationTest#(?:test_instance_based_migration_up)|PessimisticLockingTest#(?:test_no_locks_no_wait))$/"""" --seed 38135";;;;;
Using postgresql;;;;;
"Run options: -n """"/^(?:NestedThroughAssociationsTest#(?:test_has_many_through_with_foreign_key_option_on_through_reflection)|ActiveRecord::ConnectionAdapters::ConnectionManagementTest#(?:test_cancel_asynchronous_queries_if_an_exception_is_raised)|MigrationTest#(?:test_instance_based_migration_up)|PessimisticLockingTest#(?:test_no_locks_no_wait))$/"""" --seed 38135";;;;;
;;;;;
# Running:;;;;;
;;;;;
...#<Thread:0x000078a1a0d27b38 /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:809 run> terminated with exception (report_on_exception is true):;;;;;
/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:915:in `rescue in exec_cache': ERROR:  cached plan must not change result type (ActiveRecord::PreparedStatementCacheExpired);;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:893:in `exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:865:in `execute_and_clear'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb:66:in `internal_exec_query'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:630:in `select'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:222:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:62:in `_query_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:51:in `find_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/statement_cache.rb:150:in `execute'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:434:in `cached_find_by'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:255:in `find'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:788:in `block in test_no_locks_no_wait'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:223:in `block in transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_handling.rb:270:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:222:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:812:in `block in duel'";;;;;
/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:903:in `exec_prepared': PG::FeatureNotSupported: ERROR:  cached plan must not change result type (ActiveRecord::StatementInvalid);;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:903:in `block (2 levels) in exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:1112:in `log'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:902:in `block in exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:997:in `block in with_raw_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:969:in `with_raw_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:898:in `exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:865:in `execute_and_clear'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb:66:in `internal_exec_query'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:630:in `select'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:222:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:62:in `_query_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:51:in `find_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/statement_cache.rb:150:in `execute'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:434:in `cached_find_by'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:255:in `find'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:788:in `block in test_no_locks_no_wait'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:223:in `block in transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_handling.rb:270:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:222:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:812:in `block in duel'";;;;;
/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:903:in `exec_prepared': ERROR:  cached plan must not change result type (PG::FeatureNotSupported);;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:903:in `block (2 levels) in exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/notifications/instrumenter.rb:58:in `instrument'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:1112:in `log'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:902:in `block in exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:997:in `block in with_raw_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract_adapter.rb:969:in `with_raw_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:898:in `exec_cache'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb:865:in `execute_and_clear'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/postgresql/database_statements.rb:66:in `internal_exec_query'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:630:in `select'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/query_cache.rb:222:in `select_all'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:62:in `_query_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/querying.rb:51:in `find_by_sql'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/statement_cache.rb:150:in `execute'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:434:in `cached_find_by'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/core.rb:255:in `find'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:788:in `block in test_no_locks_no_wait'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:223:in `block in transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_handling.rb:270:in `with_connection'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:222:in `transaction'";;;;;
"	from /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:812:in `block in duel'";;;;;
Found 1 leaked connections;;;;;
owner: #<Thread:0x000078a1a0d27ca0 /home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:799 sleep>;;;;;
backtrace:;;;;;
"[""""/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:53:in `sleep'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:53:in `wait'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:53:in `ns_wait'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/abstract_lockable_object.rb:47:in `ns_wait_until'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/atomic/event.rb:87:in `block in wait'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:48:in `block in synchronize'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:48:in `synchronize'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/synchronization/mutex_lockable_object.rb:48:in `synchronize'"""", """"/home/yahonda/.rbenv/versions/3.3.0/lib/ruby/gems/3.3.0/gems/concurrent-ruby-1.2.2/lib/concurrent-ruby/concurrent/atomic/event.rb:84:in `wait'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:804:in `block (2 levels) in duel'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction'"""", """"/home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:223:in `block in transaction'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/connection_handling.rb:270:in `with_connection'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/lib/active_record/transactions.rb:222:in `transaction'"""", """"/home/yahonda/src/github.com/rails/rails/activerecord/test/cases/locking_test.rb:801:in `block in duel'""""]";;;;;
;;;;;
E;;;;;
;;;;;
Error:;;;;;
PessimisticLockingTest#test_no_locks_no_wait:;;;;;
ActiveRecord::PreparedStatementCacheExpired: ERROR:  cached plan must not change result type;;;;;
;;;;;
    lib/active_record/connection_adapters/postgresql_adapter.rb:915:in `rescue in exec_cache';;;;;
    lib/active_record/connection_adapters/postgresql_adapter.rb:893:in `exec_cache';;;;;
    lib/active_record/connection_adapters/postgresql_adapter.rb:865:in `execute_and_clear';;;;;
    lib/active_record/connection_adapters/postgresql/database_statements.rb:66:in `internal_exec_query';;;;;
    lib/active_record/connection_adapters/abstract/database_statements.rb:630:in `select';;;;;
    lib/active_record/connection_adapters/abstract/database_statements.rb:71:in `select_all';;;;;
    lib/active_record/connection_adapters/abstract/query_cache.rb:222:in `select_all';;;;;
    lib/active_record/querying.rb:62:in `_query_by_sql';;;;;
    lib/active_record/querying.rb:51:in `find_by_sql';;;;;
    lib/active_record/statement_cache.rb:150:in `execute';;;;;
    lib/active_record/core.rb:434:in `cached_find_by';;;;;
    lib/active_record/core.rb:255:in `find';;;;;
    test/cases/locking_test.rb:788:in `block in test_no_locks_no_wait';;;;;
    lib/active_record/connection_adapters/abstract/transaction.rb:536:in `block in within_new_transaction';;;;;
    /home/yahonda/src/github.com/rails/rails/activesupport/lib/active_support/concurrency/null_lock.rb:9:in `synchronize';;;;;
    lib/active_record/connection_adapters/abstract/transaction.rb:533:in `within_new_transaction';;;;;
    lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction';;;;;
    lib/active_record/transactions.rb:223:in `block in transaction';;;;;
    lib/active_record/connection_adapters/abstract/connection_pool.rb:387:in `with_connection';;;;;
    lib/active_record/connection_handling.rb:270:in `with_connection';;;;;
    lib/active_record/transactions.rb:222:in `transaction';;;;;
    test/cases/locking_test.rb:812:in `block in duel';;;;;
;;;;;
Error:;;;;;
PessimisticLockingTest#test_no_locks_no_wait:;;;;;
RuntimeError: Found 1 leaked connection after PessimisticLockingTest#test_no_locks_no_wait;;;;;
    test/cases/test_case.rb:82:in `check_connection_leaks';;;;;
    test/cases/test_case.rb:38:in `after_teardown';;;;;
;;;;;
;;;;;
bin/test test/cases/locking_test.rb:787;;;;;
;;;;;
;;;;;
;;;;;
Finished in 1.057243s, 3.7834 runs/s, 10.4044 assertions/s.;;;;;
4 runs, 11 assertions, 0 failures, 1 errors, 0 skips;;;;;
$;;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: main branch;;;;;
;;;;;
**Ruby version**: ruby 3.3.0 (2023-12-25 revision 5124f9ac75) [x86_64-linux];;;;;
",2024-03-19T08:06:22Z,2024-03-19T08:06:39Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 70310659, 'node_id': 'MDU6TGFiZWw3MDMxMDY1OQ==', 'url': 'https://api.github.com/repos/rails/rails/labels/PostgreSQL', 'name': 'PostgreSQL', 'color': 'fbca04', 'default': False, 'description': None}, {'id': 776781281, 'node_id': 'MDU6TGFiZWw3NzY3ODEyODE=', 'url': 'https://api.github.com/repos/rails/rails/labels/ci%20issues', 'name': 'ci issues', 'color': 'aaafff', 'default': False, 'description': None}]""";;;;;
"2192504341,""add `file_exist?` method for ActiveStorage::Blob, ActiveStorage::Variant, ActiveStorage::VariantWithRecord"",""";;;;;
;;;;;
It's help to check if all it's ok on the service storage;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
This Pull Request has been created because we (@captive-studio) handle a large number of files using ActiveStorage in our application where these files are central to the business.;;;;;
;;;;;
For some time now, we have noticed that certain variants are not being properly saved in the storage (specifically Google Cloud Storage). We want to rectify this situation by retrieving the variants for which the file does not exist in the storage.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes add new `file_exist?` method for ActiveStorage::Blob, ActiveStorage::Variant, ActiveStorage::VariantWithRecord;;;;;
;;;;;
This method will help to check if a file exist on the storage service;;;;;
;;;;;
### Additional information;;;;;
;;;;;
/;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-18T15:17:49Z,2024-03-18T15:17:53Z,[{'id': 664533972, 'node_id': 'MDU6TGFiZWw2NjQ1MzM5NzI=', 'url': 'https://api.github.com/repos/rails/rails/labels/activestorage', 'name': 'activestorage', 'color': 'bfd4f2', 'default': False, 'description': None}]""";;;;;
"2192417334,Enable query log tags by default on development env,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), the motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
This can be used to trace troublesome SQL statements back to the application code that generated these statements. I feel like this is a good default value that helps with debugging and code discovery.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-18T14:43:38Z,2024-03-25T02:05:54Z,[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}, {'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2190873649,.eager_load when selecting another column sets the ID incorrectly to a record being eager loaded.,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"  # gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :posts, force: true do |t|;;;;;
    t.integer :first_comment_id;;;;;
    t.integer :last_comment_id;;;;;
  end;;;;;
;;;;;
  create_table :comments, force: true do |t|;;;;;
    t.integer :post_id;;;;;
  end;;;;;
end;;;;;
;;;;;
class Post < ActiveRecord::Base;;;;;
  has_many :comments;;;;;
;;;;;
"  belongs_to :first_comment, class_name: """"Comment""""";;;;;
"  belongs_to :last_comment, class_name: """"Comment""""";;;;;
;;;;;
"  scope :select_another_column, -> { select(""""*"""").select(""""TIME('now') as now"""") }";;;;;
end;;;;;
;;;;;
class Comment < ActiveRecord::Base;;;;;
  belongs_to :post;;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_association_stuff;;;;;
    post = Post.create!;;;;;
    post.first_comment = Comment.create!;;;;;
    post.last_comment = Comment.create!;;;;;
;;;;;
    post.save!;;;;;
;;;;;
    post = Post.find(post.id);;;;;
    post_with_eager_loads = Post.eager_load(:first_comment, :last_comment).select_another_column.find(post.id);;;;;
;;;;;
    assert_equal post.id, post_with_eager_loads.id;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
Expect that IDs are consistent when using .eager_load;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
ID gets set to one of the other tables joined in;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: main;;;;;
;;;;;
**Ruby version**: 3.3.0;;;;;
",2024-03-17T21:28:07Z,2024-03-19T19:38:22Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2190758266,Allow one to set `strict_loading_mode` globally,""### Motivation / Background";;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
I was reading through [this summary of Rails' strict loading](https://jordanhollinger.com/2023/11/11/rails-strict-loading/) and came across this paragraph:;;;;;
;;;;;
> If you’re very brave, you can opt your entire application into strict loading. (Oddly, there doesn’t seem to be an equivalent of :n_plus_one_only here. I can’t imagine using this.);;;;;
;;;;;
In my app, we're setting `strict_loading!(mode: :n_plus_one_only)` on individual records; this paragraph made me realize it didn't have to be this way.;;;;
;;;;;
This Pull Request has been created because currently, `strict_loading_mode` is always set to `:all`. It may be preferable for users to have `:n_plus_one_only` on an individual model, or even on the entire app.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request adds a new class_attribute `:strict_loading_mode`, defaulted to `:all`.  If it's set to `:n_plus_one_only`, that mode is used by default when doing strict loading checks.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
n/a;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Unrelated changes should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-17T16:45:34Z,2024-03-28T22:17:42Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 150377, 'node_id': 'MDU6TGFiZWwxNTAzNzc=', 'url': 'https://api.github.com/repos/rails/rails/labels/docs', 'name': 'docs', 'color': '02d7e1', 'default': False, 'description': None}]""";;;;;
"2186612406,Autoloaded classes raise NameError when accessed in parent's on_load hook during load,""This is not a new issue with Rails autoloading, but a challenge I feel when working with Engines (either developing engines as a gem maintainer or consuming engines as an application developer)";;;;;
;;;;;
For example, an Engine may have a setup like this:;;;;;
;;;;;
```ruby;;;;;
module GoodJob;;;;;
  class ApplicationJob < ActiveJob::Base;;;;;
    # some configuration;;;;;
    ActiveSupport.run_load_hooks(:good_job_application_job, self);;;;;
  end;;;;;
;;;;;
  class UtilityOneJob < ApplicationJob; end;;;;
  class UtilityTwoJob < ApplicationJob; end;;;;
  class UtilityThreeJob < ApplicationJob; end;;;;
  # ... and many more;;;;;
end;;;;;
```;;;;;
;;;;;
I give an example of GoodJob, but this is a very analogous situation to other Engines with autoloaded classes/subclasses (models, controllers, etc.); for example Devise, which has a `DeviseController` (with load_hook) that is then subclassed with [a desire to extend](https://github.com/heartcombo/devise/wiki/How-To:-Create-custom-layouts#application--devise-config). ;;;;
;;;;;
I want to be able to allow application developers to extend the subclasses, and I want to defer autoloaded constants as much as possible (ideally not touching Action Controller or Active Model at all until during initialization), and this seems like it should be reasonable:;;;;;
;;;;;
```ruby;;;;;
# config/initializers/good_job.rb;;;;;
;;;;;
ActiveSupport.on_load(:good_job_application_job) do;;;;;
  # Customize a subclass;;;;;
"  GoodJob::UtilityJobOne.queue_name = """"something_custom""""";;;;;
end;;;;;
```;;;;;
;;;;;
This _usually_ works ok, except in the case when the `UtilityJobOne` _being loaded causes ApplicationJob to be loaded for the very first time_, in which case it raises a `uninitialized constant UtilityJobOne (NameError)`. This is because of the autoloading chain:;;;;;
;;;;;
`GoodJob::UtilityJobOne` first must load its parent class `GoodJob::ApplicationJob` for the first time, which triggers the load_hook which itself references `UtilityOneJob` which has not yet completed loading and thus a `NameError` 💥 ;;;;;
;;;;;
There is what I consider a workaround for this which is to use `inherited` (which is triggered _after the subclass constant is loaded), but I find it somewhat complex and wonder if there is a better way, or whether this is something that should be turned into a hook pattern:;;;;;
;;;;;
```ruby;;;;;
# config/initializers/good_job.rb;;;;;
;;;;;
module ConfigureUtilityJob;;;;;
  def inherited(subclass);;;;;
    super;;;;;
"    if subclass.to_s == """"UtilityJobOne""""";;;;;
"      subclass.queue_name = """"something_custom""""";;;;;
    end;;;;;
  end;;;;;
end;;;;;
;;;;;
ActiveSupport.on_load(:good_job_application_job) do;;;;;
  GoodJob::ApplicationJob.extend ConfigureUtilityJob;;;;;
end;;;;;
```;;;;;
;;;;;
"I realize that another solution as a engine maintainer is to add load hooks to every subclass, but that seems onerous, and as an application developer I'd have to convince other engine maintainers to do so (which is totally ok, so long as there isn't a better way I'm missing or a reasonable central interface for modifying autoloaded subclasses)."",2024-03-14T15:06:07Z,2024-03-14T15:07:44Z,[]";;;;;
"2183136951,`ActiveRecord::Migration::check_all_pending!` resets connection pool when in use in other threads,""This might not be a bug per se, but is unexpected behaviour that was exposed in our specific use case.";;;;;
;;;;;
### Steps to reproduce;;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
In production, we have a bunch of custom internal health-checks exposed via a controller endpoint that are pinged every 20s or so, one of which is a check for pending migrations. Up until recently we were using `ActiveRecord::Migration::check_pending!` which took an optional connection argument and would use it to access the migration context (presumably releasing the connection back into the pool immediately after) to check for pending migrations.;;;;;
;;;;;
This method [has been deprecated in favour of `check_all_pending!`](https://github.com/rails/rails/commit/03379d1f599653d100dff9fbf3ce4434a930b915) and [was recently removed on `main`](https://github.com/rails/rails/commit/02f66fe3e25cef2b0dec8bca26e777fe788af35c). To comply with this (since we run against Rails edge) we ended up replacing `check_pending!` with `check_all_pending!` (which doesn't take any arguments) in the respective health-check. After deploying this change we started seeing this error intermittently:;;;;;
;;;;;
```;;;;;
ActiveRecord::ConnectionNotEstablished:  No connection pool for 'ActiveRecord::Base' found.;;;;;
```;;;;;
;;;;;
After some debugging we found that it was due to `check_all_pending!` [using a temporary pool under the hood](https://github.com/rails/rails/blob/0dc84e2e7d942dcaac3bd75414ae55bfad9bb18a/activerecord/lib/active_record/tasks/database_tasks.rb#L542-L549), meaning it would establish a new connection for its checks, then establish another one once done, resetting the connection pool object each time. This meant that other threads (we're currently running `puma` with `3` threads) that attempted to retrieve the current (cached) pool during this time (to then retrieve a connection) would fail to find it and raise here:;;;;;
https://github.com/rails/rails/blob/0dc84e2e7d942dcaac3bd75414ae55bfad9bb18a/activerecord/lib/active_record/connection_adapters/abstract/connection_handler.rb#L224;;;;;
;;;;;
We've considered that maybe this specific health-check setup is a bit unconventional, but given that I can find [some public repos utilising this method the same way](https://github.com/search?q=ActiveRecord%3A%3AMigration.check_all_pending%21+language%3ARuby&type=code&l=Ruby), I thought I'd open this up for discussion to see if there's any chance of changing / extending the implementation or even just warning against its use outside of something like a rake task so others don't run into a similar issue.;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# Ensure `ActiveRecord::Base.configurations.configs_for` returns a config for which a temporary pool is yielded.;;;;;
"ActiveRecord::Base.configurations = { development: { adapter: """"sqlite3"""", database: """":memory:"""" } }";;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_connection_pool_does_not_reset;;;;;
    pool_before = ActiveRecord::Base.connection_pool;;;;;
;;;;;
    ActiveRecord::Migration.check_all_pending!;;;;;
;;;;;
    assert_equal pool_before.object_id, ActiveRecord::Base.connection_pool.object_id;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
<!-- Tell us what should happen -->;;;;;
;;;;;
Connection pool is not reset when checking for pending migrations with `check_all_pending!`.;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
;;;;;
Connection pool is reset when checking for pending migrations with `check_all_pending!`.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: Edge;;;;;
;;;;;
"**Ruby version**: 3.2.2"",2024-03-13T05:17:22Z,2024-03-14T06:03:23Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2182989812,Fix a crash when an  Executor wrapped fork exit.,""Fix #51298";;;;;
;;;;;
forking inside an Execution Wrapper crashes when running the completion callbacks.;;;;;
;;;;;
Rails 7.0 was not Execution wrapping the `runner` command. ;;;;;
Rails 7.2 changed the definition of `active_connection?`, the new definition doesn't contain the bug. ;;;;;
;;;;;
Therefore forking inside a script intended to be run with the `runner` command on 7.1 crashes. (see #51298);;;;;
;;;;;
This PR is targeting `7-1-stable`;;;;;
;;;;;
Edit: The regression test (with the fork) blew up the tests. I removed it, I'll revisit. ;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-13T02:22:58Z,2024-03-23T21:16:44Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2182679064,[ci skip] Undocumented - validations enabled by autosave,""### Motivation / Background";;;;;
;;;;;
Fixes #50807;;;;;
;;;;;
As described in Issue #50807,  validations are enabled by default when the autosave option is set to true. Currently, that behavior is not documented for the `has_one` or `belongs_to` associations.   ;;;;;
;;;;;
### Detail;;;;;
;;;;;
To resolve this issue, the  API documentation has been updated to document the validation behavior when the `autosave: true` option is set in `Activerecord::Associations` for the `has_one` or `belongs_to` associations.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [ ] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [ ] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-12T21:09:19Z,2024-03-23T17:25:32Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2182219571,Do not use the alpha version if the major version is released,""This PR changes the active storage dependency version for action text. ";;;;;
",2024-03-12T17:04:15Z,2024-03-12T17:04:19Z,[{'id': 1180817762, 'node_id': 'MDU6TGFiZWwxMTgwODE3NzYy', 'url': 'https://api.github.com/repos/rails/rails/labels/actiontext', 'name': 'actiontext', 'color': '3bc667', 'default': False, 'description': ''}]""";;;;;
"2181685435,Model.insert_all can accept an array of records with separate column names,""### Motivation / Background";;;;;
;;;;;
Expanding the `Model.insert_all` functionality to receive an array containing records and column names separately. This improvement eliminates the need for records to be in the hash format, providing a more streamlined approach, especially useful for handling large datasets when both the order of attributes and their alignment with the table structure are known in advance.;;;;;
;;;;;
```ruby;;;;;
column_names = [:name, :author_id];;;;;
book_batches.each do |book_batch|;;;;;
"	Book.insert_all(book_batch, column_names: column_names)";;;;;
end;;;;;
```;;;;;
;;;;;
This update enables users to provide an array of arrays for the records, while also specifying the column names separately. This enhancement enhances code flexibility and readability, simplifying data insertion without requiring pre-formatting into hashes.;;;;;
;;;;;
### Detail;;;;;
;;;;;
#NOM?;;;;;
#NOM?;;;;;
;;;;;
```ruby;;;;;
Book.insert_all([;;;;;
"  [""""Rework"""", 1],";;;;;
"  [""""Patterns of Enterprise Application Architecture"""", 1]";;;;;
], column_names: [:name, :author_id]);;;;;
```;;;;;
;;;;;
"To showcase the API proposal, I opted for the simplest approach, which involved converting the array of records and column names into a Hash, as it aligns with the existing code."",2024-03-12T13:54:28Z,2024-03-12T13:54:34Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2181555060,Add and document ActionText without_layout reader and writer attributes,""If a site follows an `ActionText` editing form with a preview form prior to record creation, the natural way to set the editor content in the preview form is something like:";;;;;
;;;;;
`<%= hidden_field :message, :content %>`;;;;;
;;;;;
"This however does a `to_s`, which includes the content with the """"trix-content"""" div layout wrapping. This wrapping gets saved, and the final rendering with layout has a double wrapping.";;;;;
;;;;;
A solution is to instead use;;;;;
;;;;;
`<%= hidden_field_tag 'message[content]', @message.content.to_trix_html %>`;;;;;
;;;;;
but a cleaner solution would be to provide a non-wrapped accessor like;;;;;
;;;;;
`<%= hidden_field :message, :content_without_layout %>`;;;;;
;;;;;
"This PR does this. It also fixes the incorrect documentation of `has_rich_text` that [shows `to_s` as producing HTML without layout](https://github.com/rails/rails/blob/main/actiontext/lib/action_text/attribute.rb#L20), documents the `without_layout` variant, and adds a sentence suggesting when each should be used."",2024-03-12T12:55:18Z,2024-03-12T12:55:24Z,""[{'id': 1180817762, 'node_id': 'MDU6TGFiZWwxMTgwODE3NzYy', 'url': 'https://api.github.com/repos/rails/rails/labels/actiontext', 'name': 'actiontext', 'color': '3bc667', 'default': False, 'description': ''}]""";;;;;
"2180953140,Fix exception raised from template should not show compiled code,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Fixes #51090 ;;;;;
;;;;;
This Pull Request has been created to fix exceptions raised from template shows the compiled code.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes `activesupport/lib/active_support/core_ext/erb/util.rb`;;;;;
;;;;;
### Additional information;;;;;
1. In this tokenize method we are not handling the text present after `%>` ;;;;;
2. Updated that method to handle text present at end.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-12T07:52:25Z,2024-03-21T17:49:16Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}]""";;;;;
"2180514773,Add composite key support to `Model.exists?`,""Fix #51295";;;;;
;;;;;
`.exists?` does not support composite primary key because it would [clash with the current expectation when passing an array.](https://github.com/rails/rails/blob/main/activerecord/lib/active_record/relation/finder_methods.rb#L351);;;;;
;;;;;
This PR would make it possible to pass a composite primary key by wrapping it in an array:;;;;;
;;;;;
```ruby;;;;;
CpkModel.exists?([[1,1]]) # as in `CpkModel.exists?([composite_primary_key])`;;;;;
```;;;;;
;;;;;
Incidentally, it would also allow searching with multiple keys without having to use the hash form:;;;;;
;;;;;
```ruby;;;;;
CpkModel.exists?([[1,1], [1,2], [3,1]])  ;;;;;
"RegularModel.exists?([[1,2,3]]) # Even works for non regular models! Generates: `SELECT 1 AS one FROM """"regular_models"""" WHERE """"users"""".""""id"""" IN (1, 2, 3)`";;;;;
``` ;;;;;
;;;;;
;;;;;
## Considerations;;;;;
;;;;;
This is a bit of hack and initially thought of answering #51295 by suggesting using the hash form instead, but after looking at what the hash form would look like for a primary key:;;;;;
;;;;;
```ruby;;;;;
CpkModel.exists?(CpkModel.primary_key => [[1,1]]) # You need to wrap the primary key in an array!;;;;;
```;;;;;
This is quite verbose. So perhaps there is value in this.;;;;;
I did not edit the documentation and changelog yet. Only the code, plus a couple tests. If this diff is deemed valuable I'll add the required edits.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-12T00:57:29Z,2024-03-12T01:06:49Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2179543988,Forked child processes created through rails runner throw error from ActiveRecord when exiting,""In Rails 7.1.3.2, child processes which were created using a fork call throw the following error when they are exiting:";;;;;
;;;;;
```;;;;;
.../activerecord-7.1.3.2/lib/active_record/connection_adapters/abstract/connection_pool.rb:197:in `active_connection?': undefined method `[]' for nil (NoMethodError);;;;;
;;;;;
        @thread_cached_conns[connection_cache_key(current_thread)];;;;;
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;;;;;
```;;;;;
;;;;;
These child processes are created using a fork call which does not take a block. Notably, if a block is passed to the fork call then the error does not occur.;;;;;
;;;;;
### Steps to reproduce;;;;;
```;;;;;
> ruby -v;;;;;
ruby 3.3.0 (2023-12-25 revision 5124f9ac75) [x86_64-linux];;;;;
;;;;;
> rails new fork_child_process -G -M -C -A -J -T ;;;;;
rails (7.1.3.2);;;;;
;;;;;
"> echo """"fork"""" > script.rb"; bundle exec rails runner script.rb;;;;
/home/gpallotta/.gem/gems/activerecord-7.1.3.2/lib/active_record/connection_adapters/abstract/connection_pool.rb:197:in `active_connection?': undefined method `[]' for nil (NoMethodError);;;;;
;;;;;
        @thread_cached_conns[connection_cache_key(current_thread)];;;;;
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^;;;;;
        from /home/gpallotta/.gem/gems/activerecord-7.1.3.2/lib/active_record/connection_adapters/abstract/query_cache.rb:45:in `disable_query_cache!';;;;;
"	from /home/gpallotta/.gem/gems/activerecord-7.1.3.2/lib/active_record/query_cache.rb:33:in `block in complete'";;;;;
"	from /home/gpallotta/.gem/gems/activerecord-7.1.3.2/lib/active_record/query_cache.rb:33:in `each'";;;;;
"	from /home/gpallotta/.gem/gems/activerecord-7.1.3.2/lib/active_record/query_cache.rb:33:in `complete'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/execution_wrapper.rb:37:in `before'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:426:in `block in make_lambda'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:202:in `block (2 levels) in halting'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:707:in `block (2 levels) in default_terminator'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:706:in `catch'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:706:in `block in default_terminator'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:203:in `block in halting'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:598:in `block in invoke_before'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:598:in `each'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:598:in `invoke_before'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/callbacks.rb:109:in `run_callbacks'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/execution_wrapper.rb:143:in `complete'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/execution_wrapper.rb:137:in `complete!'";;;;;
"	from /home/gpallotta/.gem/gems/activesupport-7.1.3.2/lib/active_support/execution_wrapper.rb:97:in `wrap'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/commands/runner/runner_command.rb:40:in `perform'";;;;;
"	from /home/gpallotta/.gem/gems/thor-1.3.1/lib/thor/command.rb:28:in `run'";;;;;
"	from /home/gpallotta/.gem/gems/thor-1.3.1/lib/thor/invocation.rb:127:in `invoke_command'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/command/base.rb:178:in `invoke_command'";;;;;
"	from /home/gpallotta/.gem/gems/thor-1.3.1/lib/thor.rb:527:in `dispatch'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/command/base.rb:73:in `perform'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/command.rb:71:in `block in invoke'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/command.rb:149:in `with_argv'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/command.rb:69:in `invoke'";;;;;
"	from /home/gpallotta/.gem/gems/railties-7.1.3.2/lib/rails/commands.rb:18:in `<main>'";;;;;
"	from /opt/ruby-3.3.0-1/lib/ruby/3.3.0/bundled_gems.rb:74:in `require'";;;;;
"	from /opt/ruby-3.3.0-1/lib/ruby/3.3.0/bundled_gems.rb:74:in `block (2 levels) in replace_require'";;;;;
"	from /home/gpallotta/.gem/gems/bootsnap-1.18.3/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:30:in `require'";;;;;
"	from bin/rails:4:in `<main>'";;;;;
;;;;;
>;;;;;
```;;;;;
;;;;;
If instead a block is given to the fork call, then no error occurs;;;;;
;;;;;
```;;;;;
"> echo """"fork {}"""" > script.rb"; bundle exec rails runner script.rb;;;;
;;;;;
>;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
The forked child process exits cleanly.;;;;;
;;;;;
### Actual behavior;;;;;
The forked child process exits with an error.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
"**Ruby version**: 3.3.0"",2024-03-11T16:17:12Z,2024-03-13T02:26:53Z,[]";;;;;
"2179242804,Missing Active Record encryption credential when using ActiveRecord::Encryption.without_encryption ,""### Steps to reproduce";;;;;
;;;;;
```ruby;;;;;
class SchluesselBrett < ApplicationRecord;;;;;
   encrypts :key ;;;;;
   def destroy;;;;;
     ActiveRecord::Encryption.without_encryption { super };;;;;
   end;;;;;
end;;;;;
;;;;;
Schluesselbrett.last.destroy;;;;;
```;;;;;
### Expected behavior;;;;;
Destroy should work as there are no hooks that depend on the encrypted column.;;;;;
;;;;;
We are using a custom key_provider that needs the user input of a Smartcard PIN every time an encrypted column is encrypted or decrypted.;;;;;
Destruction of a model should work without decrypting it first so that the PIN is not necessary (we accept the fact that we have to ensure ourselves that no hooks will require the encrypted field to be decrypted).;;;;;
In fact, the NullEncryptor that is used in without_encryption:;;;;;
;;;;;
```ruby;;;;;
        def without_encryption(&block);;;;;
          with_encryption_context encryptor: ActiveRecord::Encryption::NullEncryptor.new, &block;;;;;
        end;;;;;
```;;;;;
;;;;;
does not make use of the default key provider (whose initialization is the cause of the backtrace below) anyway.;;;;;
;;;;;
### Actual behavior;;;;;
```;;;;;
activerecord (7.1.3.2) lib/active_record/encryption/config.rb:43:in `block (2 levels) in <class:Config>';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/context.rb:38:in `build_default_key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/context.rb:25:in `key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/configurable.rb:17:in `key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/scheme.rb:92:in `default_key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/scheme.rb:53:in `key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:15:in `key_provider';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:147:in `decryption_options';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:90:in `block in decrypt';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/scheme.rb:69:in `with_context';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:15:in `with_context';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:85:in `decrypt';;;;;
activerecord (7.1.3.2) lib/active_record/encryption/encrypted_attribute_type.rb:36:in `deserialize';;;;;
activemodel (7.1.3.2) lib/active_model/attribute.rb:175:in `type_cast';;;;;
activemodel (7.1.3.2) lib/active_model/attribute.rb:43:in `value';;;;;
activemodel (7.1.3.2) lib/active_model/attribute_set/builder.rb:43:in `fetch_value';;;;;
activerecord (7.1.3.2) lib/active_record/transactions.rb:421:in `block in restore_transaction_record_state';;;;;
activemodel (7.1.3.2) lib/active_model/attribute_set.rb:98:in `transform_values';;;;;
activemodel (7.1.3.2) lib/active_model/attribute_set.rb:98:in `map';;;;;
activerecord (7.1.3.2) lib/active_record/transactions.rb:420:in `restore_transaction_record_state';;;;;
activerecord (7.1.3.2) lib/active_record/transactions.rb:345:in `rolledback!';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:200:in `block in rollback_records';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:263:in `run_action_on_records';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:199:in `rollback_records';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:527:in `block in rollback_transaction';;;;;
activesupport (7.1.3.2) lib/active_support/concurrency/null_lock.rb:9:in `synchronize';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:520:in `rollback_transaction';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:539:in `rescue in block in within_new_transaction';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:538:in `block in within_new_transaction';;;;;
activesupport (7.1.3.2) lib/active_support/concurrency/null_lock.rb:9:in `synchronize';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/transaction.rb:532:in `within_new_transaction';;;;;
activerecord (7.1.3.2) lib/active_record/connection_adapters/abstract/database_statements.rb:344:in `transaction';;;;;
activerecord (7.1.3.2) lib/active_record/transactions.rb:361:in `with_transaction_returning_status';;;;;
activerecord (7.1.3.2) lib/active_record/transactions.rb:305:in `destroy';;;;;
```;;;;;
;;;;;
### Proposed solution;;;;;
;;;;;
local workaround is something along the lines of:;;;;;
;;;;;
```ruby;;;;;
module ActiveRecord;;;;;
  module Encryption;;;;;
    module Contexts;;;;;
...;;;;;
      class_methods do;;;;;
....  ;;;;;
        def without_encryption(&block);;;;;
          encryptor = ActiveRecord::Encryption::NullEncryptor.new;;;;;
          key_provider = ActiveRecord::Encryption::NullKeyProvider.new;;;;;
          ActiveRecord::Encryption.with_encryption_context(encryptor:, key_provider:, &block);;;;;
        end;;;;;
;;;;;
...;;;;;
;;;;;
    class NullKeyProvider;;;;;
    end;;;;;
```;;;;;
;;;;;
I'm happy to try to provide a pull request if there is hope that it will be accepted.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**:  3.2.2;;;;;
",2024-03-11T14:14:06Z,2024-04-04T11:55:19Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 126910270, 'node_id': 'MDU6TGFiZWwxMjY5MTAyNzA=', 'url': 'https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps', 'name': 'With reproduction steps', 'color': '009800', 'default': False, 'description': None}, {'id': 5511275119, 'node_id': 'LA_kwDNIULPAAAAAUh_Ym8', 'url': 'https://api.github.com/repos/rails/rails/labels/encryption', 'name': 'encryption', 'color': '8D3EA8', 'default': False, 'description': ''}]""";;;;;
"2179081656,Can't use Model.exists? with composite primary keys,""### Steps to reproduce";;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
require 'bundler/inline';;;;;
;;;;;
gemfile(true) do;;;;;
  source 'https://rubygems.org';;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
  gem 'rails';;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"  # gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
  gem 'sqlite3';;;;;
end;;;;;
;;;;;
require 'active_record';;;;;
require 'minitest/autorun';;;;;
require 'logger';;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
ActiveRecord::Base.establish_connection(adapter: 'sqlite3', database: ':memory:');;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :posts, force: true, primary_key: %i[user_id account_id] do |t|;;;;;
    t.integer 'user_id', null: false;;;;;
    t.integer 'account_id', null: false;;;;;
  end;;;;;
end;;;;;
;;;;;
class Post < ActiveRecord::Base;;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_association_stuff;;;;;
    Post.create!(user_id: 1, account_id: 1);;;;;
;;;;;
    assert_equal [1, 1], Post.find([1, 1]).id;;;;;
    assert_equal true, Post.exists?([1, 1]);;;;;
  end;;;;;
end;;;;;
;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
```exists?``` should return a boolean if a given row exist for this primary key, like it does for not composite keys.;;;;;
;;;;;
### Actual behavior;;;;;
```;;;;;
NoMethodError: undefined method `include?' for 1:Integer;;;;;
;;;;;
"        elsif statement.include?(""""?"""")";;;;;
                       ^^^^^^^^^;;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/sanitization.rb:167:in `sanitize_sql_array';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/sanitization.rb:37:in `sanitize_sql_for_conditions';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/relation/query_methods.rb:1513:in `build_where_clause';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/relation/query_methods.rb:943:in `where!';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/relation/finder_methods.rb:437:in `construct_relation_for_exists';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/relation/finder_methods.rb:366:in `exists?';;;;;
    /home/pate/.rvm/gems/ruby-3.1.2/gems/activerecord-7.1.3.2/lib/active_record/querying.rb:23:in `exists?';;;;;
    bug_report.rb:40:in `test_association_stuff';;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**:  7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.1;;;;;
",2024-03-11T13:01:58Z,2024-03-20T01:49:50Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}, {'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}]""";;;;;
"2177925782,Empty embeds when RichText is set to an empty content,""Fix #51269";;;;;
;;;;;
Action Text supports saving a RichText model with empty content. Passing _almost_ empty content (such as a space) flushes the embeds, but passing truly empty content does not. This defies expectations.;;;;;
;;;;;
This change ensures that the embeds are flushed when empty content is passed;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-10T22:05:51Z,2024-03-12T04:41:07Z,[{'id': 1180817762, 'node_id': 'MDU6TGFiZWwxMTgwODE3NzYy', 'url': 'https://api.github.com/repos/rails/rails/labels/actiontext', 'name': 'actiontext', 'color': '3bc667', 'default': False, 'description': ''}]""";;;;;
"2177865633,Using preload with composite keys can cause too many records to be read,""### Steps to reproduce";;;;;
;;;;;
Using `preload` with composite keys can cause more records to be read than are required - consider this test case:;;;;;
;;;;;
```ruby;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  gem """"activerecord"""", """"7.1.3.2""""";;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :nodes, primary_key: [:node_id, :node_version] do |t|;;;;;
    t.integer :node_id;;;;;
    t.integer :node_version;;;;;
  end;;;;;
;;;;;
  create_table :node_tags, primary_key: [:node_id, :node_version, :k], force: true do |t|;;;;;
    t.integer :node_id;;;;;
    t.integer :node_version;;;;;
    t.text :k;;;;;
  end;;;;;
end;;;;;
;;;;;
class Node < ActiveRecord::Base;;;;;
"  has_many :tags, class_name: """"NodeTag"""", query_constraints: [:node_id, :node_version], :inverse_of => :node";;;;;
end;;;;;
;;;;;
class NodeTag < ActiveRecord::Base;;;;;
  belongs_to :node, query_constraints: [:node_id, :node_version], :inverse_of => :tags;;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_preload;;;;;
    node = Node.create(id: [1, 1]);;;;;
"    node.tags.create(k: """"a"""")";;;;;
"    node.tags.create(k: """"b"""")";;;;;
    node = Node.create(id: [1, 2]);;;;;
"    node.tags.create(k: """"c"""")";;;;;
"    node.tags.create(k: """"d"""")";;;;;
    node = Node.create(id: [2, 1]);;;;;
"    node.tags.create(k: """"e"""")";;;;;
"    node.tags.create(k: """"f"""")";;;;;
;;;;;
    nodes = Node.preload(:tags);;;;;
              .where(node_id: 1, node_version: 2);;;;;
              .or(Node.where(node_id: 2, node_version: 1));;;;;
              .order(:node_id, :node_version);;;;;
;;;;;
    assert_equal 2, nodes.size;;;;;
;;;;;
    nodes.each do |node|;;;;;
      assert_equal 2, node.tags.size;;;;;
    end;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
The assertions pass, but if you look at the logged SQL for the preload you see this:;;;;;
;;;;;
```sql;;;;;
"SELECT """"node_tags"""".*";;;;;
"FROM """"node_tags""""";;;;;
"WHERE """"node_tags"""".""""node_id"""" IN (?, ?) AND """"node_tags"""".""""node_version"""" IN (?, ?)";;;;;
```;;;;;
;;;;;
where the bound ID values are 1 and 2 as are the bound version values.;;;;;
;;;;;
So not only will that read the tags for `[1, 2]` and `[2, 1]` as expected but it will also read the tags for `[1, 1]` which are not needed.;;;;;
;;;;;
Those records don't appear to get attached to any node so are presumably being discarded when the preload is matched to the original records.;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
The required records are preloaded.;;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
Extra records are preloaded.;;;;;
;;;;;
### System configuration;;;;;
;;;;;
**Rails version**: 7.1.3.2;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-10T19:14:55Z,2024-03-11T18:14:29Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2177504195,Expire caching when a download fail while proxying in ActiveStorage,""Fix #51284";;;;;
;;;;;
Both Proxy controllers in Active Storage set the caching headers early before streaming. ;;;;;
;;;;;
In some instances (see #51284), it is possible for the file download (from the service to server) to fail before we send the first byte to the client (response not yet committed). ;;;;;
;;;;;
In those instances, this change would invalidate the cache and return a better response status before closing the stream.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-10T03:28:10Z,2024-03-10T06:55:14Z,[{'id': 664533972, 'node_id': 'MDU6TGFiZWw2NjQ1MzM5NzI=', 'url': 'https://api.github.com/repos/rails/rails/labels/activestorage', 'name': 'activestorage', 'color': 'bfd4f2', 'default': False, 'description': None}]""";;;;;
"2175998435,Ensure image_processing is installed with Trix,""Currently if the Gemfile does not contain a commented out line for image_processing, or the line uses single, not double quotes, image_processing will not be installed and Trix will not be able to correctly handle image attachments.";;;;;
;;;;;
This ensures image_processing _is_ installed in those circumstances.;;;;;
;;;;;
<!--;;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
This Pull Request has been created because it is possible for the `bin/rails action_text:install` command to fail to add `image_processing` to the Gemfile if the default comment has been removed, or if the double quotes have been changed to single ones (perhaps by a Rubocop auto-fix).;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes the ActionText install script to more thoroughly ensure `image_processing` is installed.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-08T12:59:20Z,2024-03-08T13:29:29Z,[{'id': 1180817762, 'node_id': 'MDU6TGFiZWwxMTgwODE3NzYy', 'url': 'https://api.github.com/repos/rails/rails/labels/actiontext', 'name': 'actiontext', 'color': '3bc667', 'default': False, 'description': ''}]""";;;;;
"2175983514,ActiveStorage ProxyController sets Cache-Control headers on errors like FileNotFoundError,""### Steps to reproduce";;;;;
Ive observed occasional broken **representation** images on our site. After digging a little into this issue it became clear that the proxy cache in front of our application has cached a broken image. A cache purge always fixed it. ;;;;;
;;;;;
After digging a little deeper i think i found the source. The proxy cache is getting a `cache-control` header instructing it to do so by the ActiveStorage::Representations::ProxyController!;;;;;
;;;;;
Ive created a synthetic test which reproduces it. The response is successful with zero length and cache-control header set. The following test falsely passed!;;;;;
;;;;;
```ruby;;;;;
    ActiveStorage::Service::DiskService.any_instance.expects(:download).raises(ActiveStorage::FileNotFoundError);;;;;
    ;;;;;
"    get active_storage_image_url # """"/rails/active_storage/representations/proxy/...""""";;;;;
;;;;;
    assert_response :ok;;;;;
    assert_equal 'image/png', response.content_type;;;;;
"    assert_equal """"0"""", response.headers['Content-Length']";;;;;
    assert response.headers.key? 'ETag';;;;;
"    assert_equal """"max-age=3155695200, public"""", response.headers['Cache-Control']";;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
On an error like `ActiveStorage::FileNotFoundError` the response should not be successful nor should it instruct caches to cache that empty response.;;;;;
;;;;;
### Actual behavior;;;;;
On an error like `ActiveStorage::FileNotFoundError` the response is still successful (Statuscode: 200) and a cache-control header is instructing caches to cache this empty response.;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.0.8;;;;;
;;;;;
**Ruby version**: 3.1.2;;;;;
",2024-03-08T12:51:45Z,2024-03-12T02:56:56Z,[{'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}, {'id': 664533972, 'node_id': 'MDU6TGFiZWw2NjQ1MzM5NzI=', 'url': 'https://api.github.com/repos/rails/rails/labels/activestorage', 'name': 'activestorage', 'color': 'bfd4f2', 'default': False, 'description': None}]""";;;;;
"2175446335,Move callsite for to lease_connection in AR::Sanitization up to `sanitize_sql_array`,""After looking at ways to refactor calls to `lease_connection`, this tiny PR came up for `sanitize_sql_array`";;;;;
"cc @byroot "",2024-03-08T07:24:29Z,2024-03-16T08:42:20Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2175354422,Transform attributes during `ActiveModel::Serialization::JSON#from_json`,""### Motivation / Background";;;;;
;;;;;
The problem;;;;;
---;;;;;
;;;;;
Loading JSON into an Active Model instance with;;;;;
`ActiveModel::Serializers:JSON#from_json` assumes that the property casings will match the class attribute casings. This works well with snake_casing, since idiomatic Ruby methods are snake_cased.;;;;;
;;;;;
When `#from_json` loads JSON properties that are camelCased, it silently ignores them:;;;;;
;;;;;
```ruby;;;;;
class Person;;;;;
  include ActiveModel::Serializers::JSON;;;;;
;;;;;
  attr_accessor :name, :born_on;;;;;
;;;;;
  def attributes=(hash);;;;;
"    hash.each { |key, value| send(""""#{key}="""", value) }";;;;;
  end;;;;;
end;;;;;
;;;;;
payload <<~JSON;;;;;
"  { """"name"""": """"Alice"""", """"bornOn"""": """"2024-03-08"""" }";;;;;
JSON;;;;;
;;;;;
person = Person.new.from_json(payload);;;;;
"person.name     # => """"Alice""""";;;;;
person.born_on  # => nil;;;;;
```;;;;;
;;;;;
### Detail;;;;;
;;;;;
The proposal;;;;;
---;;;;;
;;;;;
This commit proposes extending `#from_json` to accept a block. After the JSON string is decoded (and un-nested from its root, depending on the model's configuration), yield the `Hash` to a block if one is passed as an argument:;;;;;
;;;;;
```ruby;;;;;
payload <<~JSON;;;;;
"  { """"name"""": """"Alice"""", """"bornOn"""": """"2024-03-08"""" }";;;;;
JSON;;;;;
;;;;;
person = Person.new.from_json(payload) { _1.deep_transform_keys!(&:underscore) };;;;;
"person.name     # => """"Alice""""";;;;;
"person.born_on  # => """"2024-03-08""""";;;;;
```;;;;;
;;;;;
Supporting a block can be useful for context-specific overrides. If a class needs to provide a default transformation, it can override `#from_json`:;;;;;
;;;;;
```ruby;;;;;
class PersonFromCamelCaseAPI < Person;;;;;
  def from_json(*, &block);;;;;
    default_transform = proc { _1.deep_transform_keys!(&:underscore) };;;;;
;;;;;
    super(*, &(block || defaul_transform));;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
Without built-in support for transforming camelCased properties into snake_cased attributes, callers are responsible decoding the JSON themselves. In addition to the key transformations, they're also responsible for re-creating both the JSON decoding *and* the configurable root un-nesting provided by `#from_json`:;;;;;
;;;;;
```ruby;;;;;
payload <<~JSON;;;;;
"  { """"name"""": """"Alice"""", """"bornOn"""": """"2024-03-08"""" }";;;;;
JSON;;;;;
;;;;;
attributes = ActiveSupport::JSON.decode(payload);;;;;
attributes.deep_transform_keys!(&:underscore);;;;;
person = Person.new(attributes);;;;;
"person.name     # => """"Alice""""";;;;;
"person.born_on  # => """"2024-03-08""""";;;;;
;;;;;
nested_payload <<~JSON;;;;;
"  { """"person"""": { """"name"""": """"Alice"""", """"bornOn"""": """"2024-03-08"""" } }";;;;;
JSON;;;;;
;;;;;
attributes = ActiveSupport::JSON.decode(nested_payload);;;;;
attributes.deep_transform_keys!(&:underscore);;;;;
"person = Person.new(attributes[""""person""""])";;;;;
"person.name     # => """"Alice""""";;;;;
"person.born_on  # => """"2024-03-08""""";;;;;
```;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-08T06:18:38Z,2024-03-08T06:20:19Z,[{'id': 107190, 'node_id': 'MDU6TGFiZWwxMDcxOTA=', 'url': 'https://api.github.com/repos/rails/rails/labels/activemodel', 'name': 'activemodel', 'color': '00E5FF', 'default': False, 'description': None}]""";;;;;
"2174963549,Unnecessary auto save is triggered for polymorphic has_one defined in child class using single-table inheritance,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
This bug is directly related to https://github.com/rails/rails/issues/44986.;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :pictures, force: true do |t|;;;;;
    t.references :imageable, polymorphic: true;;;;;
  end;;;;;
;;;;;
  create_table :employees, force: true do |t|;;;;;
    t.string :type;;;;;
    t.string :name;;;;;
  end;;;;;
end;;;;;
;;;;;
class Picture < ActiveRecord::Base;;;;;
;;;;;
  belongs_to :imageable, polymorphic: true, optional: true;;;;;
;;;;;
  after_save :count_saves;;;;;
;;;;;
  def count_saves;;;;;
    @count ||= 0;;;;;
    @count += 1;;;;;
  end;;;;;
;;;;;
end;;;;;
;;;;;
class Employee < ActiveRecord::Base;;;;;
;;;;;
end;;;;;
;;;;;
class CaliforniaEmployee < Employee;;;;;
;;;;;
  has_one :picture, as: :imageable;;;;;
;;;;;
end;;;;;
;;;;;
class ArizonaEmployee < Employee;;;;;
;;;;;
  has_one :picture, as: :imageable;;;;;
;;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
;;;;;
  def test_association_not_saved_on_update;;;;;
    picture = Picture.create!;;;;;
;;;;;
"    cali_employee = CaliforniaEmployee.create!(name: """"Cali"""", picture: picture)";;;;;
;;;;;
"    cali_employee.update!(name: """"Cali Fornia"""")";;;;;
;;;;;
"    assert_equal """"Employee"""", picture.imageable_type";;;;;
    assert_equal cali_employee.id, picture.imageable_id;;;;;
;;;;;
    # Saves on create of picture and create of employee;;;;;
    assert_equal 2, picture.instance_variable_get(:@count);;;;;
  end;;;;;
;;;;;
  def test_association_saved_on_actual_model_change;;;;;
    picture = Picture.create!;;;;;
;;;;;
"    CaliforniaEmployee.create!(name: """"Cali"""", picture: picture)";;;;;
"    az_employee = ArizonaEmployee.create!(name: """"Arizona"""")";;;;;
;;;;;
    az_employee.update!(picture: picture);;;;;
;;;;;
"    assert_equal """"Employee"""", picture.imageable_type";;;;;
    assert_equal az_employee.id, picture.imageable_id;;;;;
;;;;;
    # Saves on create of picture, create of cali employee, and update to az employee;;;;;
    assert_equal 3, picture.instance_variable_get(:@count);;;;;
  end;;;;;
;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
<!-- Tell us what should happen -->;;;;;
;;;;;
There is no reason to trigger a save on the Picture record when updating a field on CaliforniaEmployee, since the picture record is already correctly pointing at the existing Employee.;;;;;
;;;;;
### Actual behavior;;;;;
<!-- Tell us what happens instead -->;;;;;
;;;;;
`inverse_polymorphic_association_changed?` is returning true for this use case causing a subsequent autosave to be triggered on Picture, leading to a failure in both test cases:;;;;;
;;;;;
```;;;;;
Failure:;;;;;
BugTest#test_association_not_saved_on_update [rails-issue.rb:73]:;;;;;
Expected: 2;;;;;
  Actual: 3;;;;;
;;;;;
Failure:;;;;;
BugTest#test_association_saved_on_actual_model_change [rails-issue.rb:85]:;;;;;
Expected: 3;;;;;
  Actual: 4;;;;;
```;;;;;
;;;;;
### Additional Context;;;;;
;;;;;
This appears to specifically fail when the has_one is defined on a child class using Single-table Inheritance. If the `has_one` in the test case above is moved up to the `Employee` model, then the expectation will pass.;;;;;
;;;;;
The issue appears to be here: https://github.com/rails/rails/blob/83702d64c80637cc0debc3917c3419d327f8ee1b/activerecord/lib/active_record/autosave_association.rb#L495-L497.;;;;;
;;;;;
That currently reads the class for the record from the `foreign_type` and then attempts to convert it to the right class for polymorphic relationships, but I believe this is unnecessary, since it already would have been converted to the correct type when set.;;;;;
;;;;;
Instead `reflection.active_record` should actually be updated to use the `polymorphic_name` otherwise we risk looking at the wrong model name that would be ultimately saved.;;;;;
;;;;;
Updating line 497 to this gets these test cases passing for me:;;;;;
;;;;;
```;;;;;
reflection.active_record.polymorphic_name != class_name;;;;;
```;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2, main;;;;;
;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-07T22:52:04Z,2024-03-18T17:47:48Z,[]
2173610664,Fix redundant resource_route Invocations in scaffold generator,### Motivation / Background";;;;;
;;;;;
This PR comes form [this comment](https://github.com/rails/rails/pull/50335#pullrequestreview-1776597506). The rails generate scaffold command triggers the resource_route hook twice.;;;;;
;;;;;
```;;;;;
% bin/rails generate scaffold Post name:string;;;;;
      invoke  active_record;;;;;
      create    db/migrate/20240303140443_create_posts.rb;;;;;
      create    app/models/post.rb;;;;;
      invoke    test_unit;;;;;
      create      test/models/post_test.rb;;;;;
      create      test/fixtures/posts.yml;;;;;
      invoke  resource_route;;;;;
       route    resources :posts;;;;;
      invoke  scaffold_controller;;;;;
      create    app/controllers/posts_controller.rb;;;;;
      invoke    erb;;;;;
      create      app/views/posts;;;;;
      create      app/views/posts/index.html.erb;;;;;
      create      app/views/posts/edit.html.erb;;;;;
      create      app/views/posts/show.html.erb;;;;;
      create      app/views/posts/new.html.erb;;;;;
      create      app/views/posts/_form.html.erb;;;;;
      create      app/views/posts/_post.html.erb;;;;;
      invoke    resource_route;;;;;
      invoke    test_unit;;;;;
      create      test/controllers/posts_controller_test.rb;;;;;
      create      test/system/posts_test.rb;;;;;
      invoke    helper;;;;;
      create      app/helpers/posts_helper.rb;;;;;
      invoke      test_unit;;;;;
      invoke    jbuilder;;;;;
      create      app/views/posts/index.json.jbuilder;;;;;
      create      app/views/posts/show.json.jbuilder;;;;;
      create      app/views/posts/_post.json.jbuilder;;;;;
```;;;;;
;;;;;
Despite setting the --skip-routes option, which is a feature of the ScaffoldControllerGenerator designed to prevent route generation, the command still produces routes.;;;;;
;;;;;
```;;;;;
% bin/rails g scaffold Post name:string --skip-routes;;;;;
      invoke  active_record;;;;;
      create    db/migrate/20240306035406_create_posts.rb;;;;;
      create    app/models/post.rb;;;;;
      invoke    test_unit;;;;;
      create      test/models/post_test.rb;;;;;
      create      test/fixtures/posts.yml;;;;;
      invoke  resource_route;;;;;
       route    resources :posts;;;;;
      invoke  scaffold_controller;;;;;
      create    app/controllers/posts_controller.rb;;;;;
      invoke    erb;;;;;
      create      app/views/posts;;;;;
      create      app/views/posts/index.html.erb;;;;;
      create      app/views/posts/edit.html.erb;;;;;
      create      app/views/posts/show.html.erb;;;;;
      create      app/views/posts/new.html.erb;;;;;
      create      app/views/posts/_form.html.erb;;;;;
      create      app/views/posts/_post.html.erb;;;;;
      invoke    resource_route;;;;;
      invoke    test_unit;;;;;
      create      test/controllers/posts_controller_test.rb;;;;;
      create      test/system/posts_test.rb;;;;;
      invoke    helper;;;;;
      create      app/helpers/posts_helper.rb;;;;;
      invoke      test_unit;;;;;
      invoke    jbuilder;;;;;
      create      app/views/posts/index.json.jbuilder;;;;;
      create      app/views/posts/show.json.jbuilder;;;;;
      create      app/views/posts/_post.json.jbuilder;;;;;
```;;;;;
;;;;;
### Detail;;;;;
Following three parts of the code are related to multiple invocation of resource_route.;;;;;
;;;;;
- `hook_for :resource_route` within the ResourceGenerator, from which the ScaffoldGenerator inherits;;;;;
- `class_option :resource_route` in ScaffoldGenerator;;;;;
- `hook_for :resource_route` in ScaffoldControllerGenerator which is invoked by `hook_for :scaffold_controller` in ScaffoldGenerator;;;;;
;;;;;
The resource_route hook within ScaffoldGenerator has been removed with remove_hook_for to ensure that the hook is called exclusively within the scaffold_controller hook.;;;;;
The `class_option :resource_route, type: :boolean` has also been removed. Despite the removal of the resource_route hook in ScaffoldGenerator, invoking `class_option :resource_route` was still indirectly triggering resource_route.;;;;;
This occurred due to a combination of the following reasons:;;;;;
;;;;;
- generator classes, which inherit from Thor::Group, execute all defined public instance methods upon command execution.;;;;;
- the hook_for method utilizes invoke_from_option, a method defined in Thor::Group to dynamically defines an invoke_from_option_* method at runtime, which persists even if remove_hook_for is called.;;;;;
  - https://github.com/rails/thor/blob/a43d92fad7ebd77d359b7b96eb3db8a73ef9057c/lib/thor/group.rb#L124;;;;;
- the invoke_from_option_* method returns early when the option isn't available but `class_option :resource_route` in ScaffoldGeneratore makes the option available and Rails sets the resource_route option as default.;;;;;
  - https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/railties/lib/rails/generators.rb#L56;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-07T11:11:06Z,2024-03-30T06:24:07Z,[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2173181848,Kebabcase puma-dev configuration suggestion in bin/seutp,""Following up on #51266. Trying to make sure the suggested `puma-dev` setup introduced in #51088 works out of the box.";;;;;
;;;;;
Creating a fresh app with `rails new --main AppName` (or any multi-word app name) will still give us the error message:;;;;;
;;;;;
![image](https://github.com/rails/rails/assets/986290/7dd53909-8566-45ac-960c-84b58f3526a9);;;;;
;;;;;
"This PR simply kebabcases the `puma-dev` symlink suggested in `bin/setup`, making it work without additional configuration."",2024-03-07T07:40:07Z,2024-03-07T07:40:11Z,""[{'id': 107195, 'node_id': 'MDU6TGFiZWwxMDcxOTU=', 'url': 'https://api.github.com/repos/rails/rails/labels/railties', 'name': 'railties', 'color': '8BE06E', 'default': False, 'description': None}]""";;;;;
"2172885664,Add escape_html_entities option to JSON encoder,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
This Pull Request has been created because I sometimes want to override the global `Encoding.escape_html_entities_in_json` option for specific call sites.;;;;;
;;;;;
Where I work, we tend to embed JSON in HTML, so the default html entity escaping is appreciated. But there are some cases where we'd like to turn it off.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes ActiveSupport's JSON encoding code to accept an optional flag for whether or not to escape HTML entities (`escape_html_entities`). If not supplied, the existing global configuration flag will be used instead.;;;;;
;;;;;
The idea is to make the following possible:;;;;;
;;;;;
```ruby;;;;;
class MyController < ApplicationController;;;;;
  def index;;;;;
    render json: { some: '<data>' }, escape_html_entities: false;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->;;;;;
Sorry to show up with a code change out of the blue. I did a weird monkey patch like this in our codebase at work to solve a problem, and it seemed easy to upstream so I'm submitting this PR just in case. No hard feelings if it doesn't seem reasonable.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [ x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [ x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
;;;;;
",2024-03-07T03:49:36Z,2024-03-07T03:49:40Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}]""";;;;;
"2172771713,Enable Hash#compact_blank inside ActiveSupport::LogSubscriber,""### Motivation / Background";;;;;
Using ActiveSupport::LogSubscriber#color inside a custom log subscriber causes NoMethodError.;;;;;
;;;;;
### Detail;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  gem """"activesupport""""";;;;;
end;;;;;
;;;;;
"require """"active_support""""";;;;;
;;;;;
class TestLogSubscriber < ActiveSupport::LogSubscriber;;;;;
  attach_to :test;;;;;
;;;;;
  def hi(event);;;;;
    info(color(event.payload[:message], GREEN));;;;;
  end;;;;;
;;;;;
  private;;;;;
    def log_exception(name, e);;;;;
      super;;;;;
      raise e;;;;;
    end;;;;;
end;;;;;
;;;;;
ActiveSupport::LogSubscriber.logger = ActiveSupport::Logger.new(STDOUT);;;;;
"ActiveSupport::Notifications.instrument(""""hi.test"""", message: """"Hello!"""")";;;;;
```;;;;;
;;;;;
```;;;;;
/rails/activesupport/lib/active_support/log_subscriber.rb:193:in `mode_from': undefined method `compact_blank' for an instance of Hash (NoMethodError);;;;;
    ;;;;;
      modes = MODES.values_at(*options.compact_blank.keys);;;;;
                                      ^^^^^^^^^^^^^^;;;;;
```;;;;;
;;;;;
### Additional information;;;;;
I have encountered this while using kredis locally, like;;;;;
;;;;;
```;;;;;
$ cd kredis;;;;;
$ bin/console;;;;;
"irb(main):001> Kredis.string """"mystring""""";;;;;
"Could not log """"meta.kredis"""" event. NoMethodError: undefined method `compact_blank' for an instance of Hash";;;;;
```;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [ ] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-07T01:39:16Z,2024-03-11T23:11:21Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}]""";;;;;
"2172603548,ActionText::RichText attachments not cleaned up when content made empty,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile(true) do;;;;;
"  source """"https://rubygems.org""""";;;;;
;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
;;;;;
"  gem """"rails""""";;;;;
;;;;;
  gem 'debug';;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"  # gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
;;;;;
"  gem """"sqlite3""""";;;;;
end;;;;;
;;;;;
"require """"active_record/railtie""""";;;;;
"require """"active_storage/engine""""";;;;;
"require """"action_text/engine""""";;;;;
"require """"tmpdir""""";;;;;
;;;;;
class TestApp < Rails::Application;;;;;
  config.load_defaults Rails::VERSION::STRING.to_f;;;;;
;;;;;
  config.root = __dir__;;;;;
"  config.hosts << """"example.org""""";;;;;
  config.eager_load = false;;;;;
"  config.session_store :cookie_store, key: """"cookie_store_key""""";;;;;
"  config.secret_key_base = """"secret_key_base""""";;;;;
;;;;;
  config.logger = Logger.new($stdout);;;;;
  Rails.logger  = config.logger;;;;;
;;;;;
  config.active_storage.service = :local;;;;;
  config.active_storage.service_configurations = {;;;;;
    local: {;;;;;
      root: Dir.tmpdir,;;;;;
"      service: """"Disk""""";;;;;
    };;;;;
  };;;;;
end;;;;;
;;;;;
"ENV[""""DATABASE_URL""""] = """"sqlite3::memory:""""";;;;;
;;;;;
Rails.application.initialize!;;;;;
;;;;;
"require ActiveStorage::Engine.root.join(""""db/migrate/20170806125915_create_active_storage_tables.rb"""").to_s";;;;;
"require ActionText::Engine.root.join(""""db/migrate/20180528164100_create_action_text_tables.rb"""").to_s";;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  CreateActiveStorageTables.new.change;;;;;
  CreateActionTextTables.new.change;;;;;
;;;;;
  create_table :users, force: true;;;;;
end;;;;;
;;;;;
class User < ActiveRecord::Base;;;;;
  has_rich_text :description;;;;;
end;;;;;
;;;;;
"require """"minitest/autorun""""";;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_rich_text_embed_behaviour;;;;;
    attached = ActiveStorage::Blob.create_and_upload!(;;;;;
      io: ::StringIO.new('dummy'),;;;;;
"      filename: 'dummy.txt""""',";;;;;
      content_type: 'text/plain',;;;;;
    );;;;;
;;;;;
"    user = User.create!(description: ActionText::Content.new(""""hello"""").append_attachables(attached))";;;;;
;;;;;
    assert_equal 1, user.description.embeds.size;;;;;
;;;;;
    user.description = ActionText::Content.new('');;;;;
;;;;;
    user.save;;;;;
;;;;;
    assert_empty user.description.embeds;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
When the body of an ActionText::RichText object is set to the empty string.  I would expect attachments to be cleaned up.;;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
ActiveStorage attachments `ActionText::RichText.embeds` are retained until the body is modified to contain some data ;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: Rails 7.1.3.2 [source code is unchanged on mainline](https://github.com/rails/rails/blob/2fa3294618eba90e095020620ca9584190c2ec8e/actiontext/app/models/action_text/rich_text.rb#L55) ;;;;;
;;;;;
**Ruby version**: ruby 3.2.3;;;;;
",2024-03-06T23:13:33Z,2024-03-12T02:56:38Z,[{'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}, {'id': 1180817762, 'node_id': 'MDU6TGFiZWwxMTgwODE3NzYy', 'url': 'https://api.github.com/repos/rails/rails/labels/actiontext', 'name': 'actiontext', 'color': '3bc667', 'default': False, 'description': ''}]""";;;;;
"2171578747,ActionCable::Channel::Broadcasting.serialize_broadcasting leads to unintentional very wide broadcast,""### Steps to reproduce";;;;;
Please consider the following code:;;;;;
;;;;;
```ruby;;;;;
class User < ApplicationRecord;;;;;
  # ...;;;;;
end;;;;;
;;;;;
class Foo;;;;;
  include ActiveModel::Model;;;;;
;;;;;
  def initialize(user:, type:);;;;;
    @user = user;;;;;
    @type = type.to_s;;;;;
  end;;;;;
;;;;;
  def self.find(foo_id);;;;;
"    id, type = foo_id.split("""":"""", 2)";;;;;
    new(user: User.find(id), type: type);;;;;
  end;;;;;
;;;;;
  def id;;;;;
"    """"#{@user.id}:#{type}""""";;;;;
  end;;;;;
;;;;;
  # ... more methods that make Foo actually useful;;;;;
end;;;;;
;;;;;
class FooChannel < ApplicationCable::Channel;;;;;
  def subscribed;;;;;
    foo = Foo.find(params[:foo_id]);;;;;
    authorize foo, :subscribe? # (Pundit);;;;;
    stream_for foo;;;;;
  end;;;;;
;;;;;
  def self.notify_patch(foo);;;;;
"    payload = { event: :patched, id: foo.id, type: """"Foo"""" }";;;;;
    broadcast_to(foo, payload);;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
It is possible to subscribe to patch-events for instances of Foo.;;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
So what happens is that we will fetch the `foo`. This is successful; no exception is raised. We then call `authorize` to see if the `current_user` may subscribe to events on this channel for this resource. `authorize` will raise an exception if it is not allowed; in this example it doesn't; we're on the happy path. And after that we call `stream_for` which **seems** to work fine... We can subscribe and we can call `notify_patch` to send our events.;;
;;;;;
"But there is a subtle issue with this code. `stream_for` has called `broadcasting_for` to generate a unique ID for the stream, but that ID appears to be `""""FooChannel:nil""""` which is really not unique at all!";;;;;
;;;;;
`broadcast_to` also calls `broadcasting_for` returning the same not-so-unique ID. The result is that **every `FooChannel.notify_patch`-event** gets broadcasted to **all `FooChannel`-subscribers**.;;;;;
;;;;;
The reason for this is easy to find:;;;;;
[`broadcasting_for`](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/actioncable/lib/action_cable/channel/broadcasting.rb#L24) calls [`serialize_broadcasting`](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/actioncable/lib/action_cable/channel/broadcasting.rb#L29) which in turn calls [`to_param`](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/actioncable/lib/action_cable/channel/broadcasting.rb#L36) on our `foo`-object. Our foo-object isn't persisted, or in other words: `foo#persisted?` implemented by [`ActiveModel::API#persisted?`](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/activemodel/lib/active_model/api.rb#L95) returns `false`. This makes `foo.to_param` implemented by [`ActiveModel::Conversion#to_param`](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/activemodel/lib/active_model/conversion.rb#L90) return `nil`.;;;;;
;;;;;
Quick solutions for this are easy to produce:;;;;;
;;;;;
1. We could update our implementation of `persisted?`;;;;;
;;;;;
```ruby;;;;;
class Foo;;;;;
  def persisted?;;;;;
    @user.persisted?;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
2. we could also call `stream_for foo.id` and `broadcast_to(foo.id, payload)`;;;;;
3. we could also rewrite `Foo#to_param`;;;;;
4. etcetera.;;;;;
;;;;;
What's *not* easy is figuring out that you are in fact broadcasting all events to everyone.  We gave it some thought but we didn't come up with a solid solution that would prevent this from happening again with the next channel. (`BarChannel` obviously 😄). It's really easy to make the same mistake again and it's not easy to detect if you do.;;;;;
;;;;;
The root cause, from one point of view, is that fetching and authorization are ultimately dependent on an `id`, but that streaming uses `#to_param`. If it could call `#id` instead this would not have happened; but it can't, because `stream_for(model, callback = nil, coder: nil, &block)` basically allows anything as its `model`-parameter. Is this intentional?;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-06T13:57:46Z,2024-03-06T13:57:46Z,[]
2170621291,Default Active Storage strict loading to strict_loading_by_default,### Motivation / Background";;;;;
;;;;;
While Active Storage supports strict loading, it [defaults to false](https://github.com/rails/rails/blob/f7353283fd771e99b9675bcb9394e398964195f8/activestorage/lib/active_storage/attached/model.rb#L106). This can be problematic in applications that enforce strict loading by default. It can be assumed that `strict_loading_by_default` includes Active Storage attachments, leading to n+1 issues.;;;;;
;;;;;
### Detail;;;;;
;;;;;
This Pull Request changes the default of the `strict_loading` keyword parameter for `has_one_attached` and  `has_many_attached` to use the model's `strict_loading_by_default` to create a consistent developer experience.;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-06T04:39:05Z,2024-03-06T04:39:09Z,[{'id': 664533972, 'node_id': 'MDU6TGFiZWw2NjQ1MzM5NzI=', 'url': 'https://api.github.com/repos/rails/rails/labels/activestorage', 'name': 'activestorage', 'color': 'bfd4f2', 'default': False, 'description': None}]""";;;;;
"2170562786,Add support for pattern matching for parameters,""### Motivation / Background";;;;;
;;;;;
I have some RESTful endpoints where it makes sense to pattern match params to deal with different shape of incoming payloads, as illustrated in this endpoint:;;;;;
;;;;;
```ruby;;;;;
def create;;;;;
  case params;;;;;
  in interview_time_availability: { interview_time_id:, person_id: };;;;;
    @interview_time_availabilities.create! interview_time_id:, person_id:;;;;;
  in interview_time: { id: };;;;;
    @students.each do |student|;;;;;
      student.interview_time_availabilities.create interview_time_id: id;;;;;
    end;;;;;
  end;;;;;
;;;;;
  redirect_to students_interview_time_availabilities_path;;;;;
end;;;;;
```;;;;;
;;;;;
### Detail;;;;;
;;;;;
This PR adds a `deconstruct_keys(keys)` method on `StrongParameters` that called `to_unsafe_h` for pattern matching:;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [X] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [X] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [X] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [ ] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-06T03:36:54Z,2024-03-11T16:19:18Z,[{'id': 107189, 'node_id': 'MDU6TGFiZWwxMDcxODk=', 'url': 'https://api.github.com/repos/rails/rails/labels/actionpack', 'name': 'actionpack', 'color': 'FFF700', 'default': False, 'description': None}]""";;;;;
"2170466905,has_many relation with joins adding redundant inverse inner join,""### Steps to reproduce";;;;;
<!-- (Guidelines for creating a bug report are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#creating-a-bug-report)) -->;;;;;
;;;;;
Have the following set of related models, and use the `reverse_dependencies` relation. Observe (via the inline comments in the test case below) that there is an unnecessary/redundant join;;;;;
;;;;;
<!-- Paste your executable test case created from one of the scripts found [here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#create-an-executable-test-case) below: -->;;;;;
```ruby;;;;;
#!/usr/bin/env ruby;;;;;
# frozen_string_literal: true;;;;;
;;;;;
"require """"bundler/inline""""";;;;;
;;;;;
gemfile do;;;;;
"  source """"https://rubygems.org""""";;;;;
  ;;;;;
"  git_source(:github) { |repo| """"https://github.com/#{repo}.git"""" }";;;;;
  ;;;;;
"  gem """"rails"""", """"~> 7.1.0""""";;;;;
  # If you want to test against edge Rails replace the previous line with this:;;;;;
"# gem """"rails"""", github: """"rails/rails"""", branch: """"main""""";;;;;
  ;;;;;
"  gem """"sqlite3""""";;;;;
  ;;;;;
"  gem 'anbt-sql-formatter', require: """"anbt-sql-formatter/formatter""""";;;;;
end;;;;;
;;;;;
"require """"active_record""""";;;;;
"require """"minitest/autorun""""";;;;;
"require """"logger""""";;;;;
;;;;;
# This connection will do for database-independent bug reports.;;;;;
"ActiveRecord::Base.establish_connection(adapter: """"sqlite3"""", database: """":memory:"""")";;;;;
ActiveRecord::Base.logger = Logger.new(STDOUT);;;;;
;;;;;
ActiveRecord::Schema.define do;;;;;
  create_table :rubygems, force: true do |t|;;;;;
  end;;;;;
  ;;;;;
  create_table :versions, force: true do |t|;;;;;
    t.belongs_to :rubygem;;;;;
    t.integer :position;;;;;
    t.boolean :indexed;;;;;
  end;;;;;
  ;;;;;
  create_table :gem_downloads, force: true do |t|;;;;;
    t.belongs_to :rubygem;;;;;
    t.belongs_to :version, null: true;;;;;
    t.integer :count;;;;;
  end;;;;;
  ;;;;;
  create_table :dependencies, force: true do |t|;;;;;
    t.belongs_to :rubygem;;;;;
    t.belongs_to :version;;;;;
  end;;;;;
end;;;;;
;;;;;
class Rubygem < ActiveRecord::Base;;;;;
  has_many :incoming_dependencies, lambda {;;;;;
                                      joins(:version).where(versions: { indexed: true, position: 0 });;;;;
"                                    }, class_name: """"Dependency"""", inverse_of: :rubygem";;;;;
  has_many :reverse_dependencies, through: :incoming_dependencies, source: :version_rubygem;;;;;
  ;;;;;
  has_many :versions;;;;;
  ;;;;;
  has_many :incoming_dependencies_no_join, lambda {;;;;;
                                      where(versions: { indexed: true, position: 0 });;;;;
"                                    }, class_name: """"Dependency"""", inverse_of: :rubygem";;;;;
  has_many :reverse_dependencies_no_join, through: :incoming_dependencies_no_join, source: :version_rubygem;;;;;
end;;;;;
;;;;;
class Dependency < ActiveRecord::Base;;;;;
  belongs_to :rubygem, optional: true;;;;;
  belongs_to :version;;;;;
  has_one :version_rubygem, through: :version, source: :rubygem;;;;;
end;;;;;
;;;;;
class Version < ActiveRecord::Base;;;;;
  belongs_to :rubygem, touch: true;;;;;
"  has_many :dependencies, -> { order(""""rubygems.name ASC"""").includes(:rubygem) }, dependent: :destroy, inverse_of: :version";;;;;
end;;;;;
;;;;;
class BugTest < Minitest::Test;;;;;
  def test_assoc_1;;;;;
    rubygem1 = Rubygem.create!;;;;;
    v1 = Version.create!(indexed: true, position: 0, rubygem: rubygem1);;;;;
    rubygem2 = Rubygem.create!;;;;;
    v2 = Version.create!(indexed: true, position: 0, rubygem: rubygem2);;;;;
    d = v2.dependencies.create!(rubygem: rubygem1);;;;;
    ;;;;;
    puts Rails.version;;;;;
    ;;;;;
    # SELECT;;;;;
"    #   """"rubygems"""" . *";;;;;
    #   FROM;;;;;
"    #   """"rubygems""""";;;;;
"    #   INNER JOIN """"versions""""";;;;;
"    #     ON """"rubygems"""".""""id"""" = """"versions"""".""""rubygem_id""""";;;;;
"    #   INNER JOIN """"dependencies""""";;;;;
"    #     ON """"versions"""".""""id"""" = """"dependencies"""".""""version_id""""";;;;;
"    #   INNER JOIN """"versions"""" """"versions_dependencies""""";;;;;
"    #     ON """"versions_dependencies"""".""""id"""" = """"dependencies"""".""""version_id""""";;;;;
    #   WHERE;;;;;
"    #   """"dependencies"""".""""rubygem_id"""" = ?";;;;;
"    #   AND """"versions"""".""""indexed"""" = ?";;;;;
"    #   AND """"versions"""".""""position"""" = ?";;;;;
      ;;;;;
    puts mu_pp(rubygem1.reverse_dependencies.arel);;;;;
    ;;;;;
    assert_equal [rubygem2], rubygem1.reverse_dependencies;;;;;
    assert_equal rubygem1.reverse_dependencies_no_join, rubygem1.reverse_dependencies;;;;;
    ;;;;;
    # Failure:;;;;;
    # BugTest#test_assoc_1 [Untitled.rb:118]:;;;;;
    # --- expected;;;;;
    # +++ actual;;;;;
    # @@ -109,6 +109,53 @@;;;;;
    #           #<ActiveRecord::TypeCaster::Map:0xXXXXXX;;;;;
    #           @klass=;;;;;
    #           Dependency(id: integer, rubygem_id: integer, version_id: integer)>>,;;;;;
"    # +               name=""""version_id"""">>>>,";;;;;
    # +        #<Arel::Nodes::InnerJoin:0xXXXXXX;;;;;
    # +         @left=;;;;;
    # +          #<Arel::Nodes::TableAlias:0xXXXXXX;;;;;
    # +           @left=;;;;;
    # +            #<Arel::Table:0xXXXXXX;;;;;
    # +             @klass=;;;;;
    # +              Version(id: integer, rubygem_id: integer, position: integer, indexed: boolean),;;;;;
"    # +             @name=""""versions"""",";;;;;
    # +             @table_alias=nil,;;;;;
    # +             @type_caster=;;;;;
    # +              #<ActiveRecord::TypeCaster::Map:0xXXXXXX;;;;;
    # +               @klass=;;;;;
    # +                Version(id: integer, rubygem_id: integer, position: integer, indexed: boolean)>>,;;;;;
"    # +           @right=""""versions_dependencies"""">,";;;;;
    # +         @right=;;;;;
    # +          #<Arel::Nodes::On:0xXXXXXX;;;;;
    # +           @expr=;;;;;
    # +            #<Arel::Nodes::Equality:0xXXXXXX;;;;;
    # +             @left=;;;;;
    # +              #<struct Arel::Attributes::Attribute;;;;;
    # +               relation=;;;;;
    # +                #<Arel::Nodes::TableAlias:0xXXXXXX;;;;;
    # +                 @left=;;;;;
    # +                  #<Arel::Table:0xXXXXXX;;;;;
    # +                   @klass=;;;;;
    # +                    Version(id: integer, rubygem_id: integer, position: integer, indexed: boolean),;;;;;
"    # +                   @name=""""versions"""",";;;;;
    # +                   @table_alias=nil,;;;;;
    # +                   @type_caster=;;;;;
    # +                    #<ActiveRecord::TypeCaster::Map:0xXXXXXX;;;;;
    # +                     @klass=;;;;;
    # +                      Version(id: integer, rubygem_id: integer, position: integer, indexed: boolean)>>,;;;;;
"    # +                 @right=""""versions_dependencies"""">,";;;;;
"    # +               name=""""id"""">,";;;;;
    # +             @right=;;;;;
    # +              #<struct Arel::Attributes::Attribute;;;;;
    # +               relation=;;;;;
    # +                #<Arel::Table:0xXXXXXX;;;;;
    # +                 @klass=;;;;;
    # +                  Dependency(id: integer, rubygem_id: integer, version_id: integer),;;;;;
"    # +                 @name=""""dependencies"""",";;;;;
    # +                 @table_alias=nil,;;;;;
    # +                 @type_caster=;;;;;
    # +                  #<ActiveRecord::TypeCaster::Map:0xXXXXXX;;;;;
    # +                   @klass=;;;;;
    # +                    Dependency(id: integer, rubygem_id: integer, version_id: integer)>>,;;;;;
"    #         name=""""version_id"""">>>>]>,";;;;;
    #   @wheres=;;;;;
    #     [#<Arel::Nodes::And:0xXXXXXX;;;;;
    # @@ -213,6 +260,8 @@;;;;;
"    #     ON """"rubygems"""".""""id"""" = """"versions"""".""""rubygem_id""""";;;;;
"    #   INNER JOIN """"dependencies""""";;;;;
"    #     ON """"versions"""".""""id"""" = """"dependencies"""".""""version_id""""";;;;;
"    # +    INNER JOIN """"versions"""" """"versions_dependencies""""";;;;;
"    # +      ON """"versions_dependencies"""".""""id"""" = """"dependencies"""".""""version_id""""";;;;;
    #   WHERE;;;;;
"    #   """"dependencies"""".""""rubygem_id"""" = ?";;;;;
"    #   AND """"versions"""".""""indexed"""" = ?";;;;;
      ;;;;;
    assert_equal rubygem1.reverse_dependencies_no_join.arel.ast, rubygem1.reverse_dependencies.arel.ast;;;;;
  end;;;;;
  ;;;;;
;;;;;
  def test_assoc_2;;;;;
    rubygem1 = Rubygem.create!;;;;;
    v1 = Version.create!(indexed: true, position: 0, rubygem: rubygem1);;;;;
    rubygem2 = Rubygem.create!;;;;;
    v2 = Version.create!(indexed: true, position: 0, rubygem: rubygem2);;;;;
    d = v2.dependencies.create!(rubygem: rubygem1);;;;;
    ;;;;;
    assert_equal [d], rubygem1.incoming_dependencies;;;;;
    # shows that the joins is necessary;;;;;
    assert_raises(ActiveRecord::StatementInvalid) { rubygem1.incoming_dependencies_no_join.to_a };;;;;
  end;;;;;
  ;;;;;
  def mu_pp(obj);;;;;
    case obj;;;;;
    when Arel::Nodes::SelectStatement;;;;;
      rule = AnbtSql::Rule.new;;;;;
      rule.keyword = AnbtSql::Rule::KEYWORD_UPPER_CASE;;;;;
"      rule.kw_multi_words << """"INNER JOIN""""";;;;;
"      rule.kw_nl_x << """"INNER JOIN""""";;;;;
"      rule.indent_string = """"  """"";;;;;
      ;;;;;
"      [""""AST:"""", obj.pretty_inspect, """"SQL:"""",";;;;;
"        AnbtSql::Formatter.new(rule).format(obj.to_sql)].join(""""\n\n"""")";;;;;
    else;;;;;
      obj.pretty_inspect;;;;;
    end;;;;;
  end;;;;;
end;;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
"The additional join should not be added, since it's an inner join and the `""""versions"""".""""id"""" = """"dependencies"""".""""version_id""""` restriction guarantees it does not add any additional filtering";;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
"There is an unused join to `""""versions"""" """"versions_dependencies""""`";;;;;
;;;;;
### System configuration;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.3.0;;;;;
",2024-03-06T01:49:42Z,2024-03-06T01:49:42Z,[]
2169291575,ActiveRecord::Encryption is encrypting/filtering other similar named attributes,### Steps to reproduce";;;;;
;;;;;
#NOM?;;;;;
```bash;;;;;
  bin/rails g model User first_name last_name email other_first_name;;;;;
  bin/rails db:migrate;;;;;
```;;;;;
#NOM?;;;;;
```ruby;;;;;
User.encrypts(:first_name);;;;;
```;;;;;
;;;;;
#NOM?;;;;;
```ruby;;;;;
"user = User.new(first_name: """"Hello"""", last_name: """"World"""", other_first_name: """"Hi"""")";;;;;
;;;;;
# This outputs;;;;;
"=> #<User:0x000000010c5ea648 id: nil, first_name: """"[FILTERED]"""", last_name: """"World"""", email: nil, other_first_name: """"[FILTERED]"""", created_at: nil, updated_at: nil>";;;;;
;;;;;
# Encrypted attributes only has :first_name in the set;;;;;
User.encrypted_attributes;;;;;
=> <Set: {:first_name}>;;;;;
```;;;;;
"<img width=""""654"""" alt=""""Screenshot 2024-03-05 at 7 21 18 PM"""" src=""""https://github.com/rails/rails/assets/27268721/bbb18517-a068-4982-97ea-39cbd5f492a5"""">";;;;;
;;;;;
### Expected behavior;;;;;
- `other_first_name` should not be [FILTERED];;;;;
;;;;;
### Actual behavior;;;;;
- `other_first_name` is `[FILTERED]`;;;;;
;;;;;
### System configuration;;;;;
**Rails version**: `Edge`;;;;;
;;;;;
**Ruby version**: 3.2.2;;;;;
",2024-03-05T13:52:33Z,2024-04-06T06:49:55Z,[{'id': 107194, 'node_id': 'MDU6TGFiZWwxMDcxOTQ=', 'url': 'https://api.github.com/repos/rails/rails/labels/activesupport', 'name': 'activesupport', 'color': 'FC9300', 'default': False, 'description': None}, {'id': 41328116, 'node_id': 'MDU6TGFiZWw0MTMyODExNg==', 'url': 'https://api.github.com/repos/rails/rails/labels/attached%20PR', 'name': 'attached PR', 'color': '006b75', 'default': False, 'description': None}]""";;;;;
"2168115785,Raise on `in_batches` used on a relation with unpersisted records,""Prior https://github.com/rails/rails/pull/48876 using `in_batches` on a relation with unpersisted records would work but new records will not be included in the iteration. ";;;;;
;;;;;
Currently using `in_batches` on a loaded relation with unpersisted records will fail when we try to sort records by `id` as new records don't have `id` set and comparison with `nil` fails.;;;;;
;;;;;
Since both raising an ambiguous comparison error or implicitly skipping new records seem sub-option we are proposing to raise a clear error to let application explicitly decide whether it needs to iterate on a loaded relation in slices (i.e. `each_slice`) or explicitly drop / save the un-persisted record and continue using `in_batches` ;;;;;
;;;;;
"cc: @garyhtou "",2024-03-05T01:52:09Z,2024-03-14T06:55:50Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2168018086,QueryAttributes treated as strings in exec_query,""### Steps to reproduce";;;;;
;;;;;
I have a library [dynamic_records](https://github.com/LukeClancy/dynamic-records-meritfront) that uses exec_query alongside QueryAttributes to write sql. Recently I updated rails, pg and psql to a recent version and found that exec_query no longer works as expected.;;;;;
;;;;;
exec_query seems to be converting all parameters into strings. I do not believe this is expected functionality.;;;;;
;;;;;
```ruby;;;;;
value = 1;;;;;
type = ActiveRecord::Type::Integer.new;;;;;
qa = ActiveRecord::Relation::QueryAttribute.new('int_input', value, type);;;;;
"x = ActiveRecord::Base.connection.exec_query(""""select $1"""", 'query name', [qa])";;;;;
out_v = x.rows.first.first;;;;;
;;;;;
"puts """"value: #{out_v.inspect}, class: #{out_v.class.to_s}""""";;;;;
```;;;;;
;;;;;
### Expected behavior;;;;;
"value: 1, class: Integer""""";;;;;
;;;;;
### Actual behavior;;;;;
"value \""""1\"""", class: String""""";;;;;
;;;;;
### System configuration;;;;;
ruby 3.2.2p53;;;;;
rails (7.1.3.2);;;;;
activemodel (= 7.1.3.2);;;;;
activerecord (= 7.1.3.2);;;;;
pg (1.5.6);;;;;
;;;;;
"psql (PostgreSQL) 16.2 (Ubuntu 16.2-1.pgdg22.04+1)"",2024-03-05T00:02:57Z,2024-03-05T23:37:09Z,""[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2167901158,Unexpected behaviour for CTE joins when CTE has same name as a relation,""### Steps to reproduce";;;;;
;;;;;
We are big users of CTEs and have been using [vlado/activerecord-cte](/vlado/activerecord-cte) for many years now. While trying to upgrade to Rails 7.1, we came across this situation which previously worked in Vlado's extension (stripped down code follows):;;;;;
;;;;;
```ruby;;;;;
class Task < ApplicationRecord;;;;;
  has_many :project_resources;;;;;
  has_many :projects, through: :project_resources;;;;;
end;;;;;
;;;;;
class ProjectResource < ApplicationRecord;;;;;
  belongs_to :resource, polymorphic: true;;;;;
  belongs_to :project;;;;;
end;;;;;
;;;;;
class Project < ApplicationRecord;;;;;
  has_many :project_resources;;;;;
  has_many :tasks, through: :project_resources, source: :resource, source_type: 'Task';;;;;
end;;;;;
;;;;;
Project.with(tasks: Task.active).joins(:tasks);;;;;
```;;;;;
;;;;;
With the extension, this would produce SQL like the following:;;;;;
;;;;;
```sql;;;;;
WITH tasks AS (;;;;;
  SELECT tasks.*;;;;;
  FROM tasks;;;;;
  WHERE active;;;;;
);;;;;
  SELECT projects.*;;;;;
  FROM projects;;;;;
  JOIN project_resources ON project_resources.resource_type = 'Task' AND project_resources.project_id = projects.id;;;;;
  JOIN tasks ON tasks.id = project_resources.resource_id;;;;;
```;;;;;
;;;;;
With the Rails 7.1 CTE joins, this produces the following:;;;;;
;;;;;
```sql;;;;;
WITH tasks AS (;;;;;
  SELECT tasks.*;;;;;
  FROM tasks;;;;;
  WHERE active;;;;;
);;;;;
  SELECT projects.*;;;;;
  FROM projects;;;;;
  JOIN tasks ON tasks.project_id = projects.id;;;;;
```;;;;;
;;;;;
Which is an invalid SQL query, as `project_id` doesn't exist on `tasks` but rather exists on the `project_resources` relation which sits in between `Task` and `Project`. This only happens when the CTE name is the same as an association. For instance, this does not change the join conditions:;;;;;
;;;;;
```ruby;;;;;
Project.with(filtered_tasks: Task.active).joins(:tasks);;;;;
```;;;;;
;;;;;
Produces;;;;;
;;;;;
```sql;;;;;
WITH filtered_tasks AS (;;;;;
  SELECT tasks.*;;;;;
  FROM tasks;;;;;
  WHERE active;;;;;
);;;;;
  SELECT projects.*;;;;;
  FROM projects;;;;;
  JOIN project_resources ON project_resources.resource_type = 'Task' AND project_resources.project_id = projects.id;;;;;
  JOIN tasks.id = project_resources.resource_id;;;;;
```;;;;;
;;;;;
Where the join conditions are retained as expected. (The `filtered_tasks` relation isn't joined here, of course, but the point is is that the `:tasks` join itself is unaffected by the `#with` call.);;;;;
;;;;;
Masking a table name in a CTE is a very useful capability, but it's not really possible if masking the table impacts the joins. ;;;;;
;;;;;
### Expected behavior;;;;;
;;;;;
I would expect that the joins would not be affected if the relation alias in the `WITH` query is masking an actual relation.;;;;;
;;;;;
### Actual behavior;;;;;
;;;;;
The join condition should remain unaffected in the case of the CTE alias being the same as a relation name.;;;;;
;;;;;
### System configuration;;;;;
;;;;;
**Rails version**: 7.1.3.2;;;;;
;;;;;
**Ruby version**: 3.3.0;;;;;
;;;;;
### Potential Fix;;;;;
;;;;;
After playing with it a bit, the following appears to satisfy all of our unit tests for our CTEs:;;;;;
;;;;;
```diff;;;;;
diff --git a/activerecord/lib/active_record/relation/query_methods.rb b/activerecord/lib/active_record/relation/query_methods.rb;;;;;
index 5d63709c3a..f17ed6b562 100644;;;;;
#NOM?;;;;;
#NOM?;;;;;
@@ -1625,7 +1625,7 @@ def build_from;;;;;
 ;;;;;
       def select_named_joins(join_names, stashed_joins = nil, &block);;;;;
         cte_joins, associations = join_names.partition do |join_name|;;;;;
-          Symbol === join_name && with_values.any? { _1.key?(join_name) };;;;;
+          Symbol === join_name && with_values.any? { _1.key?(join_name) } && !reflections[join_name.to_s];;;;;
         end;;;;;
 ;;;;;
         cte_joins.each do |cte_name|;;;;;
```;;;;;
;;;;;
This does not appear to break any existing ActiveRecord tests, so if there is interest in using this I can write up a patch that includes tests.;;;;;
",2024-03-04T22:28:36Z,2024-04-06T22:44:52Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2165733298,[Fix #50118] `:prepend` option not working with `run_after_transaction_callbacks_in_order_defined` config,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
<!--;;;;;
Describe why this Pull Request needs to be merged. What bug have you fixed? What feature have you added? Why is it important?;;;;;
"If you are fixing a specific issue, include """"Fixes #ISSUE"""" (replace with the issue number, remove the quotes) and the issue will be linked to this PR.";;;;;
-->;;;;;
;;;;;
Fixes #50118.;;;;;
;;;;;
### Detail;;;;;
;;;;;
Ensures that the `:prepend` option for after transaction callbacks is respected when `config.run_after_transaction_callbacks_in_order_defined = true`. This allows prepending certain `after_commit` and `after_rollback` callbacks while still running the rest in the order defined on the model.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
<!-- Provide additional information such as benchmarks, reference to other repositories or alternative solutions. -->;;;;;
;;;;;
In addition to the tests here there is also [this script](https://github.com/rails/rails/issues/50118#issuecomment-1975502684) which I tested against.;;;;;
;;;;;
cc @ghiculescu;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-04T01:36:20Z,2024-03-04T05:20:42Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
"2165611366,[Fix #51242] Rework in_batches(use_ranges: true) to be more efficient,""<!--";;;;;
Thanks for contributing to Rails!;;;;;
;;;;;
Please do not make *Draft* pull requests, as they still send;;;;;
notifications to everyone watching the Rails repo.;;;;;
;;;;;
Create a pull request when it is ready for review and feedback;;;;;
from the Rails team :).;;;;;
;;;;;
If your pull request affects documentation or any non-code;;;;;
changes, guidelines for those changes are [available;;;;;
here](https://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-documentation);;;;;
;;;;;
About this template;;;;;
;;;;;
The following template aims to help contributors write a good description for their pull requests.;;;;;
We'd like you to provide a description of the changes in your pull request (i.e. bugs fixed or features added), motivation behind the changes, and complete the checklist below before opening a pull request.;;;;;
;;;;;
Feel free to discard it if you need to (e.g. when you just fix a typo). -->;;;;;
;;;;;
### Motivation / Background;;;;;
;;;;;
Fixes https://github.com/rails/rails/issues/51242;;;;;
;;;;;
In ActiveRecord 7.1, a new option was added to [ActiveRecord::Batches#in_batches](https://api.rubyonrails.org/classes/ActiveRecord/Batches.html#method-i-in_batches), `use_ranges: true`, that enables a more efficient way to generate queries from the provided scope for each batch.;;;;;
;;;;;
The resulting queries use ranges to select record ids, e.g. `WHERE id > 10000 AND id <= 20000` instead of passing a possibly very long list of ids in an `IN` clause, e.g. `IN (10000, 10001, [...,] 19999, 20000)`.;;;;;
;;;;;
This option was implemented in https://github.com/rails/rails/pull/45414.;;;;;
;;;;;
The implementation of `use_ranges: true` relies on the already implemented strategy to select all ids from the range (needed for `use_ranges: false`), when generating the scope for each batch.;;;;;
;;;;;
The typical SQL query to generate a scope for a batch is (example with batches of 10k records):;;;;;
;;;;;
```sql;;;;;
"SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
```;;;;;
;;;;;
But subsequently, all these ids but the last one are discarded:;;;;;
;;;;;
https://github.com/rails/rails/blob/v7.1.3.2/activerecord/lib/active_record/relation/batches.rb#L379-L380;;;;;
;;;;;
**This method wastes resources in the database (CPU, I/O), in transit (bandwidth) and in the Ruby process (RAM).**;;;;;
;;;;;
This Pull Request is a proposal to save these resources by implementing **an additional optimisation**.;;;;;
;;;;;
### Detail;;;;;
;;;;;
The description below applies only to the use of `in_batches` **with** the option `use_ranges: true`.;;;;;
;;;;;
Instead of returning all the ids for each batch, we use `OFFSET` to search for the last id in the next batch and return just one id, e.g.;;;;;
;;;;;
```diff;;;;;
  -- queries for all batches but the last (before/after);;;;;
"- SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
"+ SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 1 OFFSET 9999";;;;;
```;;;;;
;;;;;
There is one downside, however.;;;;;
;;;;;
Our `OFFSET`-based query won't be able to return the last id if the next batch is smaller than the limit or if there's no next batch. We always need one additional query to get the size and last id of the very last batch. We use the same query as before the optim for that purpose:;;;;;
;;;;;
```diff;;;;;
  -- queries for the last batch (before/after);;;;;
"- SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
"+ SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 1 OFFSET 9999";;;;;
"+ SELECT """"users"""".""""id"""" FROM """"users"""" WHERE """"users"""".""""id"""" > ... ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
```;;;;;
;;;;;
Unless we only have a handful of small batches, this strategy is a winner overall, as it reduces the time and network resources spent generating batches, as shown by the benchmark below.;;;;;
;;;;;
### Additional information;;;;;
;;;;;
#### Benchmark;;;;;
;;;;;
Let's reuse the benchmark from the description of https://github.com/rails/rails/pull/45414, i.e. the same `users` table with `10M` records, but with two modifications:;;;;;
;;;;;
* Batches of 10k records instead of 1k;;;;;
* No call to `batch.count` on each batch since we are measuring only on the time and resources needed to generate the scopes, not to use them.;;;;;
;;;;;
Here is the code used:;;;;;
;;;;;
```sql;;;;;
CREATE TABLE users (id bigserial PRIMARY KEY, val integer DEFAULT 0);;;;;
INSERT INTO users SELECT i FROM generate_series(1, 10000000) AS i;;;;;
```;;;;;
;;;;;
```ruby;;;;;
start = Process.clock_gettime(Process::CLOCK_MONOTONIC);;;;;
;;;;;
count = 0;;;;;
User.in_batches(of: 10_000) do |batch|;;;;;
  count += 1  # previously: batch.count, but we don't want to trigger any other queries in this benchmark;;;;;
end;;;;;
;;;;;
"puts """"Count = #{count}""""";;;;;
elapsed = Process.clock_gettime(Process::CLOCK_MONOTONIC) - start;;;;;
"puts """"Elapsed: #{elapsed}s""""";;;;;
```;;;;;
;;;;;
The benchmark is executed on a single machine (a recent macbook), with a round-trip-time < 1ms.;;;;;
;;;;;
The network (I/O) stats are obtained by comparing the result of this command before/after a benchmark run:;;;;;
;;;;;
```;;;;;
docker stats --no-stream postgres --format 'table {{.NetIO}}';;;;;
```;;;;;
;;;;;
**Here are the results:**;;;;;
;;;;;
| Batching method                      | Duration | Network (I/O)     |;;;;;
|--------------------------------------|---------:|------------------:|;;;;;
| in_batches(use_ranges: true)         |    5.6 s.  |   &nbsp;&nbsp;1.2 MB / &nbsp;&nbsp;180 MB   |;
| in_batches(use_ranges: true) + optim from this PR |     2.3 s.  |   &nbsp;&nbsp;< 0.5 MB /  < 0.2 MB   |;;;
;;;;;
In this benchmark, we managed to **generate scopes for batches `x2.4` times faster and with `x900` times less bandwidth**. These results will of course typically vary with the batch size used, and the network speed.;;;;;
;;;;;
The absolute values may not seem like huge gains, but I'm considering using `in_batches(use_ranges: true)` on tables with over 3 billion records, where this benchmark would show a saving of at least `16+ minutes` and `52.7 GB` of bandwidth (+ the database resources needed to extract/send this traffic).;;;;;
;;;;;
#### Other strategies considered;;;;;
;;;;;
Using `OFFSET` is not be the only way to achieve the same kind of optimisation.;;;;;
;;;;;
For example, we could consider using a strategy based on the calculation of the maximum id + batch size for each batch (details folded below).;;;;;
;;;;;
<details>;;;;;
  <summary>Using a CTE</summary>;;;;;
<br />;;;;;
We could use a CTE like this one:;;;;;
;;;;;
```sql;;;;;
"WITH """"batch_ids"""" AS (";;;;;
    -- same query as today;;;;;
"    SELECT """"users"""".""""id"""" FROM """"users"""" WHERE (id > 10000) ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
);;;;;
SELECT COUNT(id) AS last_batch_size, MAX(id) AS last_batch_id FROM batch_ids;;;;;
```;;;;;
;;;;;
"This would be advantageous, as we would not have to use that """"extra"""" query for the last batch as we did above.";;;;;
;;;;;
Nevertheless, using a CTE would have the following downsides:;;;;;
;;;;;
1. CTEs are not supported yet by all RDBMS supported by Active Record (MySQL < 8.0);;;;;
"2. To my knowledge, ActiveRecord does not provide any way to easily generate a query with two distinct calculations such as a count and a maximum. The """"manual"""" workarounds for this could be complicated.";;;;;
;;;;;
For the record, the query above can be generated with:;;;;;
;;;;;
```ruby;;;;;
User.connection.select_one(;;;;;
  User;;;;;
    .with(batch_ids: User.select('id').where('id > 10000').order(:id).limit(10000));;;;;
    .from('batch_ids');;;;;
    .select('COUNT(id) AS last_batch_size', 'MAX(id) AS last_batch_id');;;;;
);;;;;
```;;;;;
</details>;;;;;
;;;;;
;;;;;
<details>;;;;;
  <summary>Using a subquery</summary>;;;;;
<br />;;;;;
We could use a subquery like this one:;;;;;
;;;;;
```sql;;;;;
SELECT;;;;;
    COUNT(id) AS last_batch_size, MAX(id) AS last_batch_id;;;;;
FROM (;;;;;
    -- same query as today;;;;;
"    SELECT """"users"""".""""id"""" FROM """"users"""" WHERE (id > 10000) ORDER BY """"users"""".""""id"""" ASC LIMIT 10000";;;;;
) subquery;;;;;
```;;;;;
;;;;;
Even better than the CTE version because this would be compatible with all RDBMS supported by ActiveRecord.;;;;;
;;;;;
For the record, the query above can be generated with:;;;;;
;;;;;
```ruby;;;;;
User.connection.select_one(;;;;;
  User.select('COUNT(id) AS last_batch_size', 'MAX(id) AS last_batch_id').from(;;;;;
    User.select('id').where('id > 10000').order(:id).limit(10000);;;;;
  );;;;;
);;;;;
```;;;;;
;;;;;
But to support all sorts of primary keys (including composite) and multiple calculations in a single query, I suspect some complicated work is required in Active Record. If you think this is feasible at a reasonable cost, please provide some guidance 🙏 ;;;;;
</details>;;;;;
;;;;;
;;;;;
### Checklist;;;;;
;;;;;
Before submitting the PR make sure the following are checked:;;;;;
;;;;;
* [x] This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.;;;;;
* [x] Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: `[Fix #issue-number]`;;;;;
* [x] Tests are added or updated if you fix a bug or add a feature.;;;;;
* [x] CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.;;;;;
",2024-03-03T23:02:55Z,2024-04-06T22:48:12Z,[{'id': 107191, 'node_id': 'MDU6TGFiZWwxMDcxOTE=', 'url': 'https://api.github.com/repos/rails/rails/labels/activerecord', 'name': 'activerecord', 'color': '0b02e1', 'default': False, 'description': None}]""";;;;;
